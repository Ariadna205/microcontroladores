

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Nov 15 15:38:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x7E,2
    56     0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     008F                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0094                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     0105                     	;# 
   155     0107                     	;# 
   156     0108                     	;# 
   157     0109                     	;# 
   158     010C                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0185                     	;# 
   164     0187                     	;# 
   165     0188                     	;# 
   166     0189                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     008F                     	;# 
   214     0090                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     0105                     	;# 
   233     0107                     	;# 
   234     0108                     	;# 
   235     0109                     	;# 
   236     010C                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     0185                     	;# 
   242     0187                     	;# 
   243     0188                     	;# 
   244     0189                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000D                     	;# 
   261     000E                     	;# 
   262     000E                     	;# 
   263     000F                     	;# 
   264     0010                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001D                     	;# 
   280     001E                     	;# 
   281     001F                     	;# 
   282     0081                     	;# 
   283     0085                     	;# 
   284     0086                     	;# 
   285     0087                     	;# 
   286     0088                     	;# 
   287     0089                     	;# 
   288     008C                     	;# 
   289     008D                     	;# 
   290     008E                     	;# 
   291     008F                     	;# 
   292     0090                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     0105                     	;# 
   311     0107                     	;# 
   312     0108                     	;# 
   313     0109                     	;# 
   314     010C                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0185                     	;# 
   320     0187                     	;# 
   321     0188                     	;# 
   322     0189                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325     0000                     	;# 
   326     0001                     	;# 
   327     0002                     	;# 
   328     0003                     	;# 
   329     0004                     	;# 
   330     0005                     	;# 
   331     0006                     	;# 
   332     0007                     	;# 
   333     0008                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000D                     	;# 
   339     000E                     	;# 
   340     000E                     	;# 
   341     000F                     	;# 
   342     0010                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0013                     	;# 
   346     0014                     	;# 
   347     0015                     	;# 
   348     0015                     	;# 
   349     0016                     	;# 
   350     0017                     	;# 
   351     0018                     	;# 
   352     0019                     	;# 
   353     001A                     	;# 
   354     001B                     	;# 
   355     001B                     	;# 
   356     001C                     	;# 
   357     001D                     	;# 
   358     001E                     	;# 
   359     001F                     	;# 
   360     0081                     	;# 
   361     0085                     	;# 
   362     0086                     	;# 
   363     0087                     	;# 
   364     0088                     	;# 
   365     0089                     	;# 
   366     008C                     	;# 
   367     008D                     	;# 
   368     008E                     	;# 
   369     008F                     	;# 
   370     0090                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0093                     	;# 
   376     0094                     	;# 
   377     0095                     	;# 
   378     0096                     	;# 
   379     0097                     	;# 
   380     0098                     	;# 
   381     0099                     	;# 
   382     009A                     	;# 
   383     009B                     	;# 
   384     009C                     	;# 
   385     009D                     	;# 
   386     009E                     	;# 
   387     009F                     	;# 
   388     0105                     	;# 
   389     0107                     	;# 
   390     0108                     	;# 
   391     0109                     	;# 
   392     010C                     	;# 
   393     010C                     	;# 
   394     010D                     	;# 
   395     010E                     	;# 
   396     010F                     	;# 
   397     0185                     	;# 
   398     0187                     	;# 
   399     0188                     	;# 
   400     0189                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0000                     	;# 
   404     0001                     	;# 
   405     0002                     	;# 
   406     0003                     	;# 
   407     0004                     	;# 
   408     0005                     	;# 
   409     0006                     	;# 
   410     0007                     	;# 
   411     0008                     	;# 
   412     0009                     	;# 
   413     000A                     	;# 
   414     000B                     	;# 
   415     000C                     	;# 
   416     000D                     	;# 
   417     000E                     	;# 
   418     000E                     	;# 
   419     000F                     	;# 
   420     0010                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0015                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001B                     	;# 
   434     001C                     	;# 
   435     001D                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     0081                     	;# 
   439     0085                     	;# 
   440     0086                     	;# 
   441     0087                     	;# 
   442     0088                     	;# 
   443     0089                     	;# 
   444     008C                     	;# 
   445     008D                     	;# 
   446     008E                     	;# 
   447     008F                     	;# 
   448     0090                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0093                     	;# 
   454     0094                     	;# 
   455     0095                     	;# 
   456     0096                     	;# 
   457     0097                     	;# 
   458     0098                     	;# 
   459     0099                     	;# 
   460     009A                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     009F                     	;# 
   466     0105                     	;# 
   467     0107                     	;# 
   468     0108                     	;# 
   469     0109                     	;# 
   470     010C                     	;# 
   471     010C                     	;# 
   472     010D                     	;# 
   473     010E                     	;# 
   474     010F                     	;# 
   475     0185                     	;# 
   476     0187                     	;# 
   477     0188                     	;# 
   478     0189                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0000                     	;# 
   482     0001                     	;# 
   483     0002                     	;# 
   484     0003                     	;# 
   485     0004                     	;# 
   486     0005                     	;# 
   487     0006                     	;# 
   488     0007                     	;# 
   489     0008                     	;# 
   490     0009                     	;# 
   491     000A                     	;# 
   492     000B                     	;# 
   493     000C                     	;# 
   494     000D                     	;# 
   495     000E                     	;# 
   496     000E                     	;# 
   497     000F                     	;# 
   498     0010                     	;# 
   499     0011                     	;# 
   500     0012                     	;# 
   501     0013                     	;# 
   502     0014                     	;# 
   503     0015                     	;# 
   504     0015                     	;# 
   505     0016                     	;# 
   506     0017                     	;# 
   507     0018                     	;# 
   508     0019                     	;# 
   509     001A                     	;# 
   510     001B                     	;# 
   511     001B                     	;# 
   512     001C                     	;# 
   513     001D                     	;# 
   514     001E                     	;# 
   515     001F                     	;# 
   516     0081                     	;# 
   517     0085                     	;# 
   518     0086                     	;# 
   519     0087                     	;# 
   520     0088                     	;# 
   521     0089                     	;# 
   522     008C                     	;# 
   523     008D                     	;# 
   524     008E                     	;# 
   525     008F                     	;# 
   526     0090                     	;# 
   527     0091                     	;# 
   528     0092                     	;# 
   529     0093                     	;# 
   530     0093                     	;# 
   531     0093                     	;# 
   532     0094                     	;# 
   533     0095                     	;# 
   534     0096                     	;# 
   535     0097                     	;# 
   536     0098                     	;# 
   537     0099                     	;# 
   538     009A                     	;# 
   539     009B                     	;# 
   540     009C                     	;# 
   541     009D                     	;# 
   542     009E                     	;# 
   543     009F                     	;# 
   544     0105                     	;# 
   545     0107                     	;# 
   546     0108                     	;# 
   547     0109                     	;# 
   548     010C                     	;# 
   549     010C                     	;# 
   550     010D                     	;# 
   551     010E                     	;# 
   552     010F                     	;# 
   553     0185                     	;# 
   554     0187                     	;# 
   555     0188                     	;# 
   556     0189                     	;# 
   557     018C                     	;# 
   558     018D                     	;# 
   559                           
   560                           	psect	idataBANK1
   561     0A5E                     __pidataBANK1:
   562                           
   563                           ;initializer for keypad_getkey@F1398
   564     0A5E  3431               	retlw	49
   565     0A5F  3432               	retlw	50
   566     0A60  3433               	retlw	51
   567     0A61  3441               	retlw	65
   568     0A62  3434               	retlw	52
   569     0A63  3435               	retlw	53
   570     0A64  3436               	retlw	54
   571     0A65  3442               	retlw	66
   572     0A66  3437               	retlw	55
   573     0A67  3438               	retlw	56
   574     0A68  3439               	retlw	57
   575     0A69  3443               	retlw	67
   576     0A6A  342A               	retlw	42
   577     0A6B  3430               	retlw	48
   578     0A6C  3423               	retlw	35
   579     0A6D  3444               	retlw	68
   580                           
   581                           	psect	strings
   582     0604                     __pstrings:
   583     0604                     stringtab:
   584     0604                     __stringtab:
   585                           
   586                           ;	String table - string pointers are 1 byte each
   587     0604  1BFF               	btfsc	btemp+1,7
   588     0605  2E0E               	ljmp	stringcode
   589     0606  1383               	bcf	3,7
   590     0607  187F               	btfsc	btemp+1,0
   591     0608  1783               	bsf	3,7
   592     0609  0800               	movf	0,w
   593     060A  0A84               	incf	4,f
   594     060B  1903               	skipnz
   595     060C  0AFF               	incf	btemp+1,f
   596     060D  0008               	return
   597     060E                     stringcode:
   598     060E                     stringdir:
   599     060E  3006               	movlw	high stringdir
   600     060F  008A               	movwf	10
   601     0610  0804               	movf	4,w
   602     0611  0A84               	incf	4,f
   603     0612  0782               	addwf	2,f
   604     0613                     __stringbase:
   605     0613  3400               	retlw	0
   606     0614                     __end_of__stringtab:
   607     0614                     _password:
   608     0614  3431               	retlw	49
   609     0615  3432               	retlw	50
   610     0616  3433               	retlw	51
   611     0617  3434               	retlw	52
   612     0618  3435               	retlw	53
   613     0619                     __end_of_password:
   614     0001                     _TMR0	set	1
   615     000B                     _INTCONbits	set	11
   616     0008                     _PORTDbits	set	8
   617     0005                     _PORTAbits	set	5
   618     0008                     _PORTD	set	8
   619     0007                     _PORTC	set	7
   620     0007                     _PORTCbits	set	7
   621     0006                     _PORTB	set	6
   622     001E                     _ADRESH	set	30
   623     001F                     _ADCON0bits	set	31
   624     0088                     _TRISD	set	136
   625     008F                     _OSCCON	set	143
   626     0087                     _TRISC	set	135
   627     0081                     _OPTION_REGbits	set	129
   628     0086                     _TRISB	set	134
   629     009E                     _ADRESL	set	158
   630     009F                     _ADCON1bits	set	159
   631     042B                     _TRISA3	set	1067
   632     042A                     _TRISA2	set	1066
   633     0429                     _TRISA1	set	1065
   634     0428                     _TRISA0	set	1064
   635     043F                     _TRISC7	set	1087
   636     043E                     _TRISC6	set	1086
   637     043D                     _TRISC5	set	1085
   638     043C                     _TRISC4	set	1084
   639     0439                     _TRISC1	set	1081
   640     0438                     _TRISC0	set	1080
   641     0188                     _ANSELbits	set	392
   642     0189                     _ANSELH	set	393
   643     0619                     STR_6:
   644     0619  3453               	retlw	83	;'S'
   645     061A  3449               	retlw	73	;'I'
   646     061B  3453               	retlw	83	;'S'
   647     061C  3454               	retlw	84	;'T'
   648     061D  3445               	retlw	69	;'E'
   649     061E  344D               	retlw	77	;'M'
   650     061F  3441               	retlw	65	;'A'
   651     0620  3420               	retlw	32	;' '
   652     0621  3442               	retlw	66	;'B'
   653     0622  344C               	retlw	76	;'L'
   654     0623  344F               	retlw	79	;'O'
   655     0624  3451               	retlw	81	;'Q'
   656     0625  3455               	retlw	85	;'U'
   657     0626  3445               	retlw	69	;'E'
   658     0627  3441               	retlw	65	;'A'
   659     0628  3444               	retlw	68	;'D'
   660     0629  344F               	retlw	79	;'O'
   661     062A  3400               	retlw	0
   662     062B                     STR_5:
   663     062B  3443               	retlw	67	;'C'
   664     062C  344C               	retlw	76	;'L'
   665     062D  3441               	retlw	65	;'A'
   666     062E  3456               	retlw	86	;'V'
   667     062F  3445               	retlw	69	;'E'
   668     0630  3420               	retlw	32	;' '
   669     0631  3449               	retlw	73	;'I'
   670     0632  344E               	retlw	78	;'N'
   671     0633  3443               	retlw	67	;'C'
   672     0634  344F               	retlw	79	;'O'
   673     0635  3452               	retlw	82	;'R'
   674     0636  3452               	retlw	82	;'R'
   675     0637  3445               	retlw	69	;'E'
   676     0638  3443               	retlw	67	;'C'
   677     0639  3454               	retlw	84	;'T'
   678     063A  3441               	retlw	65	;'A'
   679     063B  3400               	retlw	0
   680     063C                     STR_3:
   681     063C  3449               	retlw	73	;'I'
   682     063D  346E               	retlw	110	;'n'
   683     063E  3467               	retlw	103	;'g'
   684     063F  3472               	retlw	114	;'r'
   685     0640  3465               	retlw	101	;'e'
   686     0641  3473               	retlw	115	;'s'
   687     0642  3461               	retlw	97	;'a'
   688     0643  3472               	retlw	114	;'r'
   689     0644  3420               	retlw	32	;' '
   690     0645  3443               	retlw	67	;'C'
   691     0646  346C               	retlw	108	;'l'
   692     0647  3461               	retlw	97	;'a'
   693     0648  3476               	retlw	118	;'v'
   694     0649  3465               	retlw	101	;'e'
   695     064A  343A               	retlw	58	;':'
   696     064B  3400               	retlw	0
   697     064C                     STR_4:
   698     064C  3443               	retlw	67	;'C'
   699     064D  346C               	retlw	108	;'l'
   700     064E  3461               	retlw	97	;'a'
   701     064F  3476               	retlw	118	;'v'
   702     0650  3465               	retlw	101	;'e'
   703     0651  3420               	retlw	32	;' '
   704     0652  3443               	retlw	67	;'C'
   705     0653  346F               	retlw	111	;'o'
   706     0654  3472               	retlw	114	;'r'
   707     0655  3472               	retlw	114	;'r'
   708     0656  3465               	retlw	101	;'e'
   709     0657  3463               	retlw	99	;'c'
   710     0658  3474               	retlw	116	;'t'
   711     0659  3461               	retlw	97	;'a'
   712     065A  3400               	retlw	0
   713     065B                     STR_7:
   714     065B  3454               	retlw	84	;'T'
   715     065C  343A               	retlw	58	;':'
   716     065D  3420               	retlw	32	;' '
   717     065E  3425               	retlw	37	;'%'
   718     065F  3464               	retlw	100	;'d'
   719     0660  3443               	retlw	67	;'C'
   720     0661  3420               	retlw	32	;' '
   721     0662  344C               	retlw	76	;'L'
   722     0663  343A               	retlw	58	;':'
   723     0664  3420               	retlw	32	;' '
   724     0665  3425               	retlw	37	;'%'
   725     0666  3464               	retlw	100	;'d'
   726     0667  344C               	retlw	76	;'L'
   727     0668  3478               	retlw	120	;'x'
   728     0669  3400               	retlw	0
   729     066A                     STR_8:
   730     066A  3448               	retlw	72	;'H'
   731     066B  343A               	retlw	58	;':'
   732     066C  3420               	retlw	32	;' '
   733     066D  3425               	retlw	37	;'%'
   734     066E  3464               	retlw	100	;'d'
   735     066F  3420               	retlw	32	;' '
   736     0670  344F               	retlw	79	;'O'
   737     0671  343A               	retlw	58	;':'
   738     0672  3420               	retlw	32	;' '
   739     0673  3425               	retlw	37	;'%'
   740     0674  3464               	retlw	100	;'d'
   741     0675  3400               	retlw	0
   742     0676                     STR_1:
   743     0676  3442               	retlw	66	;'B'
   744     0677  3449               	retlw	73	;'I'
   745     0678  3445               	retlw	69	;'E'
   746     0679  344E               	retlw	78	;'N'
   747     067A  3456               	retlw	86	;'V'
   748     067B  3445               	retlw	69	;'E'
   749     067C  344E               	retlw	78	;'N'
   750     067D  3449               	retlw	73	;'I'
   751     067E  3444               	retlw	68	;'D'
   752     067F  344F               	retlw	79	;'O'
   753     0680  3400               	retlw	0
   754     0681                     STR_2:
   755     0681  3453               	retlw	83	;'S'
   756     0682  3465               	retlw	101	;'e'
   757     0683  3467               	retlw	103	;'g'
   758     0684  3475               	retlw	117	;'u'
   759     0685  3472               	retlw	114	;'r'
   760     0686  3469               	retlw	105	;'i'
   761     0687  3464               	retlw	100	;'d'
   762     0688  3461               	retlw	97	;'a'
   763     0689  3464               	retlw	100	;'d'
   764     068A  3400               	retlw	0
   765     068B                     STR_9:
   766     068B  3441               	retlw	65	;'A'
   767     068C  344C               	retlw	76	;'L'
   768     068D  3441               	retlw	65	;'A'
   769     068E  3452               	retlw	82	;'R'
   770     068F  344D               	retlw	77	;'M'
   771     0690  3441               	retlw	65	;'A'
   772     0691  3441               	retlw	65	;'A'
   773     0692  3441               	retlw	65	;'A'
   774     0693  3400               	retlw	0
   775     0694                     STR_10:
   776     0694  3441               	retlw	65	;'A'
   777     0695  344C               	retlw	76	;'L'
   778     0696  3445               	retlw	69	;'E'
   779     0697  3452               	retlw	82	;'R'
   780     0698  3454               	retlw	84	;'T'
   781     0699  3441               	retlw	65	;'A'
   782     069A  3400               	retlw	0
   783                           
   784                           	psect	cinit
   785     000F                     start_initialization:	
   786                           ; #config settings
   787                           
   788     000F                     __initialization:
   789                           
   790                           ; Initialize objects allocated to BANK1
   791     000F  1383               	bcf	3,7	;select IRP bank0
   792     0010  30DA               	movlw	low (__pdataBANK1+16)
   793     0011  00FD               	movwf	btemp+-1
   794     0012  300A               	movlw	high __pidataBANK1
   795     0013  00FE               	movwf	btemp
   796     0014  305E               	movlw	low __pidataBANK1
   797     0015  00FF               	movwf	btemp+1
   798     0016  30CA               	movlw	low __pdataBANK1
   799     0017  0084               	movwf	4
   800     0018  120A  158A  22AB  120A  118A  	fcall	init_ram0
   801                           
   802                           ; Clear objects allocated to BANK1
   803     001D  30A0               	movlw	low __pbssBANK1
   804     001E  0084               	movwf	4
   805     001F  30CA               	movlw	low (__pbssBANK1+42)
   806     0020  120A  158A  222A  120A  118A  	fcall	clear_ram0
   807                           
   808                           ; Clear objects allocated to BANK0
   809     0025  305F               	movlw	low __pbssBANK0
   810     0026  0084               	movwf	4
   811     0027  3070               	movlw	low (__pbssBANK0+17)
   812     0028  120A  158A  222A  120A  118A  	fcall	clear_ram0
   813                           
   814                           ; Clear objects allocated to COMMON
   815     002D  01FA               	clrf	__pbssCOMMON& (0+127)
   816     002E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   817     002F                     end_of_initialization:	
   818                           ;End of C runtime variable initialization code
   819                           
   820     002F                     __end_of__initialization:
   821     002F  0183               	clrf	3
   822     0030  120A  118A  2E9B   	ljmp	_main	;jump to C main() function
   823                           
   824                           	psect	bssCOMMON
   825     007A                     __pbssCOMMON:
   826     007A                     _ms_counter:
   827     007A                     	ds	2
   828                           
   829                           	psect	bssBANK0
   830     005F                     __pbssBANK0:
   831     005F                     _prec:
   832     005F                     	ds	2
   833     0061                     _valor_evento:
   834     0061                     	ds	2
   835     0063                     _sensor_hall:
   836     0063                     	ds	2
   837     0065                     _intensidad_luz:
   838     0065                     	ds	2
   839     0067                     _temp_celsius:
   840     0067                     	ds	2
   841     0069                     _timeout_ms:
   842     0069                     	ds	2
   843     006B                     _intentos:
   844     006B                     	ds	2
   845     006D                     _flags:
   846     006D                     	ds	1
   847     006E                     _ingresos:
   848     006E                     	ds	1
   849     006F                     _estado_actual:
   850     006F                     	ds	1
   851                           
   852                           	psect	bssBANK1
   853     00A0                     __pbssBANK1:
   854     00A0                     _dbuf:
   855     00A0                     	ds	32
   856     00C0                     _width:
   857     00C0                     	ds	2
   858     00C2                     _pass_user:
   859     00C2                     	ds	8
   860                           
   861                           	psect	dataBANK1
   862     00CA                     __pdataBANK1:
   863     00CA                     keypad_getkey@F1398:
   864     00CA                     	ds	16
   865                           
   866                           	psect	inittext
   867     0AA7                     init_fetch0:	
   868                           ;	Called with low address in FSR and high address in W
   869                           
   870     0AA7  087E               	movf	btemp,w
   871     0AA8  008A               	movwf	10
   872     0AA9  087F               	movf	btemp+1,w
   873     0AAA  0082               	movwf	2
   874     0AAB                     init_ram0:	
   875                           ;Called with:
   876                           ;	high address of idata address in btemp 
   877                           ;	low address of idata address in btemp+1 
   878                           ;	low address of data in FSR
   879                           ;	high address + 1 of data in btemp-1
   880                           
   881     0AAB  120A  158A  22A7  120A  158A  	fcall	init_fetch0
   882     0AB0  0080               	movwf	0
   883     0AB1  0A84               	incf	4,f
   884     0AB2  0804               	movf	4,w
   885     0AB3  067D               	xorwf	btemp+-1,w
   886     0AB4  1903               	btfsc	3,2
   887     0AB5  3400               	retlw	0
   888     0AB6  0AFF               	incf	btemp+1,f
   889     0AB7  1903               	btfsc	3,2
   890     0AB8  0AFE               	incf	btemp,f
   891     0AB9  2AAB               	goto	init_ram0
   892                           
   893                           	psect	clrtext
   894     0A2A                     clear_ram0:	
   895                           ;	Called with FSR containing the base address, and
   896                           ;	W with the last address+1
   897                           
   898     0A2A  0064               	clrwdt	;clear the watchdog before getting into this loop
   899     0A2B                     clrloop0:
   900     0A2B  0180               	clrf	0	;clear RAM location pointed to by FSR
   901     0A2C  0A84               	incf	4,f	;increment pointer
   902     0A2D  0604               	xorwf	4,w	;XOR with final address
   903     0A2E  1903               	btfsc	3,2	;have we reached the end yet?
   904     0A2F  3400               	retlw	0	;all done for this memory range, return
   905     0A30  0604               	xorwf	4,w	;XOR again to restore value
   906     0A31  2A2B               	goto	clrloop0	;do the next byte
   907                           
   908                           	psect	cstackCOMMON
   909     0070                     __pcstackCOMMON:
   910     0070                     ?_LCD_Command:
   911     0070                     ?_funcion_inicio:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_funcion_seguridad:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_funcion_bloqueado:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ?_funcion_monitoreo_ambiental:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_funcion_monitoreo_puertas:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_funcion_alarma:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_funcion_alerta:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_putch:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ?_adc_init:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?_keypad_Init:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ?_keypad_getkey:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ?_LCD_Init:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?_LCD_Char:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0070                     ?_LCD_Clear:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ?_sensores_init:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ?_main:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ?_ISR:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ??_ISR:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     putch@c:	
   966                           ; 1 bytes @ 0x0
   967                           
   968                           
   969                           ; 1 bytes @ 0x0
   970     0070                     	ds	2
   971     0072                     ??_LCD_Command:
   972     0072                     ??_putch:	
   973                           ; 1 bytes @ 0x2
   974                           
   975     0072                     ??_adc_init:	
   976                           ; 1 bytes @ 0x2
   977                           
   978     0072                     ??_keypad_Init:	
   979                           ; 1 bytes @ 0x2
   980                           
   981     0072                     ??_keypad_getkey:	
   982                           ; 1 bytes @ 0x2
   983                           
   984     0072                     ??_LCD_Char:	
   985                           ; 1 bytes @ 0x2
   986                           
   987     0072                     ??_sensores_init:	
   988                           ; 1 bytes @ 0x2
   989                           
   990     0072                     ?_strncmp:	
   991                           ; 1 bytes @ 0x2
   992                           
   993     0072                     ?__Umul8_16:	
   994                           ; 2 bytes @ 0x2
   995                           
   996     0072                     ?_fputc:	
   997                           ; 2 bytes @ 0x2
   998                           
   999     0072                     ?_adc_read:	
  1000                           ; 2 bytes @ 0x2
  1001                           
  1002     0072                     ?_read_hall:	
  1003                           ; 2 bytes @ 0x2
  1004                           
  1005     0072                     ?_read_movimiento:	
  1006                           ; 2 bytes @ 0x2
  1007                           
  1008     0072                     ?___wmul:	
  1009                           ; 2 bytes @ 0x2
  1010                           
  1011     0072                     ?___awmod:	
  1012                           ; 2 bytes @ 0x2
  1013                           
  1014     0072                     ?___fltol:	
  1015                           ; 2 bytes @ 0x2
  1016                           
  1017     0072                     ?___xxtofl:	
  1018                           ; 4 bytes @ 0x2
  1019                           
  1020     0072                     __Umul8_16@multiplicand:	
  1021                           ; 4 bytes @ 0x2
  1022                           
  1023     0072                     strncmp@r:	
  1024                           ; 1 bytes @ 0x2
  1025                           
  1026     0072                     adc_read@channel:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029     0072                     ___wmul@multiplier:	
  1030                           ; 2 bytes @ 0x2
  1031                           
  1032     0072                     ___awmod@divisor:	
  1033                           ; 2 bytes @ 0x2
  1034                           
  1035     0072                     fputc@c:	
  1036                           ; 2 bytes @ 0x2
  1037                           
  1038     0072                     ___fltol@f1:	
  1039                           ; 2 bytes @ 0x2
  1040                           
  1041     0072                     ___xxtofl@val:	
  1042                           ; 4 bytes @ 0x2
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x2
  1046     0072                     	ds	1
  1047     0073                     strncmp@n:
  1048                           
  1049                           ; 2 bytes @ 0x3
  1050     0073                     	ds	1
  1051     0074                     ??__Umul8_16:
  1052     0074                     ??_adc_read:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055     0074                     ??_read_hall:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058     0074                     ??_read_movimiento:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061     0074                     LCD_Command@cmd:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064     0074                     LCD_Char@dat:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067     0074                     fputc@fp:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070     0074                     ___wmul@multiplicand:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073     0074                     ___awmod@dividend:	
  1074                           ; 2 bytes @ 0x4
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x4
  1078     0074                     	ds	1
  1079     0075                     ??_strncmp:
  1080     0075                     ??_fputc:	
  1081                           ; 1 bytes @ 0x5
  1082                           
  1083     0075                     ??_LCD_Init:	
  1084                           ; 1 bytes @ 0x5
  1085                           
  1086     0075                     ?_LCD_String:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089     0075                     ??_LCD_Clear:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092     0075                     LCD_String@msg:	
  1093                           ; 1 bytes @ 0x5
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x5
  1097     0075                     	ds	1
  1098     0076                     ??___wmul:
  1099     0076                     ??___awmod:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102     0076                     ??___fltol:	
  1103                           ; 1 bytes @ 0x6
  1104                           
  1105     0076                     ??___xxtofl:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108     0076                     ___awmod@counter:	
  1109                           ; 1 bytes @ 0x6
  1110                           
  1111     0076                     ___wmul@product:	
  1112                           ; 1 bytes @ 0x6
  1113                           
  1114                           
  1115                           ; 2 bytes @ 0x6
  1116     0076                     	ds	1
  1117     0077                     ??_funcion_bloqueado:
  1118     0077                     ??_LCD_String:	
  1119                           ; 1 bytes @ 0x7
  1120                           
  1121     0077                     ?_LCD_String_xy:	
  1122                           ; 1 bytes @ 0x7
  1123                           
  1124     0077                     LCD_String_xy@pos:	
  1125                           ; 1 bytes @ 0x7
  1126                           
  1127     0077                     ___awmod@sign:	
  1128                           ; 1 bytes @ 0x7
  1129                           
  1130     0077                     strncmp@l:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133                           
  1134                           ; 1 bytes @ 0x7
  1135     0077                     	ds	1
  1136     0078                     ??___awdiv:
  1137     0078                     ?_abs:	
  1138                           ; 1 bytes @ 0x8
  1139                           
  1140     0078                     adc_read@value_adc:	
  1141                           ; 2 bytes @ 0x8
  1142                           
  1143     0078                     LCD_String_xy@msg:	
  1144                           ; 2 bytes @ 0x8
  1145                           
  1146     0078                     abs@a:	
  1147                           ; 2 bytes @ 0x8
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x8
  1151     0078                     	ds	2
  1152     007A                     ??_funcion_seguridad:
  1153     007A                     ??_funcion_monitoreo_ambiental:	
  1154                           ; 1 bytes @ 0xA
  1155                           
  1156     007A                     ??_funcion_monitoreo_puertas:	
  1157                           ; 1 bytes @ 0xA
  1158                           
  1159     007A                     ??_funcion_alarma:	
  1160                           ; 1 bytes @ 0xA
  1161                           
  1162     007A                     ??_funcion_alerta:	
  1163                           ; 1 bytes @ 0xA
  1164                           
  1165     007A                     ??_vfprintf:	
  1166                           ; 1 bytes @ 0xA
  1167                           
  1168     007A                     ??_read_fotoresistor:	
  1169                           ; 1 bytes @ 0xA
  1170                           
  1171     007A                     ??_LCD_String_xy:	
  1172                           ; 1 bytes @ 0xA
  1173                           
  1174                           
  1175                           	psect	cstackBANK0
  1176     0020                     __pcstackBANK0:	
  1177                           ; 1 bytes @ 0xA
  1178                           
  1179     0020                     ??_abs:
  1180     0020                     ?___awdiv:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183     0020                     LCD_String_xy@row:	
  1184                           ; 2 bytes @ 0x0
  1185                           
  1186     0020                     ___fltol@sign1:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189     0020                     ___xxtofl@sign:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192     0020                     ___awdiv@divisor:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195     0020                     __Umul8_16@product:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198     0020                     keypad_getkey@letras:	
  1199                           ; 2 bytes @ 0x0
  1200                           
  1201                           
  1202                           ; 16 bytes @ 0x0
  1203     0020                     	ds	1
  1204     0021                     LCD_String_xy@location:
  1205     0021                     ___fltol@exp1:	
  1206                           ; 1 bytes @ 0x1
  1207                           
  1208     0021                     ___xxtofl@exp:	
  1209                           ; 1 bytes @ 0x1
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0x1
  1213     0021                     	ds	1
  1214     0022                     ??_funcion_inicio:
  1215     0022                     ___awdiv@dividend:	
  1216                           ; 1 bytes @ 0x2
  1217                           
  1218     0022                     __Umul8_16@word_mpld:	
  1219                           ; 2 bytes @ 0x2
  1220                           
  1221     0022                     ___xxtofl@arg:	
  1222                           ; 2 bytes @ 0x2
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x2
  1226     0022                     	ds	2
  1227     0024                     ___awdiv@counter:
  1228     0024                     __Umul8_16@multiplier:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0x4
  1233     0024                     	ds	1
  1234     0025                     ___awdiv@sign:
  1235                           
  1236                           ; 1 bytes @ 0x5
  1237     0025                     	ds	1
  1238     0026                     ?___flmul:
  1239     0026                     ___awdiv@quotient:	
  1240                           ; 4 bytes @ 0x6
  1241                           
  1242     0026                     ___flmul@b:	
  1243                           ; 2 bytes @ 0x6
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x6
  1247     0026                     	ds	2
  1248     0028                     ?_vfpfcnvrt:
  1249     0028                     ?_read_fotoresistor:	
  1250                           ; 1 bytes @ 0x8
  1251                           
  1252     0028                     vfpfcnvrt@fmt:	
  1253                           ; 2 bytes @ 0x8
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x8
  1257     0028                     	ds	1
  1258     0029                     vfpfcnvrt@ap:
  1259                           
  1260                           ; 1 bytes @ 0x9
  1261     0029                     	ds	1
  1262     002A                     ??_vfpfcnvrt:
  1263     002A                     read_fotoresistor@luz:	
  1264                           ; 1 bytes @ 0xA
  1265                           
  1266     002A                     ___flmul@a:	
  1267                           ; 2 bytes @ 0xA
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0xA
  1271     002A                     	ds	2
  1272     002C                     vfpfcnvrt@done:
  1273     002C                     read_fotoresistor@luzPorcentaje:	
  1274                           ; 1 bytes @ 0xC
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0xC
  1278     002C                     	ds	1
  1279     002D                     vfpfcnvrt@fp:
  1280                           
  1281                           ; 1 bytes @ 0xD
  1282     002D                     	ds	1
  1283     002E                     ??___flmul:
  1284     002E                     vfpfcnvrt@cp:	
  1285                           ; 1 bytes @ 0xE
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0xE
  1289     002E                     	ds	1
  1290     002F                     vfpfcnvrt@convarg:
  1291                           
  1292                           ; 4 bytes @ 0xF
  1293     002F                     	ds	1
  1294     0030                     keypad_getkey@valor:
  1295                           
  1296                           ; 1 bytes @ 0x10
  1297     0030                     	ds	1
  1298     0031                     keypad_getkey@i:
  1299                           
  1300                           ; 2 bytes @ 0x11
  1301     0031                     	ds	2
  1302     0033                     ___flmul@sign:
  1303     0033                     vfpfcnvrt@c:	
  1304                           ; 1 bytes @ 0x13
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x13
  1308     0033                     	ds	1
  1309     0034                     ?_vfprintf:
  1310     0034                     ___flmul@aexp:	
  1311                           ; 2 bytes @ 0x14
  1312                           
  1313     0034                     vfprintf@fmt:	
  1314                           ; 1 bytes @ 0x14
  1315                           
  1316                           
  1317                           ; 1 bytes @ 0x14
  1318     0034                     	ds	1
  1319     0035                     vfprintf@ap:
  1320     0035                     ___flmul@grs:	
  1321                           ; 1 bytes @ 0x15
  1322                           
  1323                           
  1324                           ; 4 bytes @ 0x15
  1325     0035                     	ds	1
  1326     0036                     vfprintf@fp:
  1327                           
  1328                           ; 1 bytes @ 0x16
  1329     0036                     	ds	1
  1330     0037                     vfprintf@cfmt:
  1331                           
  1332                           ; 1 bytes @ 0x17
  1333     0037                     	ds	1
  1334     0038                     ?_sprintf:
  1335     0038                     sprintf@fmt:	
  1336                           ; 2 bytes @ 0x18
  1337                           
  1338                           
  1339                           ; 1 bytes @ 0x18
  1340     0038                     	ds	1
  1341     0039                     ___flmul@bexp:
  1342                           
  1343                           ; 1 bytes @ 0x19
  1344     0039                     	ds	1
  1345     003A                     ___flmul@prod:
  1346                           
  1347                           ; 4 bytes @ 0x1A
  1348     003A                     	ds	3
  1349     003D                     ??_sprintf:
  1350                           
  1351                           ; 1 bytes @ 0x1D
  1352     003D                     	ds	1
  1353     003E                     sprintf@ap:
  1354     003E                     ___flmul@temp:	
  1355                           ; 1 bytes @ 0x1E
  1356                           
  1357                           
  1358                           ; 2 bytes @ 0x1E
  1359     003E                     	ds	1
  1360     003F                     sprintf@s:
  1361                           
  1362                           ; 1 bytes @ 0x1F
  1363     003F                     	ds	1
  1364     0040                     ?_read_temperatura:
  1365     0040                     sprintf@f:	
  1366                           ; 2 bytes @ 0x20
  1367                           
  1368                           
  1369                           ; 11 bytes @ 0x20
  1370     0040                     	ds	2
  1371     0042                     ??_read_temperatura:
  1372                           
  1373                           ; 1 bytes @ 0x22
  1374     0042                     	ds	2
  1375     0044                     read_temperatura@celsius:
  1376                           
  1377                           ; 4 bytes @ 0x24
  1378     0044                     	ds	4
  1379     0048                     read_temperatura@temperatura:
  1380                           
  1381                           ; 2 bytes @ 0x28
  1382     0048                     	ds	2
  1383     004A                     read_temperatura@valor_adc:
  1384                           
  1385                           ; 2 bytes @ 0x2A
  1386     004A                     	ds	1
  1387     004B                     funcion_monitoreo_puertas@buffer:
  1388                           
  1389                           ; 17 bytes @ 0x2B
  1390     004B                     	ds	1
  1391     004C                     funcion_monitoreo_ambiental@buffer:
  1392                           
  1393                           ; 17 bytes @ 0x2C
  1394     004C                     	ds	17
  1395     005D                     ??_main:
  1396                           
  1397                           ; 1 bytes @ 0x3D
  1398     005D                     	ds	2
  1399                           
  1400                           	psect	maintext
  1401     069B                     __pmaintext:	
  1402 ;;
  1403 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1404 ;;
  1405 ;; *************** function _main *****************
  1406 ;; Defined at:
  1407 ;;		line 54 in file "main.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : B00/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       2       0       0       0
  1424 ;;      Totals:         0       2       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels required when called: 7
  1427 ;; This function calls:
  1428 ;;		_LCD_Init
  1429 ;;		_adc_init
  1430 ;;		_funcion_alarma
  1431 ;;		_funcion_alerta
  1432 ;;		_funcion_bloqueado
  1433 ;;		_funcion_inicio
  1434 ;;		_funcion_monitoreo_ambiental
  1435 ;;		_funcion_monitoreo_puertas
  1436 ;;		_funcion_seguridad
  1437 ;;		_keypad_Init
  1438 ;;		_read_fotoresistor
  1439 ;;		_read_hall
  1440 ;;		_read_movimiento
  1441 ;;		_read_temperatura
  1442 ;;		_sensores_init
  1443 ;; This function is called by:
  1444 ;;		Startup code after reset
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448     069B                     _main:	
  1449                           ;psect for function _main
  1450                           
  1451     069B                     l3808:	
  1452                           ;incstack = 0
  1453                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1454                           
  1455                           
  1456                           ;main.c: 55:     OSCCON = 0x71;
  1457     069B  3071               	movlw	113
  1458     069C  1683               	bsf	3,5	;RP0=1, select bank1
  1459     069D  1303               	bcf	3,6	;RP1=0, select bank1
  1460     069E  008F               	movwf	15	;volatile
  1461     069F                     l3810:
  1462                           
  1463                           ;main.c: 56:     ANSELH = 0x00;
  1464     069F  1683               	bsf	3,5	;RP0=1, select bank3
  1465     06A0  1703               	bsf	3,6	;RP1=1, select bank3
  1466     06A1  0189               	clrf	9	;volatile
  1467     06A2                     l3812:
  1468                           
  1469                           ;main.c: 57:     TRISD = 0x00;
  1470     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1471     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1472     06A4  0188               	clrf	8	;volatile
  1473     06A5                     l3814:
  1474                           
  1475                           ;main.c: 58:     TRISC = 0x00;
  1476     06A5  0187               	clrf	7	;volatile
  1477     06A6                     l3816:
  1478                           
  1479                           ;main.c: 59:     TRISA0 = 1;
  1480     06A6  1405               	bsf	5,0	;volatile
  1481     06A7                     l3818:
  1482                           
  1483                           ;main.c: 60:     TRISA1 = 1;
  1484     06A7  1485               	bsf	5,1	;volatile
  1485     06A8                     l3820:
  1486                           
  1487                           ;main.c: 61:     TRISA2 = 1;
  1488     06A8  1505               	bsf	5,2	;volatile
  1489     06A9                     l3822:
  1490                           
  1491                           ;main.c: 62:     TRISA3 = 1;
  1492     06A9  1585               	bsf	5,3	;volatile
  1493     06AA                     l3824:
  1494                           
  1495                           ;main.c: 63:     PORTD = 0;
  1496     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1497     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1498     06AC  0188               	clrf	8	;volatile
  1499     06AD                     l3826:
  1500                           
  1501                           ;main.c: 64:     ANSELbits.ANS1 = 0;
  1502     06AD  1683               	bsf	3,5	;RP0=1, select bank3
  1503     06AE  1703               	bsf	3,6	;RP1=1, select bank3
  1504     06AF  1088               	bcf	8,1	;volatile
  1505     06B0                     l3828:
  1506                           
  1507                           ;main.c: 65:     ANSELbits.ANS2 = 0;
  1508     06B0  1108               	bcf	8,2	;volatile
  1509     06B1                     l3830:
  1510                           
  1511                           ;main.c: 68:     LCD_Init();
  1512     06B1  120A  158A  2544  120A  118A  	fcall	_LCD_Init
  1513     06B6                     l3832:
  1514                           
  1515                           ;main.c: 69:     adc_init();
  1516     06B6  120A  158A  223E  120A  118A  	fcall	_adc_init
  1517     06BB                     l3834:
  1518                           
  1519                           ;main.c: 70:     keypad_Init();
  1520     06BB  120A  158A  2232  120A  118A  	fcall	_keypad_Init
  1521     06C0                     l3836:
  1522                           
  1523                           ;main.c: 71:     sensores_init();
  1524     06C0  120A  158A  22EA  120A  118A  	fcall	_sensores_init
  1525     06C5                     l3838:
  1526                           
  1527                           ;main.c: 72:     read_hall();
  1528     06C5  120A  158A  2281  120A  118A  	fcall	_read_hall
  1529     06CA                     l3840:
  1530                           
  1531                           ;main.c: 73:     read_movimiento();
  1532     06CA  120A  158A  2294  120A  118A  	fcall	_read_movimiento
  1533     06CF                     l3842:
  1534                           
  1535                           ;main.c: 74:     read_temperatura();
  1536     06CF  120A  118A  279F  120A  118A  	fcall	_read_temperatura
  1537     06D4                     l3844:
  1538                           
  1539                           ;main.c: 75:     read_fotoresistor();
  1540     06D4  120A  158A  24D7  120A  118A  	fcall	_read_fotoresistor
  1541     06D9  2F03               	goto	l3862
  1542     06DA                     l3846:
  1543                           
  1544                           ;main.c: 81:                 funcion_inicio();
  1545     06DA  120A  158A  250D  120A  118A  	fcall	_funcion_inicio
  1546                           
  1547                           ;main.c: 82:                 break;
  1548     06DF  2F03               	goto	l3862
  1549     06E0                     l3848:
  1550                           
  1551                           ;main.c: 84:                 funcion_seguridad();
  1552     06E0  120A  158A  22D0  120A  118A  	fcall	_funcion_seguridad
  1553                           
  1554                           ;main.c: 85:                 break;
  1555     06E5  2F03               	goto	l3862
  1556     06E6                     l3850:
  1557                           
  1558                           ;main.c: 87:                 funcion_bloqueado();
  1559     06E6  120A  158A  23E0  120A  118A  	fcall	_funcion_bloqueado
  1560                           
  1561                           ;main.c: 88:                 break;
  1562     06EB  2F03               	goto	l3862
  1563     06EC                     l3852:
  1564                           
  1565                           ;main.c: 90:                 funcion_monitoreo_ambiental();
  1566     06EC  120A  158A  278E  120A  118A  	fcall	_funcion_monitoreo_ambiental
  1567                           
  1568                           ;main.c: 91:                 break;
  1569     06F1  2F03               	goto	l3862
  1570     06F2                     l3854:
  1571                           
  1572                           ;main.c: 93:                 funcion_monitoreo_puertas();
  1573     06F2  120A  158A  26C3  120A  118A  	fcall	_funcion_monitoreo_puertas
  1574                           
  1575                           ;main.c: 94:                 break;
  1576     06F7  2F03               	goto	l3862
  1577     06F8                     l3856:
  1578                           
  1579                           ;main.c: 96:                 funcion_alarma();
  1580     06F8  120A  158A  240B  120A  118A  	fcall	_funcion_alarma
  1581                           
  1582                           ;main.c: 97:                 break;
  1583     06FD  2F03               	goto	l3862
  1584     06FE                     l3858:
  1585                           
  1586                           ;main.c: 99:                 funcion_alerta();
  1587     06FE  120A  158A  243A  120A  118A  	fcall	_funcion_alerta
  1588     0703                     l3862:	
  1589                           ;main.c: 100:                 break;
  1590                           
  1591     0703  1283               	bcf	3,5	;RP0=0, select bank0
  1592     0704  1303               	bcf	3,6	;RP1=0, select bank0
  1593     0705  086F               	movf	_estado_actual,w
  1594     0706  00DD               	movwf	??_main
  1595     0707  01DE               	clrf	??_main+1
  1596                           
  1597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 1, Range of values is 0 to 0
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            4     3 (average)
  1603                           ; direct_byte           11     8 (fixed)
  1604                           ; jumptable            260     6 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606     0708  085E               	movf	??_main+1,w
  1607     0709  3A00               	xorlw	0	; case 0
  1608     070A  1903               	skipnz
  1609     070B  2F0D               	goto	l3900
  1610     070C  2F03               	goto	l3862
  1611     070D                     l3900:
  1612                           
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 7, Range of values is 0 to 6
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           22    12 (average)
  1618                           ; direct_byte           29     8 (fixed)
  1619                           ; jumptable            260     6 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621     070D  085D               	movf	??_main,w
  1622     070E  3A00               	xorlw	0	; case 0
  1623     070F  1903               	skipnz
  1624     0710  2EDA               	goto	l3846
  1625     0711  3A01               	xorlw	1	; case 1
  1626     0712  1903               	skipnz
  1627     0713  2EE0               	goto	l3848
  1628     0714  3A03               	xorlw	3	; case 2
  1629     0715  1903               	skipnz
  1630     0716  2EE6               	goto	l3850
  1631     0717  3A01               	xorlw	1	; case 3
  1632     0718  1903               	skipnz
  1633     0719  2EEC               	goto	l3852
  1634     071A  3A07               	xorlw	7	; case 4
  1635     071B  1903               	skipnz
  1636     071C  2EF2               	goto	l3854
  1637     071D  3A01               	xorlw	1	; case 5
  1638     071E  1903               	skipnz
  1639     071F  2EF8               	goto	l3856
  1640     0720  3A03               	xorlw	3	; case 6
  1641     0721  1903               	skipnz
  1642     0722  2EFE               	goto	l3858
  1643     0723  2F03               	goto	l3862
  1644     0724  120A  118A  280C   	ljmp	start
  1645     0727                     __end_of_main:
  1646                           
  1647                           	psect	text1
  1648     0AEA                     __ptext1:	
  1649 ;; *************** function _sensores_init *****************
  1650 ;; Defined at:
  1651 ;;		line 12 in file "monitoreo_sensores.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679     0AEA                     _sensores_init:	
  1680                           ;psect for function _sensores_init
  1681                           
  1682     0AEA                     l2794:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _sensores_init: [wreg+status,2]
  1685                           
  1686                           
  1687                           ;monitoreo_sensores.c: 14:     OSCCON = 0x71;
  1688     0AEA  3071               	movlw	113
  1689     0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  1690     0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  1691     0AED  008F               	movwf	15	;volatile
  1692     0AEE                     l2796:
  1693                           
  1694                           ;monitoreo_sensores.c: 15:     ANSELH = 0x00;
  1695     0AEE  1683               	bsf	3,5	;RP0=1, select bank3
  1696     0AEF  1703               	bsf	3,6	;RP1=1, select bank3
  1697     0AF0  0189               	clrf	9	;volatile
  1698     0AF1                     l2798:
  1699                           
  1700                           ;monitoreo_sensores.c: 16:     TRISD = 0x00;
  1701     0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  1702     0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  1703     0AF3  0188               	clrf	8	;volatile
  1704     0AF4                     l2800:
  1705                           
  1706                           ;monitoreo_sensores.c: 17:     TRISC = 0x00;
  1707     0AF4  0187               	clrf	7	;volatile
  1708     0AF5                     l2802:
  1709                           
  1710                           ;monitoreo_sensores.c: 18:     TRISA0 = 1;
  1711     0AF5  1405               	bsf	5,0	;volatile
  1712     0AF6                     l2804:
  1713                           
  1714                           ;monitoreo_sensores.c: 19:     TRISA1 = 1;
  1715     0AF6  1485               	bsf	5,1	;volatile
  1716     0AF7                     l2806:
  1717                           
  1718                           ;monitoreo_sensores.c: 20:     PORTD = 0;
  1719     0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  1720     0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  1721     0AF9  0188               	clrf	8	;volatile
  1722     0AFA                     l2808:
  1723                           
  1724                           ;monitoreo_sensores.c: 21:     ANSELbits.ANS1 = 0;
  1725     0AFA  1683               	bsf	3,5	;RP0=1, select bank3
  1726     0AFB  1703               	bsf	3,6	;RP1=1, select bank3
  1727     0AFC  1088               	bcf	8,1	;volatile
  1728     0AFD                     l2810:
  1729                           
  1730                           ;monitoreo_sensores.c: 22:     ANSELbits.ANS2 = 0;
  1731     0AFD  1108               	bcf	8,2	;volatile
  1732     0AFE                     l2812:
  1733                           
  1734                           ;monitoreo_sensores.c: 23:     TRISA1 = 1;
  1735     0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  1736     0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  1737     0B00  1485               	bsf	5,1	;volatile
  1738     0B01                     l2814:
  1739                           
  1740                           ;monitoreo_sensores.c: 24:     TRISA2 = 1;
  1741     0B01  1505               	bsf	5,2	;volatile
  1742     0B02                     l2816:
  1743                           
  1744                           ;monitoreo_sensores.c: 25:     TRISA3 = 1;
  1745     0B02  1585               	bsf	5,3	;volatile
  1746     0B03                     l171:
  1747     0B03  0008               	return
  1748     0B04                     __end_of_sensores_init:
  1749                           
  1750                           	psect	text2
  1751     0A32                     __ptext2:	
  1752 ;; *************** function _keypad_Init *****************
  1753 ;; Defined at:
  1754 ;;		line 38 in file "KEYPAD.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, btemp+1
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782     0A32                     _keypad_Init:	
  1783                           ;psect for function _keypad_Init
  1784                           
  1785     0A32                     l2790:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _keypad_Init: [wreg+status,2+status,0+btemp+1]
  1788                           
  1789                           
  1790                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1791     0A32  30F0               	movlw	240
  1792     0A33  00FF               	movwf	btemp+1
  1793     0A34  087F               	movf	btemp+1,w
  1794     0A35  1683               	bsf	3,5	;RP0=1, select bank1
  1795     0A36  1303               	bcf	3,6	;RP1=0, select bank1
  1796     0A37  0586               	andwf	6,f	;volatile
  1797                           
  1798                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1799     0A38  30F0               	movlw	240
  1800     0A39  00FF               	movwf	btemp+1
  1801     0A3A  087F               	movf	btemp+1,w
  1802     0A3B  0486               	iorwf	6,f	;volatile
  1803     0A3C                     l2792:
  1804                           
  1805                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  1806     0A3C  1381               	bcf	1,7	;volatile
  1807     0A3D                     l36:
  1808     0A3D  0008               	return
  1809     0A3E                     __end_of_keypad_Init:
  1810                           
  1811                           	psect	text3
  1812     0AD0                     __ptext3:	
  1813 ;; *************** function _funcion_seguridad *****************
  1814 ;; Defined at:
  1815 ;;		line 140 in file "main.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  i               2    0        int 
  1820 ;;  i               2    0        int 
  1821 ;;  intentos        2    0        int 
  1822 ;;  key             1    0        unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, pclath, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 4
  1839 ;; This function calls:
  1840 ;;		_LCD_Char
  1841 ;;		_LCD_Clear
  1842 ;;		_LCD_Command
  1843 ;;		_LCD_String_xy
  1844 ;;		_keypad_getkey
  1845 ;;		_strncmp
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851     0AD0                     _funcion_seguridad:	
  1852                           ;psect for function _funcion_seguridad
  1853                           
  1854     0AD0                     l3596:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _funcion_seguridad: [wreg+status,2+status,0+pclath+cstack]
  1857                           
  1858     0AD0                     l3598:
  1859     0AD0                     l3692:
  1860                           
  1861                           ;main.c: 201:         estado_actual = sistema_bloqueado;
  1862     0AD0  3002               	movlw	2
  1863     0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  1864     0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0AD3  00EF               	movwf	_estado_actual
  1866     0AD4                     l331:	
  1867                           ;main.c: 202:     }
  1868                           
  1869                           
  1870                           ;main.c: 203:     timeout_ms = 2000;
  1871     0AD4  30D0               	movlw	208
  1872     0AD5  00E9               	movwf	_timeout_ms
  1873     0AD6  3007               	movlw	7
  1874     0AD7  00EA               	movwf	_timeout_ms+1
  1875     0AD8                     l3694:	
  1876                           ;main.c: 204:     while (ms_counter < timeout_ms);
  1877                           
  1878     0AD8  086A               	movf	_timeout_ms+1,w
  1879     0AD9  027B               	subwf	_ms_counter+1,w	;volatile
  1880     0ADA  1D03               	skipz
  1881     0ADB  2ADE               	goto	u3705
  1882     0ADC  0869               	movf	_timeout_ms,w
  1883     0ADD  027A               	subwf	_ms_counter,w	;volatile
  1884     0ADE                     u3705:
  1885     0ADE  1C03               	skipc
  1886     0ADF  2AE1               	goto	u3701
  1887     0AE0  2AE2               	goto	u3700
  1888     0AE1                     u3701:
  1889     0AE1  2AD8               	goto	l3694
  1890     0AE2                     u3700:
  1891     0AE2                     l3696:
  1892                           
  1893                           ;main.c: 205:     ms_counter = 0;
  1894     0AE2  01FA               	clrf	_ms_counter	;volatile
  1895     0AE3  01FB               	clrf	_ms_counter+1	;volatile
  1896     0AE4                     l3698:
  1897                           
  1898                           ;main.c: 206:     LCD_Clear();
  1899     0AE4  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  1900     0AE9                     l335:
  1901     0AE9  0008               	return
  1902     0AEA                     __end_of_funcion_seguridad:
  1903                           
  1904                           	psect	text4
  1905     0E66                     __ptext4:	
  1906 ;; *************** function _strncmp *****************
  1907 ;; Defined at:
  1908 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  l               1    wreg     PTR const unsigned char 
  1911 ;;		 -> pass_user(8), 
  1912 ;;  r               1    2[COMMON] PTR const unsigned char 
  1913 ;;		 -> password(5), 
  1914 ;;  n               2    3[COMMON] unsigned int 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  l               1    7[COMMON] PTR const unsigned char 
  1917 ;;		 -> pass_user(8), 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  2    2[COMMON] int 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         3       0       0       0       0
  1928 ;;      Locals:         1       0       0       0       0
  1929 ;;      Temps:          2       0       0       0       0
  1930 ;;      Totals:         6       0       0       0       0
  1931 ;;Total ram usage:        6 bytes
  1932 ;; Hardware stack levels used: 2
  1933 ;; Hardware stack levels required when called: 1
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_funcion_seguridad
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941     0E66                     _strncmp:	
  1942                           ;psect for function _strncmp
  1943                           
  1944                           
  1945                           ;incstack = 0
  1946                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1947                           ;strncmp@l stored from wreg
  1948     0E66  00F7               	movwf	strncmp@l
  1949     0E67                     l2748:
  1950     0E67  3001               	movlw	1
  1951     0E68  02F3               	subwf	strncmp@n,f
  1952     0E69  3000               	movlw	0
  1953     0E6A  1C03               	skipc
  1954     0E6B  03F4               	decf	strncmp@n+1,f
  1955     0E6C  02F4               	subwf	strncmp@n+1,f
  1956     0E6D  0A73               	incf	strncmp@n,w
  1957     0E6E  1D03               	skipz
  1958     0E6F  2E74               	goto	u2801
  1959     0E70  0A74               	incf	strncmp@n+1,w
  1960     0E71  1D03               	btfss	3,2
  1961     0E72  2E74               	goto	u2801
  1962     0E73  2E75               	goto	u2800
  1963     0E74                     u2801:
  1964     0E74  2E86               	goto	l2758
  1965     0E75                     u2800:
  1966     0E75                     l2750:
  1967     0E75  01F2               	clrf	?_strncmp
  1968     0E76  01F3               	clrf	?_strncmp+1
  1969     0E77  2EC2               	goto	l989
  1970     0E78                     l2754:
  1971     0E78  3001               	movlw	1
  1972     0E79  00FF               	movwf	btemp+1
  1973     0E7A  087F               	movf	btemp+1,w
  1974     0E7B  07F7               	addwf	strncmp@l,f
  1975     0E7C  3001               	movlw	1
  1976     0E7D  00FF               	movwf	btemp+1
  1977     0E7E  087F               	movf	btemp+1,w
  1978     0E7F  07F2               	addwf	strncmp@r,f
  1979     0E80                     l2756:
  1980     0E80  3001               	movlw	1
  1981     0E81  02F3               	subwf	strncmp@n,f
  1982     0E82  3000               	movlw	0
  1983     0E83  1C03               	skipc
  1984     0E84  03F4               	decf	strncmp@n+1,f
  1985     0E85  02F4               	subwf	strncmp@n+1,f
  1986     0E86                     l2758:
  1987     0E86  0877               	movf	strncmp@l,w
  1988     0E87  0084               	movwf	4
  1989     0E88  1383               	bcf	3,7	;select IRP bank0
  1990     0E89  0800               	movf	0,w
  1991     0E8A  1903               	btfsc	3,2
  1992     0E8B  2E8D               	goto	u2811
  1993     0E8C  2E8E               	goto	u2810
  1994     0E8D                     u2811:
  1995     0E8D  2EB0               	goto	l2766
  1996     0E8E                     u2810:
  1997     0E8E                     l2760:
  1998     0E8E  0872               	movf	strncmp@r,w
  1999     0E8F  0084               	movwf	4
  2000     0E90  120A  118A  260E  120A  158A  	fcall	stringdir
  2001     0E95  3A00               	xorlw	0
  2002     0E96  1903               	skipnz
  2003     0E97  2E99               	goto	u2821
  2004     0E98  2E9A               	goto	u2820
  2005     0E99                     u2821:
  2006     0E99  2EB0               	goto	l2766
  2007     0E9A                     u2820:
  2008     0E9A                     l2762:
  2009     0E9A  0873               	movf	strncmp@n,w
  2010     0E9B  0474               	iorwf	strncmp@n+1,w
  2011     0E9C  1903               	btfsc	3,2
  2012     0E9D  2E9F               	goto	u2831
  2013     0E9E  2EA0               	goto	u2830
  2014     0E9F                     u2831:
  2015     0E9F  2EB0               	goto	l2766
  2016     0EA0                     u2830:
  2017     0EA0                     l2764:
  2018     0EA0  0872               	movf	strncmp@r,w
  2019     0EA1  0084               	movwf	4
  2020     0EA2  120A  118A  260E  120A  158A  	fcall	stringdir
  2021     0EA7  00F5               	movwf	??_strncmp
  2022     0EA8  0877               	movf	strncmp@l,w
  2023     0EA9  0084               	movwf	4
  2024     0EAA  0800               	movf	0,w
  2025     0EAB  0675               	xorwf	??_strncmp,w
  2026     0EAC  1903               	skipnz
  2027     0EAD  2EAF               	goto	u2841
  2028     0EAE  2EB0               	goto	u2840
  2029     0EAF                     u2841:
  2030     0EAF  2E78               	goto	l2754
  2031     0EB0                     u2840:
  2032     0EB0                     l2766:
  2033     0EB0  0872               	movf	strncmp@r,w
  2034     0EB1  0084               	movwf	4
  2035     0EB2  120A  118A  260E  120A  158A  	fcall	stringdir
  2036     0EB7  00F5               	movwf	??_strncmp
  2037     0EB8  0877               	movf	strncmp@l,w
  2038     0EB9  0084               	movwf	4
  2039     0EBA  0800               	movf	0,w
  2040     0EBB  00F6               	movwf	??_strncmp+1
  2041     0EBC  0875               	movf	??_strncmp,w
  2042     0EBD  0276               	subwf	??_strncmp+1,w
  2043     0EBE  00F2               	movwf	?_strncmp
  2044     0EBF  01F3               	clrf	?_strncmp+1
  2045     0EC0  1C03               	skipc
  2046     0EC1  03F3               	decf	?_strncmp+1,f
  2047     0EC2                     l989:
  2048     0EC2  0008               	return
  2049     0EC3                     __end_of_strncmp:
  2050                           
  2051                           	psect	text5
  2052     0469                     __ptext5:	
  2053 ;; *************** function _keypad_getkey *****************
  2054 ;; Defined at:
  2055 ;;		line 57 in file "KEYPAD.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  2060 ;;  i               2   17[BANK0 ] int 
  2061 ;;  valor           1   16[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      unsigned char 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0      19       0       0       0
  2073 ;;      Temps:          4       0       0       0       0
  2074 ;;      Totals:         4      19       0       0       0
  2075 ;;Total ram usage:       23 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_funcion_seguridad
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085     0469                     _keypad_getkey:	
  2086                           ;psect for function _keypad_getkey
  2087                           
  2088     0469                     l2574:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  2091                           
  2092                           
  2093                           ;KEYPAD.c: 59: char letras[4][4]={ {'1','2','3','A'},
  2094     0469  3020               	movlw	keypad_getkey@letras& (0+255)
  2095     046A  0084               	movwf	4
  2096     046B  30CA               	movlw	low keypad_getkey@F1398
  2097     046C  00F2               	movwf	??_keypad_getkey
  2098     046D  0804               	movf	4,w
  2099     046E  00F3               	movwf	??_keypad_getkey+1
  2100     046F  3010               	movlw	16
  2101     0470  00F4               	movwf	??_keypad_getkey+2
  2102     0471                     u2550:
  2103     0471  0872               	movf	??_keypad_getkey,w
  2104     0472  0084               	movwf	4
  2105     0473  1383               	bcf	3,7	;select IRP bank1
  2106     0474  0800               	movf	0,w
  2107     0475  00F5               	movwf	??_keypad_getkey+3
  2108     0476  0AF2               	incf	??_keypad_getkey,f
  2109     0477  0873               	movf	??_keypad_getkey+1,w
  2110     0478  0084               	movwf	4
  2111     0479  0875               	movf	??_keypad_getkey+3,w
  2112     047A  0080               	movwf	0
  2113     047B  0AF3               	incf	??_keypad_getkey+1,f
  2114     047C  0BF4               	decfsz	??_keypad_getkey+2,f
  2115     047D  2C71               	goto	u2550
  2116     047E                     l2576:
  2117     047E                     l2578:
  2118                           
  2119                           ;KEYPAD.c: 64: char valor=0;
  2120     047E  1283               	bcf	3,5	;RP0=0, select bank0
  2121     047F  1303               	bcf	3,6	;RP1=0, select bank0
  2122     0480  01B0               	clrf	keypad_getkey@valor
  2123     0481                     l2580:
  2124                           
  2125                           ;KEYPAD.c: 66: for(i=0;i<4;i++){
  2126     0481  01B1               	clrf	keypad_getkey@i
  2127     0482  01B2               	clrf	keypad_getkey@i+1
  2128     0483                     l2586:
  2129                           
  2130                           ;KEYPAD.c: 68:    if(i==0){
  2131     0483  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0484  1303               	bcf	3,6	;RP1=0, select bank0
  2133     0485  0831               	movf	keypad_getkey@i,w
  2134     0486  0432               	iorwf	keypad_getkey@i+1,w
  2135     0487  1D03               	btfss	3,2
  2136     0488  2C8A               	goto	u2561
  2137     0489  2C8B               	goto	u2560
  2138     048A                     u2561:
  2139     048A  2CB0               	goto	l2606
  2140     048B                     u2560:
  2141     048B                     l2588:
  2142                           
  2143                           ;KEYPAD.c: 70:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  2144     048B  30FE               	movlw	254
  2145     048C  0086               	movwf	6	;volatile
  2146                           
  2147                           ;KEYPAD.c: 71:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2148     048D  3042               	movlw	66
  2149     048E  00F2               	movwf	??_keypad_getkey
  2150     048F                     u3797:
  2151     048F  0BF2               	decfsz	??_keypad_getkey,f
  2152     0490  2C8F               	goto	u3797
  2153     0491  0000               	nop
  2154                           
  2155                           ;KEYPAD.c: 72:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  2156     0492  2C95               	goto	l2592
  2157     0493                     l2590:
  2158     0493  0820               	movf	keypad_getkey@letras,w
  2159     0494  00B0               	movwf	keypad_getkey@valor
  2160     0495                     l2592:
  2161     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2162     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2163     0497  1E06               	btfss	6,4	;volatile
  2164     0498  2C9A               	goto	u2571
  2165     0499  2C9B               	goto	u2570
  2166     049A                     u2571:
  2167     049A  2C93               	goto	l2590
  2168     049B                     u2570:
  2169     049B  2C9E               	goto	l2596
  2170     049C                     l2594:
  2171     049C  0821               	movf	keypad_getkey@letras+1,w
  2172     049D  00B0               	movwf	keypad_getkey@valor
  2173     049E                     l2596:
  2174     049E  1E86               	btfss	6,5	;volatile
  2175     049F  2CA1               	goto	u2581
  2176     04A0  2CA2               	goto	u2580
  2177     04A1                     u2581:
  2178     04A1  2C9C               	goto	l2594
  2179     04A2                     u2580:
  2180     04A2  2CA5               	goto	l2600
  2181     04A3                     l2598:
  2182     04A3  0822               	movf	keypad_getkey@letras+2,w
  2183     04A4  00B0               	movwf	keypad_getkey@valor
  2184     04A5                     l2600:
  2185     04A5  1F06               	btfss	6,6	;volatile
  2186     04A6  2CA8               	goto	u2591
  2187     04A7  2CA9               	goto	u2590
  2188     04A8                     u2591:
  2189     04A8  2CA3               	goto	l2598
  2190     04A9                     u2590:
  2191     04A9  2CAC               	goto	l2604
  2192     04AA                     l2602:
  2193     04AA  0823               	movf	keypad_getkey@letras+3,w
  2194     04AB  00B0               	movwf	keypad_getkey@valor
  2195     04AC                     l2604:
  2196     04AC  1F86               	btfss	6,7	;volatile
  2197     04AD  2CAF               	goto	u2601
  2198     04AE  2CB0               	goto	u2600
  2199     04AF                     u2601:
  2200     04AF  2CAA               	goto	l2602
  2201     04B0                     u2600:
  2202     04B0                     l2606:
  2203                           
  2204                           ;KEYPAD.c: 78:    if(i==1){
  2205     04B0  0331               	decf	keypad_getkey@i,w
  2206     04B1  0432               	iorwf	keypad_getkey@i+1,w
  2207     04B2  1D03               	btfss	3,2
  2208     04B3  2CB5               	goto	u2611
  2209     04B4  2CB6               	goto	u2610
  2210     04B5                     u2611:
  2211     04B5  2CDB               	goto	l2626
  2212     04B6                     u2610:
  2213     04B6                     l2608:
  2214                           
  2215                           ;KEYPAD.c: 79:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  2216     04B6  30FD               	movlw	253
  2217     04B7  0086               	movwf	6	;volatile
  2218                           
  2219                           ;KEYPAD.c: 80:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2220     04B8  3042               	movlw	66
  2221     04B9  00F2               	movwf	??_keypad_getkey
  2222     04BA                     u3807:
  2223     04BA  0BF2               	decfsz	??_keypad_getkey,f
  2224     04BB  2CBA               	goto	u3807
  2225     04BC  0000               	nop
  2226                           
  2227                           ;KEYPAD.c: 81:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  2228     04BD  2CC0               	goto	l2612
  2229     04BE                     l2610:
  2230     04BE  0824               	movf	keypad_getkey@letras+4,w
  2231     04BF  00B0               	movwf	keypad_getkey@valor
  2232     04C0                     l2612:
  2233     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2234     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2235     04C2  1E06               	btfss	6,4	;volatile
  2236     04C3  2CC5               	goto	u2621
  2237     04C4  2CC6               	goto	u2620
  2238     04C5                     u2621:
  2239     04C5  2CBE               	goto	l2610
  2240     04C6                     u2620:
  2241     04C6  2CC9               	goto	l2616
  2242     04C7                     l2614:
  2243     04C7  0825               	movf	keypad_getkey@letras+5,w
  2244     04C8  00B0               	movwf	keypad_getkey@valor
  2245     04C9                     l2616:
  2246     04C9  1E86               	btfss	6,5	;volatile
  2247     04CA  2CCC               	goto	u2631
  2248     04CB  2CCD               	goto	u2630
  2249     04CC                     u2631:
  2250     04CC  2CC7               	goto	l2614
  2251     04CD                     u2630:
  2252     04CD  2CD0               	goto	l2620
  2253     04CE                     l2618:
  2254     04CE  0826               	movf	keypad_getkey@letras+6,w
  2255     04CF  00B0               	movwf	keypad_getkey@valor
  2256     04D0                     l2620:
  2257     04D0  1F06               	btfss	6,6	;volatile
  2258     04D1  2CD3               	goto	u2641
  2259     04D2  2CD4               	goto	u2640
  2260     04D3                     u2641:
  2261     04D3  2CCE               	goto	l2618
  2262     04D4                     u2640:
  2263     04D4  2CD7               	goto	l2624
  2264     04D5                     l2622:
  2265     04D5  0827               	movf	keypad_getkey@letras+7,w
  2266     04D6  00B0               	movwf	keypad_getkey@valor
  2267     04D7                     l2624:
  2268     04D7  1F86               	btfss	6,7	;volatile
  2269     04D8  2CDA               	goto	u2651
  2270     04D9  2CDB               	goto	u2650
  2271     04DA                     u2651:
  2272     04DA  2CD5               	goto	l2622
  2273     04DB                     u2650:
  2274     04DB                     l2626:
  2275                           
  2276                           ;KEYPAD.c: 87:    if(i==2){
  2277     04DB  3002               	movlw	2
  2278     04DC  0631               	xorwf	keypad_getkey@i,w
  2279     04DD  0432               	iorwf	keypad_getkey@i+1,w
  2280     04DE  1D03               	btfss	3,2
  2281     04DF  2CE1               	goto	u2661
  2282     04E0  2CE2               	goto	u2660
  2283     04E1                     u2661:
  2284     04E1  2D07               	goto	l2646
  2285     04E2                     u2660:
  2286     04E2                     l2628:
  2287                           
  2288                           ;KEYPAD.c: 88:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  2289     04E2  30FB               	movlw	251
  2290     04E3  0086               	movwf	6	;volatile
  2291                           
  2292                           ;KEYPAD.c: 89:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2293     04E4  3042               	movlw	66
  2294     04E5  00F2               	movwf	??_keypad_getkey
  2295     04E6                     u3817:
  2296     04E6  0BF2               	decfsz	??_keypad_getkey,f
  2297     04E7  2CE6               	goto	u3817
  2298     04E8  0000               	nop
  2299                           
  2300                           ;KEYPAD.c: 90:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  2301     04E9  2CEC               	goto	l2632
  2302     04EA                     l2630:
  2303     04EA  0828               	movf	keypad_getkey@letras+8,w
  2304     04EB  00B0               	movwf	keypad_getkey@valor
  2305     04EC                     l2632:
  2306     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2307     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2308     04EE  1E06               	btfss	6,4	;volatile
  2309     04EF  2CF1               	goto	u2671
  2310     04F0  2CF2               	goto	u2670
  2311     04F1                     u2671:
  2312     04F1  2CEA               	goto	l2630
  2313     04F2                     u2670:
  2314     04F2  2CF5               	goto	l2636
  2315     04F3                     l2634:
  2316     04F3  0829               	movf	keypad_getkey@letras+9,w
  2317     04F4  00B0               	movwf	keypad_getkey@valor
  2318     04F5                     l2636:
  2319     04F5  1E86               	btfss	6,5	;volatile
  2320     04F6  2CF8               	goto	u2681
  2321     04F7  2CF9               	goto	u2680
  2322     04F8                     u2681:
  2323     04F8  2CF3               	goto	l2634
  2324     04F9                     u2680:
  2325     04F9  2CFC               	goto	l2640
  2326     04FA                     l2638:
  2327     04FA  082A               	movf	keypad_getkey@letras+10,w
  2328     04FB  00B0               	movwf	keypad_getkey@valor
  2329     04FC                     l2640:
  2330     04FC  1F06               	btfss	6,6	;volatile
  2331     04FD  2CFF               	goto	u2691
  2332     04FE  2D00               	goto	u2690
  2333     04FF                     u2691:
  2334     04FF  2CFA               	goto	l2638
  2335     0500                     u2690:
  2336     0500  2D03               	goto	l2644
  2337     0501                     l2642:
  2338     0501  082B               	movf	keypad_getkey@letras+11,w
  2339     0502  00B0               	movwf	keypad_getkey@valor
  2340     0503                     l2644:
  2341     0503  1F86               	btfss	6,7	;volatile
  2342     0504  2D06               	goto	u2701
  2343     0505  2D07               	goto	u2700
  2344     0506                     u2701:
  2345     0506  2D01               	goto	l2642
  2346     0507                     u2700:
  2347     0507                     l2646:
  2348                           
  2349                           ;KEYPAD.c: 96:    if(i==3){
  2350     0507  3003               	movlw	3
  2351     0508  0631               	xorwf	keypad_getkey@i,w
  2352     0509  0432               	iorwf	keypad_getkey@i+1,w
  2353     050A  1D03               	btfss	3,2
  2354     050B  2D0D               	goto	u2711
  2355     050C  2D0E               	goto	u2710
  2356     050D                     u2711:
  2357     050D  2D33               	goto	l2666
  2358     050E                     u2710:
  2359     050E                     l2648:
  2360                           
  2361                           ;KEYPAD.c: 97:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  2362     050E  30F7               	movlw	247
  2363     050F  0086               	movwf	6	;volatile
  2364                           
  2365                           ;KEYPAD.c: 98:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2366     0510  3042               	movlw	66
  2367     0511  00F2               	movwf	??_keypad_getkey
  2368     0512                     u3827:
  2369     0512  0BF2               	decfsz	??_keypad_getkey,f
  2370     0513  2D12               	goto	u3827
  2371     0514  0000               	nop
  2372                           
  2373                           ;KEYPAD.c: 99:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  2374     0515  2D18               	goto	l2652
  2375     0516                     l2650:
  2376     0516  082C               	movf	keypad_getkey@letras+12,w
  2377     0517  00B0               	movwf	keypad_getkey@valor
  2378     0518                     l2652:
  2379     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2380     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2381     051A  1E06               	btfss	6,4	;volatile
  2382     051B  2D1D               	goto	u2721
  2383     051C  2D1E               	goto	u2720
  2384     051D                     u2721:
  2385     051D  2D16               	goto	l2650
  2386     051E                     u2720:
  2387     051E  2D21               	goto	l2656
  2388     051F                     l2654:
  2389     051F  082D               	movf	keypad_getkey@letras+13,w
  2390     0520  00B0               	movwf	keypad_getkey@valor
  2391     0521                     l2656:
  2392     0521  1E86               	btfss	6,5	;volatile
  2393     0522  2D24               	goto	u2731
  2394     0523  2D25               	goto	u2730
  2395     0524                     u2731:
  2396     0524  2D1F               	goto	l2654
  2397     0525                     u2730:
  2398     0525  2D28               	goto	l2660
  2399     0526                     l2658:
  2400     0526  082E               	movf	keypad_getkey@letras+14,w
  2401     0527  00B0               	movwf	keypad_getkey@valor
  2402     0528                     l2660:
  2403     0528  1F06               	btfss	6,6	;volatile
  2404     0529  2D2B               	goto	u2741
  2405     052A  2D2C               	goto	u2740
  2406     052B                     u2741:
  2407     052B  2D26               	goto	l2658
  2408     052C                     u2740:
  2409     052C  2D2F               	goto	l2664
  2410     052D                     l2662:
  2411     052D  082F               	movf	keypad_getkey@letras+15,w
  2412     052E  00B0               	movwf	keypad_getkey@valor
  2413     052F                     l2664:
  2414     052F  1F86               	btfss	6,7	;volatile
  2415     0530  2D32               	goto	u2751
  2416     0531  2D33               	goto	u2750
  2417     0532                     u2751:
  2418     0532  2D2D               	goto	l2662
  2419     0533                     u2750:
  2420     0533                     l2666:
  2421                           
  2422                           ;KEYPAD.c: 104:    }
  2423     0533  3001               	movlw	1
  2424     0534  07B1               	addwf	keypad_getkey@i,f
  2425     0535  1803               	skipnc
  2426     0536  0AB2               	incf	keypad_getkey@i+1,f
  2427     0537  3000               	movlw	0
  2428     0538  07B2               	addwf	keypad_getkey@i+1,f
  2429     0539                     l2668:
  2430     0539  0832               	movf	keypad_getkey@i+1,w
  2431     053A  3A80               	xorlw	128
  2432     053B  00FF               	movwf	btemp+1
  2433     053C  3080               	movlw	128
  2434     053D  027F               	subwf	btemp+1,w
  2435     053E  1D03               	skipz
  2436     053F  2D42               	goto	u2765
  2437     0540  3004               	movlw	4
  2438     0541  0231               	subwf	keypad_getkey@i,w
  2439     0542                     u2765:
  2440     0542  1C03               	skipc
  2441     0543  2D45               	goto	u2761
  2442     0544  2D46               	goto	u2760
  2443     0545                     u2761:
  2444     0545  2C83               	goto	l2586
  2445     0546                     u2760:
  2446     0546                     l2670:
  2447                           
  2448                           ;KEYPAD.c: 106:    return valor;
  2449     0546  1283               	bcf	3,5	;RP0=0, select bank0
  2450     0547  1303               	bcf	3,6	;RP1=0, select bank0
  2451     0548  0830               	movf	keypad_getkey@valor,w
  2452     0549                     l95:
  2453     0549  0008               	return
  2454     054A                     __end_of_keypad_getkey:
  2455                           
  2456                           	psect	text6
  2457     0EC3                     __ptext6:	
  2458 ;; *************** function _funcion_monitoreo_puertas *****************
  2459 ;; Defined at:
  2460 ;;		line 250 in file "main.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  buffer         17   43[BANK0 ] unsigned char [17]
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0      17       0       0       0
  2476 ;;      Temps:          0       0       0       0       0
  2477 ;;      Totals:         0      17       0       0       0
  2478 ;;Total ram usage:       17 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 6
  2481 ;; This function calls:
  2482 ;;		_LCD_Clear
  2483 ;;		_LCD_String_xy
  2484 ;;		_read_hall
  2485 ;;		_read_movimiento
  2486 ;;		_sprintf
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492     0EC3                     _funcion_monitoreo_puertas:	
  2493                           ;psect for function _funcion_monitoreo_puertas
  2494                           
  2495     0EC3                     l3748:	
  2496                           ;incstack = 0
  2497                           ; Regs used in _funcion_monitoreo_puertas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2498                           
  2499                           
  2500                           ;main.c: 251:     sensor_hall = read_hall();
  2501     0EC3  120A  158A  2281  120A  158A  	fcall	_read_hall
  2502     0EC8  0873               	movf	?_read_hall+1,w
  2503     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  2504     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  2505     0ECB  00E4               	movwf	_sensor_hall+1
  2506     0ECC  0872               	movf	?_read_hall,w
  2507     0ECD  00E3               	movwf	_sensor_hall
  2508                           
  2509                           ;main.c: 252:     valor_evento = read_movimiento();
  2510     0ECE  120A  158A  2294  120A  158A  	fcall	_read_movimiento
  2511     0ED3  0873               	movf	?_read_movimiento+1,w
  2512     0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2513     0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2514     0ED6  00E2               	movwf	_valor_evento+1
  2515     0ED7  0872               	movf	?_read_movimiento,w
  2516     0ED8  00E1               	movwf	_valor_evento
  2517     0ED9                     l3750:
  2518                           
  2519                           ;main.c: 254:     LCD_Clear();
  2520     0ED9  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  2521     0EDE                     l3752:
  2522                           
  2523                           ;main.c: 255:     char buffer[17];;main.c: 256:     sprintf(buffer, "H: %d O: %d", senso
      +                          r_hall, valor_evento);
  2524     0EDE  3057               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2525     0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2526     0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2527     0EE1  00B8               	movwf	sprintf@fmt
  2528     0EE2  0864               	movf	_sensor_hall+1,w
  2529     0EE3  00BA               	movwf	?_sprintf+2
  2530     0EE4  0863               	movf	_sensor_hall,w
  2531     0EE5  00B9               	movwf	?_sprintf+1
  2532     0EE6  0862               	movf	_valor_evento+1,w
  2533     0EE7  00BC               	movwf	?_sprintf+4
  2534     0EE8  0861               	movf	_valor_evento,w
  2535     0EE9  00BB               	movwf	?_sprintf+3
  2536     0EEA  304B               	movlw	(low (funcion_monitoreo_puertas@buffer| 0))& (0+255)
  2537     0EEB  120A  158A  2304  120A  158A  	fcall	_sprintf
  2538     0EF0                     l3754:
  2539                           
  2540                           ;main.c: 257:     LCD_String_xy(0, 0, buffer);
  2541     0EF0  01F7               	clrf	LCD_String_xy@pos
  2542     0EF1  304B               	movlw	(low (funcion_monitoreo_puertas@buffer| 0))& (0+255)
  2543     0EF2  00F8               	movwf	LCD_String_xy@msg
  2544     0EF3  3000               	movlw	0
  2545     0EF4  00F9               	movwf	LCD_String_xy@msg+1
  2546     0EF5  3000               	movlw	0
  2547     0EF6  120A  158A  238F  120A  158A  	fcall	_LCD_String_xy
  2548     0EFB                     l3756:
  2549                           
  2550                           ;main.c: 259:     timeout_ms = 5000;
  2551     0EFB  3088               	movlw	136
  2552     0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  2553     0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  2554     0EFE  00E9               	movwf	_timeout_ms
  2555     0EFF  3013               	movlw	19
  2556     0F00  00EA               	movwf	_timeout_ms+1
  2557     0F01                     l3758:
  2558                           
  2559                           ;main.c: 261:     if (sensor_hall > 0) {
  2560     0F01  0864               	movf	_sensor_hall+1,w
  2561     0F02  3A80               	xorlw	128
  2562     0F03  00FF               	movwf	btemp+1
  2563     0F04  3080               	movlw	128
  2564     0F05  027F               	subwf	btemp+1,w
  2565     0F06  1D03               	skipz
  2566     0F07  2F0A               	goto	u3755
  2567     0F08  3001               	movlw	1
  2568     0F09  0263               	subwf	_sensor_hall,w
  2569     0F0A                     u3755:
  2570     0F0A  1C03               	skipc
  2571     0F0B  2F0D               	goto	u3751
  2572     0F0C  2F0E               	goto	u3750
  2573     0F0D                     u3751:
  2574     0F0D  2F15               	goto	l3764
  2575     0F0E                     u3750:
  2576     0F0E                     l3760:
  2577                           
  2578                           ;main.c: 262:         estado_actual = sistema_alerta;
  2579     0F0E  3006               	movlw	6
  2580     0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  2581     0F10  1303               	bcf	3,6	;RP1=0, select bank0
  2582     0F11  00EF               	movwf	_estado_actual
  2583     0F12                     l3762:
  2584                           
  2585                           ;main.c: 263:         ms_counter = 0;
  2586     0F12  01FA               	clrf	_ms_counter	;volatile
  2587     0F13  01FB               	clrf	_ms_counter+1	;volatile
  2588                           
  2589                           ;main.c: 264:     } else if (ms_counter >= timeout_ms) {
  2590     0F14  2F24               	goto	l354
  2591     0F15                     l3764:
  2592     0F15  1283               	bcf	3,5	;RP0=0, select bank0
  2593     0F16  1303               	bcf	3,6	;RP1=0, select bank0
  2594     0F17  086A               	movf	_timeout_ms+1,w
  2595     0F18  027B               	subwf	_ms_counter+1,w	;volatile
  2596     0F19  1D03               	skipz
  2597     0F1A  2F1D               	goto	u3765
  2598     0F1B  0869               	movf	_timeout_ms,w
  2599     0F1C  027A               	subwf	_ms_counter,w	;volatile
  2600     0F1D                     u3765:
  2601     0F1D  1C03               	skipc
  2602     0F1E  2F20               	goto	u3761
  2603     0F1F  2F21               	goto	u3760
  2604     0F20                     u3761:
  2605     0F20  2F24               	goto	l354
  2606     0F21                     u3760:
  2607     0F21                     l3766:
  2608                           
  2609                           ;main.c: 265:         estado_actual = sistema_monitoreo_ambiental;
  2610     0F21  3003               	movlw	3
  2611     0F22  00EF               	movwf	_estado_actual
  2612     0F23  2F12               	goto	l3762
  2613     0F24                     l354:
  2614     0F24  0008               	return
  2615     0F25                     __end_of_funcion_monitoreo_puertas:
  2616                           
  2617                           	psect	text7
  2618     0A94                     __ptext7:	
  2619 ;; *************** function _read_movimiento *****************
  2620 ;; Defined at:
  2621 ;;		line 37 in file "monitoreo_sensores.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  2    2[COMMON] int 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         2       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:          1       0       0       0       0
  2638 ;;      Totals:         3       0       0       0       0
  2639 ;;Total ram usage:        3 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;;		_funcion_monitoreo_puertas
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650     0A94                     _read_movimiento:	
  2651                           ;psect for function _read_movimiento
  2652                           
  2653     0A94                     l2736:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _read_movimiento: [wreg+status,2]
  2656                           
  2657                           
  2658                           ;monitoreo_sensores.c: 38:     if (PORTDbits.RD2 == 1) {
  2659     0A94  1283               	bcf	3,5	;RP0=0, select bank0
  2660     0A95  1303               	bcf	3,6	;RP1=0, select bank0
  2661     0A96  1D08               	btfss	8,2	;volatile
  2662     0A97  2A99               	goto	u2791
  2663     0A98  2A9A               	goto	u2790
  2664     0A99                     u2791:
  2665     0A99  2AA4               	goto	l2744
  2666     0A9A                     u2790:
  2667     0A9A                     l2738:
  2668                           
  2669                           ;monitoreo_sensores.c: 39:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  2670     0A9A  3013               	movlw	19
  2671     0A9B  00F4               	movwf	??_read_movimiento
  2672     0A9C                     u3837:
  2673     0A9C  0BF4               	decfsz	??_read_movimiento,f
  2674     0A9D  2A9C               	goto	u3837
  2675     0A9E  2A9F               	nop2
  2676                           
  2677                           ;monitoreo_sensores.c: 40:         return 1;
  2678     0A9F  3001               	movlw	1
  2679     0AA0  00F2               	movwf	?_read_movimiento
  2680     0AA1  3000               	movlw	0
  2681     0AA2  00F3               	movwf	?_read_movimiento+1
  2682     0AA3  2AA6               	goto	l180
  2683     0AA4                     l2744:
  2684                           
  2685                           ;monitoreo_sensores.c: 42:         return 0;
  2686     0AA4  01F2               	clrf	?_read_movimiento
  2687     0AA5  01F3               	clrf	?_read_movimiento+1
  2688     0AA6                     l180:
  2689     0AA6  0008               	return
  2690     0AA7                     __end_of_read_movimiento:
  2691                           
  2692                           	psect	text8
  2693     0A81                     __ptext8:	
  2694 ;; *************** function _read_hall *****************
  2695 ;; Defined at:
  2696 ;;		line 28 in file "monitoreo_sensores.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2    2[COMMON] int 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         2       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          1       0       0       0       0
  2713 ;;      Totals:         3       0       0       0       0
  2714 ;;Total ram usage:        3 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;;		_funcion_monitoreo_puertas
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     0A81                     _read_hall:	
  2726                           ;psect for function _read_hall
  2727                           
  2728     0A81                     l2724:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _read_hall: [wreg+status,2]
  2731                           
  2732                           
  2733                           ;monitoreo_sensores.c: 29:     if (PORTAbits.RA3 == 1) {
  2734     0A81  1283               	bcf	3,5	;RP0=0, select bank0
  2735     0A82  1303               	bcf	3,6	;RP1=0, select bank0
  2736     0A83  1D85               	btfss	5,3	;volatile
  2737     0A84  2A86               	goto	u2781
  2738     0A85  2A87               	goto	u2780
  2739     0A86                     u2781:
  2740     0A86  2A91               	goto	l2732
  2741     0A87                     u2780:
  2742     0A87                     l2726:
  2743                           
  2744                           ;monitoreo_sensores.c: 30:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  2745     0A87  3013               	movlw	19
  2746     0A88  00F4               	movwf	??_read_hall
  2747     0A89                     u3847:
  2748     0A89  0BF4               	decfsz	??_read_hall,f
  2749     0A8A  2A89               	goto	u3847
  2750     0A8B  2A8C               	nop2
  2751                           
  2752                           ;monitoreo_sensores.c: 31:         return 1;
  2753     0A8C  3001               	movlw	1
  2754     0A8D  00F2               	movwf	?_read_hall
  2755     0A8E  3000               	movlw	0
  2756     0A8F  00F3               	movwf	?_read_hall+1
  2757     0A90  2A93               	goto	l175
  2758     0A91                     l2732:
  2759                           
  2760                           ;monitoreo_sensores.c: 33:         return 0;
  2761     0A91  01F2               	clrf	?_read_hall
  2762     0A92  01F3               	clrf	?_read_hall+1
  2763     0A93                     l175:
  2764     0A93  0008               	return
  2765     0A94                     __end_of_read_hall:
  2766                           
  2767                           	psect	text9
  2768     0F8E                     __ptext9:	
  2769 ;; *************** function _funcion_monitoreo_ambiental *****************
  2770 ;; Defined at:
  2771 ;;		line 226 in file "main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  buffer         17   44[BANK0 ] unsigned char [17]
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0      17       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0      17       0       0       0
  2789 ;;Total ram usage:       17 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 6
  2792 ;; This function calls:
  2793 ;;		_LCD_Clear
  2794 ;;		_LCD_String_xy
  2795 ;;		_read_fotoresistor
  2796 ;;		_read_temperatura
  2797 ;;		_sprintf
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803     0F8E                     _funcion_monitoreo_ambiental:	
  2804                           ;psect for function _funcion_monitoreo_ambiental
  2805                           
  2806     0F8E                     l3722:	
  2807                           ;incstack = 0
  2808                           ; Regs used in _funcion_monitoreo_ambiental: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  2809                           
  2810                           
  2811                           ;main.c: 227:     temp_celsius = read_temperatura();
  2812     0F8E  120A  118A  279F  120A  158A  	fcall	_read_temperatura
  2813     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0F95  0841               	movf	?_read_temperatura+1,w
  2816     0F96  00E8               	movwf	_temp_celsius+1
  2817     0F97  0840               	movf	?_read_temperatura,w
  2818     0F98  00E7               	movwf	_temp_celsius
  2819                           
  2820                           ;main.c: 228:     intensidad_luz = read_fotoresistor();
  2821     0F99  120A  158A  24D7  120A  158A  	fcall	_read_fotoresistor
  2822     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0FA0  0829               	movf	?_read_fotoresistor+1,w
  2825     0FA1  00E6               	movwf	_intensidad_luz+1
  2826     0FA2  0828               	movf	?_read_fotoresistor,w
  2827     0FA3  00E5               	movwf	_intensidad_luz
  2828     0FA4                     l3724:
  2829                           
  2830                           ;main.c: 230:     LCD_Clear();
  2831     0FA4  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  2832     0FA9                     l3726:
  2833                           
  2834                           ;main.c: 231:     char buffer[17];;main.c: 232:     sprintf(buffer, "T: %dC L: %dLx", te
      +                          mp_celsius, intensidad_luz);
  2835     0FA9  3048               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2836     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  2837     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  2838     0FAC  00B8               	movwf	sprintf@fmt
  2839     0FAD  0868               	movf	_temp_celsius+1,w
  2840     0FAE  00BA               	movwf	?_sprintf+2
  2841     0FAF  0867               	movf	_temp_celsius,w
  2842     0FB0  00B9               	movwf	?_sprintf+1
  2843     0FB1  0866               	movf	_intensidad_luz+1,w
  2844     0FB2  00BC               	movwf	?_sprintf+4
  2845     0FB3  0865               	movf	_intensidad_luz,w
  2846     0FB4  00BB               	movwf	?_sprintf+3
  2847     0FB5  304C               	movlw	(low (funcion_monitoreo_ambiental@buffer| 0))& (0+255)
  2848     0FB6  120A  158A  2304  120A  158A  	fcall	_sprintf
  2849     0FBB                     l3728:
  2850                           
  2851                           ;main.c: 233:     LCD_String_xy(0, 0, buffer);
  2852     0FBB  01F7               	clrf	LCD_String_xy@pos
  2853     0FBC  304C               	movlw	(low (funcion_monitoreo_ambiental@buffer| 0))& (0+255)
  2854     0FBD  00F8               	movwf	LCD_String_xy@msg
  2855     0FBE  3000               	movlw	0
  2856     0FBF  00F9               	movwf	LCD_String_xy@msg+1
  2857     0FC0  3000               	movlw	0
  2858     0FC1  120A  158A  238F  120A  158A  	fcall	_LCD_String_xy
  2859     0FC6                     l3730:
  2860                           
  2861                           ;main.c: 235:     PORTDbits.RD5 = 1;
  2862     0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0FC8  1688               	bsf	8,5	;volatile
  2865     0FC9                     l3732:
  2866                           
  2867                           ;main.c: 236:     timeout_ms = 5000;
  2868     0FC9  3088               	movlw	136
  2869     0FCA  00E9               	movwf	_timeout_ms
  2870     0FCB  3013               	movlw	19
  2871     0FCC  00EA               	movwf	_timeout_ms+1
  2872                           
  2873                           ;main.c: 238:     if (temp_celsius > 30 || intensidad_luz > 800) {
  2874     0FCD  0868               	movf	_temp_celsius+1,w
  2875     0FCE  3A80               	xorlw	128
  2876     0FCF  00FF               	movwf	btemp+1
  2877     0FD0  3080               	movlw	128
  2878     0FD1  027F               	subwf	btemp+1,w
  2879     0FD2  1D03               	skipz
  2880     0FD3  2FD6               	goto	u3725
  2881     0FD4  301F               	movlw	31
  2882     0FD5  0267               	subwf	_temp_celsius,w
  2883     0FD6                     u3725:
  2884     0FD6  1803               	skipnc
  2885     0FD7  2FD9               	goto	u3721
  2886     0FD8  2FDA               	goto	u3720
  2887     0FD9                     u3721:
  2888     0FD9  2FE9               	goto	l3736
  2889     0FDA                     u3720:
  2890     0FDA                     l3734:
  2891     0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  2892     0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  2893     0FDC  0866               	movf	_intensidad_luz+1,w
  2894     0FDD  3A80               	xorlw	128
  2895     0FDE  00FF               	movwf	btemp+1
  2896     0FDF  3083               	movlw	131
  2897     0FE0  027F               	subwf	btemp+1,w
  2898     0FE1  1D03               	skipz
  2899     0FE2  2FE5               	goto	u3735
  2900     0FE3  3021               	movlw	33
  2901     0FE4  0265               	subwf	_intensidad_luz,w
  2902     0FE5                     u3735:
  2903     0FE5  1C03               	skipc
  2904     0FE6  2FE8               	goto	u3731
  2905     0FE7  2FE9               	goto	u3730
  2906     0FE8                     u3731:
  2907     0FE8  2FF0               	goto	l3742
  2908     0FE9                     u3730:
  2909     0FE9                     l3736:
  2910                           
  2911                           ;main.c: 239:         estado_actual = sistema_alarma;
  2912     0FE9  3005               	movlw	5
  2913     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  2914     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  2915     0FEC  00EF               	movwf	_estado_actual
  2916     0FED                     l3738:
  2917                           
  2918                           ;main.c: 240:         ms_counter = 0;
  2919     0FED  01FA               	clrf	_ms_counter	;volatile
  2920     0FEE  01FB               	clrf	_ms_counter+1	;volatile
  2921     0FEF  2FFF               	goto	l347
  2922     0FF0                     l3742:
  2923                           
  2924                           ;main.c: 244:     if (ms_counter >= timeout_ms) {
  2925     0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  2926     0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  2927     0FF2  086A               	movf	_timeout_ms+1,w
  2928     0FF3  027B               	subwf	_ms_counter+1,w	;volatile
  2929     0FF4  1D03               	skipz
  2930     0FF5  2FF8               	goto	u3745
  2931     0FF6  0869               	movf	_timeout_ms,w
  2932     0FF7  027A               	subwf	_ms_counter,w	;volatile
  2933     0FF8                     u3745:
  2934     0FF8  1C03               	skipc
  2935     0FF9  2FFB               	goto	u3741
  2936     0FFA  2FFC               	goto	u3740
  2937     0FFB                     u3741:
  2938     0FFB  2FFF               	goto	l347
  2939     0FFC                     u3740:
  2940     0FFC                     l3744:
  2941                           
  2942                           ;main.c: 245:         estado_actual = sistema_monitoreo_puertas;
  2943     0FFC  3004               	movlw	4
  2944     0FFD  00EF               	movwf	_estado_actual
  2945     0FFE  2FED               	goto	l3738
  2946     0FFF                     l347:
  2947     0FFF  0008               	return
  2948     1000                     __end_of_funcion_monitoreo_ambiental:
  2949                           
  2950                           	psect	text10
  2951     0B04                     __ptext10:	
  2952 ;; *************** function _sprintf *****************
  2953 ;; Defined at:
  2954 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  s               1    wreg     PTR unsigned char 
  2957 ;;		 -> funcion_monitoreo_puertas@buffer(17), funcion_monitoreo_ambiental@buffer(17), 
  2958 ;;  fmt             1   24[BANK0 ] PTR const unsigned char 
  2959 ;;		 -> STR_8(12), STR_7(15), 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  s               1   31[BANK0 ] PTR unsigned char 
  2962 ;;		 -> funcion_monitoreo_puertas@buffer(17), funcion_monitoreo_ambiental@buffer(17), 
  2963 ;;  f              11   32[BANK0 ] struct _IO_FILE
  2964 ;;  ret             2    0        int 
  2965 ;;  ap              1   30[BANK0 ] PTR void [1]
  2966 ;;		 -> ?_sprintf(2), 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2   24[BANK0 ] int 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       5       0       0       0
  2977 ;;      Locals:         0      13       0       0       0
  2978 ;;      Temps:          0       1       0       0       0
  2979 ;;      Totals:         0      19       0       0       0
  2980 ;;Total ram usage:       19 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 5
  2983 ;; This function calls:
  2984 ;;		_vfprintf
  2985 ;; This function is called by:
  2986 ;;		_funcion_monitoreo_ambiental
  2987 ;;		_funcion_monitoreo_puertas
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0B04                     _sprintf:	
  2992                           ;psect for function _sprintf
  2993                           
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2997                           ;sprintf@s stored from wreg
  2998     0B04  1283               	bcf	3,5	;RP0=0, select bank0
  2999     0B05  1303               	bcf	3,6	;RP1=0, select bank0
  3000     0B06  00BF               	movwf	sprintf@s
  3001     0B07                     l3564:
  3002     0B07  3039               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3003     0B08  00BE               	movwf	sprintf@ap
  3004     0B09  083F               	movf	sprintf@s,w
  3005     0B0A  00C0               	movwf	sprintf@f
  3006     0B0B                     l3566:
  3007     0B0B  01C2               	clrf	sprintf@f+2
  3008     0B0C  01C3               	clrf	sprintf@f+3
  3009     0B0D                     l3568:
  3010     0B0D  01C9               	clrf	sprintf@f+9
  3011     0B0E  01CA               	clrf	sprintf@f+10
  3012     0B0F                     l3570:
  3013     0B0F  0838               	movf	sprintf@fmt,w
  3014     0B10  00B4               	movwf	vfprintf@fmt
  3015     0B11  303E               	movlw	(low (sprintf@ap| 0))& (0+255)
  3016     0B12  00B5               	movwf	vfprintf@ap
  3017     0B13  3040               	movlw	(low (sprintf@f| 0))& (0+255)
  3018     0B14  120A  158A  2323  120A  158A  	fcall	_vfprintf
  3019     0B19                     l3572:
  3020     0B19  1283               	bcf	3,5	;RP0=0, select bank0
  3021     0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  3022     0B1B  0842               	movf	sprintf@f+2,w
  3023     0B1C  073F               	addwf	sprintf@s,w
  3024     0B1D  00BD               	movwf	??_sprintf
  3025     0B1E  083D               	movf	??_sprintf,w
  3026     0B1F  0084               	movwf	4
  3027     0B20  1383               	bcf	3,7	;select IRP bank0
  3028     0B21  0180               	clrf	0
  3029     0B22                     l911:
  3030     0B22  0008               	return
  3031     0B23                     __end_of_sprintf:
  3032                           
  3033                           	psect	text11
  3034     0B23                     __ptext11:	
  3035 ;; *************** function _vfprintf *****************
  3036 ;; Defined at:
  3037 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  fp              1    wreg     PTR struct _IO_FILE
  3040 ;;		 -> sprintf@f(11), 
  3041 ;;  fmt             1   20[BANK0 ] PTR const unsigned char 
  3042 ;;		 -> STR_8(12), STR_7(15), 
  3043 ;;  ap              1   21[BANK0 ] PTR PTR void 
  3044 ;;		 -> sprintf@ap(1), 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  fp              1   22[BANK0 ] PTR struct _IO_FILE
  3047 ;;		 -> sprintf@f(11), 
  3048 ;;  cfmt            1   23[BANK0 ] PTR unsigned char 
  3049 ;;		 -> STR_8(12), STR_7(15), 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  2   20[BANK0 ] int 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         0       2       0       0       0
  3060 ;;      Locals:         0       2       0       0       0
  3061 ;;      Temps:          0       0       0       0       0
  3062 ;;      Totals:         0       4       0       0       0
  3063 ;;Total ram usage:        4 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 4
  3066 ;; This function calls:
  3067 ;;		_vfpfcnvrt
  3068 ;; This function is called by:
  3069 ;;		_sprintf
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073     0B23                     _vfprintf:	
  3074                           ;psect for function _vfprintf
  3075                           
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3079                           ;vfprintf@fp stored from wreg
  3080     0B23  1283               	bcf	3,5	;RP0=0, select bank0
  3081     0B24  1303               	bcf	3,6	;RP1=0, select bank0
  3082     0B25  00B6               	movwf	vfprintf@fp
  3083     0B26                     l3488:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3086     0B26  0834               	movf	vfprintf@fmt,w
  3087     0B27  00B7               	movwf	vfprintf@cfmt
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3090     0B28  2B33               	goto	l3492
  3091     0B29                     l3490:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3094     0B29  3037               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3095     0B2A  00A8               	movwf	vfpfcnvrt@fmt
  3096     0B2B  0835               	movf	vfprintf@ap,w
  3097     0B2C  00A9               	movwf	vfpfcnvrt@ap
  3098     0B2D  0836               	movf	vfprintf@fp,w
  3099     0B2E  120A  118A  2378  120A  158A  	fcall	_vfpfcnvrt
  3100     0B33                     l3492:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3103     0B33  1283               	bcf	3,5	;RP0=0, select bank0
  3104     0B34  1303               	bcf	3,6	;RP1=0, select bank0
  3105     0B35  0837               	movf	vfprintf@cfmt,w
  3106     0B36  0084               	movwf	4
  3107     0B37  120A  118A  260E  120A  158A  	fcall	stringdir
  3108     0B3C  3A00               	xorlw	0
  3109     0B3D  1D03               	skipz
  3110     0B3E  2B40               	goto	u3681
  3111     0B3F  2B41               	goto	u3680
  3112     0B40                     u3681:
  3113     0B40  2B29               	goto	l3490
  3114     0B41                     u3680:
  3115     0B41                     l3494:
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3118     0B41  01B4               	clrf	?_vfprintf
  3119     0B42  01B5               	clrf	?_vfprintf+1
  3120     0B43                     l955:
  3121     0B43  0008               	return
  3122     0B44                     __end_of_vfprintf:
  3123                           
  3124                           	psect	text12
  3125     0378                     __ptext12:	
  3126 ;; *************** function _vfpfcnvrt *****************
  3127 ;; Defined at:
  3128 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  fp              1    wreg     PTR struct _IO_FILE
  3131 ;;		 -> sprintf@f(11), 
  3132 ;;  fmt             1    8[BANK0 ] PTR PTR unsigned char 
  3133 ;;		 -> vfprintf@cfmt(1), 
  3134 ;;  ap              1    9[BANK0 ] PTR PTR void 
  3135 ;;		 -> sprintf@ap(1), 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  3138 ;;		 -> sprintf@f(11), 
  3139 ;;  convarg         4   15[BANK0 ] struct .
  3140 ;;  c               1   19[BANK0 ] unsigned char 
  3141 ;;  cp              1   14[BANK0 ] PTR unsigned char 
  3142 ;;		 -> STR_8(12), STR_7(15), 
  3143 ;;  done            1   12[BANK0 ] _Bool 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       2       0       0       0
  3154 ;;      Locals:         0       8       0       0       0
  3155 ;;      Temps:          0       2       0       0       0
  3156 ;;      Totals:         0      12       0       0       0
  3157 ;;Total ram usage:       12 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 3
  3160 ;; This function calls:
  3161 ;;		___awdiv
  3162 ;;		___awmod
  3163 ;;		_abs
  3164 ;;		_fputc
  3165 ;; This function is called by:
  3166 ;;		_vfprintf
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170     0378                     _vfpfcnvrt:	
  3171                           ;psect for function _vfpfcnvrt
  3172                           
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3176                           ;vfpfcnvrt@fp stored from wreg
  3177     0378  1283               	bcf	3,5	;RP0=0, select bank0
  3178     0379  1303               	bcf	3,6	;RP1=0, select bank0
  3179     037A  00AD               	movwf	vfpfcnvrt@fp
  3180     037B                     l3228:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3183     037B  0828               	movf	vfpfcnvrt@fmt,w
  3184     037C  0084               	movwf	4
  3185     037D  1383               	bcf	3,7	;select IRP bank0
  3186     037E  0800               	movf	0,w
  3187     037F  0084               	movwf	4
  3188     0380  120A  118A  260E  120A  118A  	fcall	stringdir
  3189     0385  3A25               	xorlw	37
  3190     0386  1D03               	skipz
  3191     0387  2B89               	goto	u3091
  3192     0388  2B8A               	goto	u3090
  3193     0389                     u3091:
  3194     0389  2C51               	goto	l3274
  3195     038A                     u3090:
  3196     038A                     l3230:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3199     038A  3001               	movlw	1
  3200     038B  00FF               	movwf	btemp+1
  3201     038C  0828               	movf	vfpfcnvrt@fmt,w
  3202     038D  0084               	movwf	4
  3203     038E  087F               	movf	btemp+1,w
  3204     038F  0780               	addwf	0,f
  3205     0390                     l3232:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3208     0390  1683               	bsf	3,5	;RP0=1, select bank1
  3209     0391  1303               	bcf	3,6	;RP1=0, select bank1
  3210     0392  01C0               	clrf	_width^(0+128)
  3211     0393  01C1               	clrf	(_width+1)^(0+128)
  3212     0394  1003               	clrc
  3213     0395  3000               	movlw	0
  3214     0396  1803               	btfsc	3,0
  3215     0397  3001               	movlw	1
  3216     0398  1283               	bcf	3,5	;RP0=0, select bank0
  3217     0399  1303               	bcf	3,6	;RP1=0, select bank0
  3218     039A  00ED               	movwf	_flags
  3219     039B                     l3234:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3222     039B  30FF               	movlw	255
  3223     039C  00DF               	movwf	_prec
  3224     039D  30FF               	movlw	255
  3225     039E  00E0               	movwf	_prec+1
  3226     039F                     l3236:
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3229     039F  0828               	movf	vfpfcnvrt@fmt,w
  3230     03A0  0084               	movwf	4
  3231     03A1  0800               	movf	0,w
  3232     03A2  00AE               	movwf	vfpfcnvrt@cp
  3233     03A3                     l3238:
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3236     03A3  082E               	movf	vfpfcnvrt@cp,w
  3237     03A4  0084               	movwf	4
  3238     03A5  120A  118A  260E  120A  118A  	fcall	stringdir
  3239     03AA  3A64               	xorlw	100
  3240     03AB  1903               	skipnz
  3241     03AC  2BAE               	goto	u3101
  3242     03AD  2BAF               	goto	u3100
  3243     03AE                     u3101:
  3244     03AE  2BBB               	goto	l3242
  3245     03AF                     u3100:
  3246     03AF                     l3240:
  3247     03AF  082E               	movf	vfpfcnvrt@cp,w
  3248     03B0  0084               	movwf	4
  3249     03B1  120A  118A  260E  120A  118A  	fcall	stringdir
  3250     03B6  3A69               	xorlw	105
  3251     03B7  1D03               	skipz
  3252     03B8  2BBA               	goto	u3111
  3253     03B9  2BBB               	goto	u3110
  3254     03BA                     u3111:
  3255     03BA  2C47               	goto	l3270
  3256     03BB                     u3110:
  3257     03BB                     l3242:
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3260     03BB  0829               	movf	vfpfcnvrt@ap,w
  3261     03BC  0084               	movwf	4
  3262     03BD  0800               	movf	0,w
  3263     03BE  00FF               	movwf	btemp+1
  3264     03BF  3002               	movlw	2
  3265     03C0  0780               	addwf	0,f
  3266     03C1  087F               	movf	btemp+1,w
  3267     03C2  0084               	movwf	4
  3268     03C3  0800               	movf	0,w
  3269     03C4  00AF               	movwf	vfpfcnvrt@convarg
  3270     03C5  0A84               	incf	4,f
  3271     03C6  0800               	movf	0,w
  3272     03C7  00B0               	movwf	vfpfcnvrt@convarg+1
  3273     03C8                     l3244:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3276     03C8  0828               	movf	vfpfcnvrt@fmt,w
  3277     03C9  0084               	movwf	4
  3278     03CA  082E               	movf	vfpfcnvrt@cp,w
  3279     03CB  3E01               	addlw	1
  3280     03CC  0080               	movwf	0
  3281     03CD                     l3246:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3284     03CD  3020               	movlw	32
  3285     03CE  00B3               	movwf	vfpfcnvrt@c
  3286     03CF                     l3248:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3289     03CF  1BB0               	btfsc	vfpfcnvrt@convarg+1,7
  3290     03D0  2BD2               	goto	u3121
  3291     03D1  2BD4               	goto	u3120
  3292     03D2                     u3121:
  3293     03D2  3001               	movlw	1
  3294     03D3  2BD5               	goto	u3130
  3295     03D4                     u3120:
  3296     03D4  3000               	movlw	0
  3297     03D5                     u3130:
  3298     03D5  00AC               	movwf	vfpfcnvrt@done
  3299     03D6                     l3250:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3302     03D6  3001               	movlw	1
  3303     03D7  02B3               	subwf	vfpfcnvrt@c,f
  3304     03D8  0833               	movf	vfpfcnvrt@c,w
  3305     03D9  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3306     03DA  0084               	movwf	4
  3307     03DB  300A               	movlw	10
  3308     03DC  00F2               	movwf	___awmod@divisor
  3309     03DD  3000               	movlw	0
  3310     03DE  00F3               	movwf	___awmod@divisor+1
  3311     03DF  0830               	movf	vfpfcnvrt@convarg+1,w
  3312     03E0  00F5               	movwf	___awmod@dividend+1
  3313     03E1  082F               	movf	vfpfcnvrt@convarg,w
  3314     03E2  00F4               	movwf	___awmod@dividend
  3315     03E3  120A  158A  260D  120A  118A  	fcall	___awmod
  3316     03E8  0873               	movf	?___awmod+1,w
  3317     03E9  00F9               	movwf	abs@a+1
  3318     03EA  0872               	movf	?___awmod,w
  3319     03EB  00F8               	movwf	abs@a
  3320     03EC  120A  158A  226E  120A  118A  	fcall	_abs
  3321     03F1  0878               	movf	?_abs,w
  3322     03F2  3E30               	addlw	48
  3323     03F3  1383               	bcf	3,7	;select IRP bank1
  3324     03F4  0080               	movwf	0
  3325     03F5                     l3252:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3328     03F5  300A               	movlw	10
  3329     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3330     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3331     03F8  00A0               	movwf	___awdiv@divisor
  3332     03F9  3000               	movlw	0
  3333     03FA  00A1               	movwf	___awdiv@divisor+1
  3334     03FB  0830               	movf	vfpfcnvrt@convarg+1,w
  3335     03FC  00A3               	movwf	___awdiv@dividend+1
  3336     03FD  082F               	movf	vfpfcnvrt@convarg,w
  3337     03FE  00A2               	movwf	___awdiv@dividend
  3338     03FF  120A  158A  2725  120A  118A  	fcall	___awdiv
  3339     0404  1283               	bcf	3,5	;RP0=0, select bank0
  3340     0405  1303               	bcf	3,6	;RP1=0, select bank0
  3341     0406  0821               	movf	?___awdiv+1,w
  3342     0407  00B0               	movwf	vfpfcnvrt@convarg+1
  3343     0408  0820               	movf	?___awdiv,w
  3344     0409  00AF               	movwf	vfpfcnvrt@convarg
  3345     040A                     l3254:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3348     040A  082F               	movf	vfpfcnvrt@convarg,w
  3349     040B  0430               	iorwf	vfpfcnvrt@convarg+1,w
  3350     040C  1903               	btfsc	3,2
  3351     040D  2C0F               	goto	u3141
  3352     040E  2C10               	goto	u3140
  3353     040F                     u3141:
  3354     040F  2C15               	goto	l3258
  3355     0410                     u3140:
  3356     0410                     l3256:
  3357     0410  0833               	movf	vfpfcnvrt@c,w
  3358     0411  1D03               	btfss	3,2
  3359     0412  2C14               	goto	u3151
  3360     0413  2C15               	goto	u3150
  3361     0414                     u3151:
  3362     0414  2BD6               	goto	l3250
  3363     0415                     u3150:
  3364     0415                     l3258:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3367     0415  0833               	movf	vfpfcnvrt@c,w
  3368     0416  1903               	btfsc	3,2
  3369     0417  2C19               	goto	u3161
  3370     0418  2C1A               	goto	u3160
  3371     0419                     u3161:
  3372     0419  2C40               	goto	l3268
  3373     041A                     u3160:
  3374     041A                     l3260:
  3375     041A  082C               	movf	vfpfcnvrt@done,w
  3376     041B  1903               	btfsc	3,2
  3377     041C  2C1E               	goto	u3171
  3378     041D  2C1F               	goto	u3170
  3379     041E                     u3171:
  3380     041E  2C40               	goto	l3268
  3381     041F                     u3170:
  3382     041F                     l3262:
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3385     041F  3001               	movlw	1
  3386     0420  02B3               	subwf	vfpfcnvrt@c,f
  3387     0421  0833               	movf	vfpfcnvrt@c,w
  3388     0422  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3389     0423  0084               	movwf	4
  3390     0424  302D               	movlw	45
  3391     0425  1383               	bcf	3,7	;select IRP bank1
  3392     0426  0080               	movwf	0
  3393     0427  2C40               	goto	l3268
  3394     0428                     l3264:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3397     0428  0833               	movf	vfpfcnvrt@c,w
  3398     0429  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3399     042A  0084               	movwf	4
  3400     042B  1383               	bcf	3,7	;select IRP bank1
  3401     042C  0800               	movf	0,w
  3402     042D  00AA               	movwf	??_vfpfcnvrt
  3403     042E  01AB               	clrf	??_vfpfcnvrt+1
  3404     042F  082A               	movf	??_vfpfcnvrt,w
  3405     0430  00F2               	movwf	fputc@c
  3406     0431  082B               	movf	??_vfpfcnvrt+1,w
  3407     0432  00F3               	movwf	fputc@c+1
  3408     0433  082D               	movf	vfpfcnvrt@fp,w
  3409     0434  00F4               	movwf	fputc@fp
  3410     0435  120A  158A  25B7  120A  118A  	fcall	_fputc
  3411     043A                     l3266:
  3412     043A  3001               	movlw	1
  3413     043B  00FF               	movwf	btemp+1
  3414     043C  087F               	movf	btemp+1,w
  3415     043D  1283               	bcf	3,5	;RP0=0, select bank0
  3416     043E  1303               	bcf	3,6	;RP1=0, select bank0
  3417     043F  07B3               	addwf	vfpfcnvrt@c,f
  3418     0440                     l3268:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3421     0440  3020               	movlw	32
  3422     0441  0633               	xorwf	vfpfcnvrt@c,w
  3423     0442  1D03               	btfss	3,2
  3424     0443  2C45               	goto	u3181
  3425     0444  2C46               	goto	u3180
  3426     0445                     u3181:
  3427     0445  2C28               	goto	l3264
  3428     0446                     u3180:
  3429     0446  2C68               	goto	l949
  3430     0447                     l3270:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3433     0447  3001               	movlw	1
  3434     0448  00FF               	movwf	btemp+1
  3435     0449  1283               	bcf	3,5	;RP0=0, select bank0
  3436     044A  1303               	bcf	3,6	;RP1=0, select bank0
  3437     044B  0828               	movf	vfpfcnvrt@fmt,w
  3438     044C  0084               	movwf	4
  3439     044D  087F               	movf	btemp+1,w
  3440     044E  1383               	bcf	3,7	;select IRP bank0
  3441     044F  0780               	addwf	0,f
  3442     0450  2C68               	goto	l949
  3443     0451                     l3274:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3446     0451  0828               	movf	vfpfcnvrt@fmt,w
  3447     0452  0084               	movwf	4
  3448     0453  0800               	movf	0,w
  3449     0454  0084               	movwf	4
  3450     0455  120A  118A  260E  120A  118A  	fcall	stringdir
  3451     045A  00AA               	movwf	??_vfpfcnvrt
  3452     045B  01AB               	clrf	??_vfpfcnvrt+1
  3453     045C  082A               	movf	??_vfpfcnvrt,w
  3454     045D  00F2               	movwf	fputc@c
  3455     045E  082B               	movf	??_vfpfcnvrt+1,w
  3456     045F  00F3               	movwf	fputc@c+1
  3457     0460  082D               	movf	vfpfcnvrt@fp,w
  3458     0461  00F4               	movwf	fputc@fp
  3459     0462  120A  158A  25B7  120A  118A  	fcall	_fputc
  3460     0467  2C47               	goto	l3270
  3461     0468                     l949:
  3462     0468  0008               	return
  3463     0469                     __end_of_vfpfcnvrt:
  3464                           
  3465                           	psect	text13
  3466     0DB7                     __ptext13:	
  3467 ;; *************** function _fputc *****************
  3468 ;; Defined at:
  3469 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  c               2    2[COMMON] int 
  3472 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  3473 ;;		 -> sprintf@f(11), 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  2    2[COMMON] int 
  3478 ;; Registers used:
  3479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         3       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0
  3487 ;;      Temps:          5       0       0       0       0
  3488 ;;      Totals:         8       0       0       0       0
  3489 ;;Total ram usage:        8 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; Hardware stack levels required when called: 2
  3492 ;; This function calls:
  3493 ;;		_putch
  3494 ;; This function is called by:
  3495 ;;		_vfpfcnvrt
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499     0DB7                     _fputc:	
  3500                           ;psect for function _fputc
  3501                           
  3502     0DB7                     l2154:	
  3503                           ;incstack = 0
  3504                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3505                           
  3506     0DB7  0874               	movf	fputc@fp,w
  3507     0DB8  1903               	btfsc	3,2
  3508     0DB9  2DBB               	goto	u1671
  3509     0DBA  2DBC               	goto	u1670
  3510     0DBB                     u1671:
  3511     0DBB  2DC1               	goto	l2158
  3512     0DBC                     u1670:
  3513     0DBC                     l2156:
  3514     0DBC  0874               	movf	fputc@fp,w
  3515     0DBD  1D03               	btfss	3,2
  3516     0DBE  2DC0               	goto	u1681
  3517     0DBF  2DC1               	goto	u1680
  3518     0DC0                     u1681:
  3519     0DC0  2DC8               	goto	l2160
  3520     0DC1                     u1680:
  3521     0DC1                     l2158:
  3522     0DC1  0872               	movf	fputc@c,w
  3523     0DC2  120A  118A  27FD  120A  158A  	fcall	_putch
  3524     0DC7  2E0C               	goto	l974
  3525     0DC8                     l2160:
  3526     0DC8  0874               	movf	fputc@fp,w
  3527     0DC9  3E09               	addlw	9
  3528     0DCA  0084               	movwf	4
  3529     0DCB  1383               	bcf	3,7	;select IRP bank0
  3530     0DCC  0800               	movf	0,w
  3531     0DCD  00F5               	movwf	??_fputc
  3532     0DCE  0A84               	incf	4,f
  3533     0DCF  0800               	movf	0,w
  3534     0DD0  00F6               	movwf	??_fputc+1
  3535     0DD1  0875               	movf	??_fputc,w
  3536     0DD2  0476               	iorwf	??_fputc+1,w
  3537     0DD3  1903               	btfsc	3,2
  3538     0DD4  2DD6               	goto	u1691
  3539     0DD5  2DD7               	goto	u1690
  3540     0DD6                     u1691:
  3541     0DD6  2DF5               	goto	l2164
  3542     0DD7                     u1690:
  3543     0DD7                     l2162:
  3544     0DD7  0874               	movf	fputc@fp,w
  3545     0DD8  3E09               	addlw	9
  3546     0DD9  0084               	movwf	4
  3547     0DDA  0800               	movf	0,w
  3548     0DDB  00F5               	movwf	??_fputc
  3549     0DDC  0A84               	incf	4,f
  3550     0DDD  0800               	movf	0,w
  3551     0DDE  00F6               	movwf	??_fputc+1
  3552     0DDF  0874               	movf	fputc@fp,w
  3553     0DE0  3E02               	addlw	2
  3554     0DE1  0084               	movwf	4
  3555     0DE2  0800               	movf	0,w
  3556     0DE3  00F7               	movwf	??_fputc+2
  3557     0DE4  0A84               	incf	4,f
  3558     0DE5  0800               	movf	0,w
  3559     0DE6  00F8               	movwf	??_fputc+3
  3560     0DE7  0878               	movf	??_fputc+3,w
  3561     0DE8  3A80               	xorlw	128
  3562     0DE9  00F9               	movwf	??_fputc+4
  3563     0DEA  0876               	movf	??_fputc+1,w
  3564     0DEB  3A80               	xorlw	128
  3565     0DEC  0279               	subwf	??_fputc+4,w
  3566     0DED  1D03               	skipz
  3567     0DEE  2DF1               	goto	u1705
  3568     0DEF  0875               	movf	??_fputc,w
  3569     0DF0  0277               	subwf	??_fputc+2,w
  3570     0DF1                     u1705:
  3571     0DF1  1803               	skipnc
  3572     0DF2  2DF4               	goto	u1701
  3573     0DF3  2DF5               	goto	u1700
  3574     0DF4                     u1701:
  3575     0DF4  2E0C               	goto	l974
  3576     0DF5                     u1700:
  3577     0DF5                     l2164:
  3578     0DF5  0874               	movf	fputc@fp,w
  3579     0DF6  3E02               	addlw	2
  3580     0DF7  0084               	movwf	4
  3581     0DF8  1383               	bcf	3,7	;select IRP bank0
  3582     0DF9  0800               	movf	0,w
  3583     0DFA  00F5               	movwf	??_fputc
  3584     0DFB  0874               	movf	fputc@fp,w
  3585     0DFC  0084               	movwf	4
  3586     0DFD  0800               	movf	0,w
  3587     0DFE  0775               	addwf	??_fputc,w
  3588     0DFF  00F6               	movwf	??_fputc+1
  3589     0E00  0876               	movf	??_fputc+1,w
  3590     0E01  0084               	movwf	4
  3591     0E02  0872               	movf	fputc@c,w
  3592     0E03  0080               	movwf	0
  3593     0E04  0874               	movf	fputc@fp,w
  3594     0E05  3E02               	addlw	2
  3595     0E06  0084               	movwf	4
  3596     0E07  3001               	movlw	1
  3597     0E08  0780               	addwf	0,f
  3598     0E09  0A84               	incf	4,f
  3599     0E0A  1803               	skipnc
  3600     0E0B  0A80               	incf	0,f
  3601     0E0C                     l974:
  3602     0E0C  0008               	return
  3603     0E0D                     __end_of_fputc:
  3604                           
  3605                           	psect	text14
  3606     07FD                     __ptext14:	
  3607 ;; *************** function _putch *****************
  3608 ;; Defined at:
  3609 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  c               1    wreg     unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  c               1    0[COMMON] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3623 ;;      Params:         0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0
  3626 ;;      Totals:         0       0       0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_fputc
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637     07FD                     _putch:	
  3638                           ;psect for function _putch
  3639                           
  3640     07FD                     l985:	
  3641                           ;incstack = 0
  3642                           ; Regs used in _putch: [wreg]
  3643                           
  3644     07FD  0008               	return
  3645     07FE                     __end_of_putch:
  3646                           
  3647                           	psect	text15
  3648     0A6E                     __ptext15:	
  3649 ;; *************** function _abs *****************
  3650 ;; Defined at:
  3651 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  a               2    8[COMMON] int 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2    8[COMMON] int 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         2       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0
  3667 ;;      Temps:          0       2       0       0       0
  3668 ;;      Totals:         2       2       0       0       0
  3669 ;;Total ram usage:        4 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 1
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_vfpfcnvrt
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679     0A6E                     _abs:	
  3680                           ;psect for function _abs
  3681                           
  3682     0A6E                     l3186:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _abs: [wreg+status,2+status,0]
  3685                           
  3686     0A6E  1BF9               	btfsc	abs@a+1,7
  3687     0A6F  2A71               	goto	u3041
  3688     0A70  2A72               	goto	u3040
  3689     0A71                     u3041:
  3690     0A71  2A73               	goto	l3190
  3691     0A72                     u3040:
  3692     0A72                     l3188:
  3693     0A72  2A80               	goto	l962
  3694     0A73                     l3190:
  3695     0A73  0978               	comf	abs@a,w
  3696     0A74  1283               	bcf	3,5	;RP0=0, select bank0
  3697     0A75  1303               	bcf	3,6	;RP1=0, select bank0
  3698     0A76  00A0               	movwf	??_abs
  3699     0A77  0979               	comf	abs@a+1,w
  3700     0A78  00A1               	movwf	??_abs+1
  3701     0A79  0AA0               	incf	??_abs,f
  3702     0A7A  1903               	skipnz
  3703     0A7B  0AA1               	incf	??_abs+1,f
  3704     0A7C  0820               	movf	??_abs,w
  3705     0A7D  00F8               	movwf	?_abs
  3706     0A7E  0821               	movf	??_abs+1,w
  3707     0A7F  00F9               	movwf	?_abs+1
  3708     0A80                     l962:
  3709     0A80  0008               	return
  3710     0A81                     __end_of_abs:
  3711                           
  3712                           	psect	text16
  3713     0E0D                     __ptext16:	
  3714 ;; *************** function ___awmod *****************
  3715 ;; Defined at:
  3716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  divisor         2    2[COMMON] int 
  3719 ;;  dividend        2    4[COMMON] int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  sign            1    7[COMMON] unsigned char 
  3722 ;;  counter         1    6[COMMON] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2    2[COMMON] int 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, btemp+1
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3732 ;;      Params:         4       0       0       0       0
  3733 ;;      Locals:         2       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0
  3735 ;;      Totals:         6       0       0       0       0
  3736 ;;Total ram usage:        6 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; Hardware stack levels required when called: 1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_vfpfcnvrt
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746     0E0D                     ___awmod:	
  3747                           ;psect for function ___awmod
  3748                           
  3749     0E0D                     l2116:	
  3750                           ;incstack = 0
  3751                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3752                           
  3753     0E0D  01F7               	clrf	___awmod@sign
  3754     0E0E                     l2118:
  3755     0E0E  1FF5               	btfss	___awmod@dividend+1,7
  3756     0E0F  2E11               	goto	u1581
  3757     0E10  2E12               	goto	u1580
  3758     0E11                     u1581:
  3759     0E11  2E19               	goto	l2124
  3760     0E12                     u1580:
  3761     0E12                     l2120:
  3762     0E12  09F4               	comf	___awmod@dividend,f
  3763     0E13  09F5               	comf	___awmod@dividend+1,f
  3764     0E14  0AF4               	incf	___awmod@dividend,f
  3765     0E15  1903               	skipnz
  3766     0E16  0AF5               	incf	___awmod@dividend+1,f
  3767     0E17                     l2122:
  3768     0E17  01F7               	clrf	___awmod@sign
  3769     0E18  0AF7               	incf	___awmod@sign,f
  3770     0E19                     l2124:
  3771     0E19  1FF3               	btfss	___awmod@divisor+1,7
  3772     0E1A  2E1C               	goto	u1591
  3773     0E1B  2E1D               	goto	u1590
  3774     0E1C                     u1591:
  3775     0E1C  2E22               	goto	l2128
  3776     0E1D                     u1590:
  3777     0E1D                     l2126:
  3778     0E1D  09F2               	comf	___awmod@divisor,f
  3779     0E1E  09F3               	comf	___awmod@divisor+1,f
  3780     0E1F  0AF2               	incf	___awmod@divisor,f
  3781     0E20  1903               	skipnz
  3782     0E21  0AF3               	incf	___awmod@divisor+1,f
  3783     0E22                     l2128:
  3784     0E22  0872               	movf	___awmod@divisor,w
  3785     0E23  0473               	iorwf	___awmod@divisor+1,w
  3786     0E24  1903               	btfsc	3,2
  3787     0E25  2E27               	goto	u1601
  3788     0E26  2E28               	goto	u1600
  3789     0E27                     u1601:
  3790     0E27  2E57               	goto	l2146
  3791     0E28                     u1600:
  3792     0E28                     l2130:
  3793     0E28  01F6               	clrf	___awmod@counter
  3794     0E29  0AF6               	incf	___awmod@counter,f
  3795     0E2A  2E36               	goto	l2136
  3796     0E2B                     l2132:
  3797     0E2B  3001               	movlw	1
  3798     0E2C                     u1615:
  3799     0E2C  1003               	clrc
  3800     0E2D  0DF2               	rlf	___awmod@divisor,f
  3801     0E2E  0DF3               	rlf	___awmod@divisor+1,f
  3802     0E2F  3EFF               	addlw	-1
  3803     0E30  1D03               	skipz
  3804     0E31  2E2C               	goto	u1615
  3805     0E32                     l2134:
  3806     0E32  3001               	movlw	1
  3807     0E33  00FF               	movwf	btemp+1
  3808     0E34  087F               	movf	btemp+1,w
  3809     0E35  07F6               	addwf	___awmod@counter,f
  3810     0E36                     l2136:
  3811     0E36  1FF3               	btfss	___awmod@divisor+1,7
  3812     0E37  2E39               	goto	u1621
  3813     0E38  2E3A               	goto	u1620
  3814     0E39                     u1621:
  3815     0E39  2E2B               	goto	l2132
  3816     0E3A                     u1620:
  3817     0E3A                     l2138:
  3818     0E3A  0873               	movf	___awmod@divisor+1,w
  3819     0E3B  0275               	subwf	___awmod@dividend+1,w
  3820     0E3C  1D03               	skipz
  3821     0E3D  2E40               	goto	u1635
  3822     0E3E  0872               	movf	___awmod@divisor,w
  3823     0E3F  0274               	subwf	___awmod@dividend,w
  3824     0E40                     u1635:
  3825     0E40  1C03               	skipc
  3826     0E41  2E43               	goto	u1631
  3827     0E42  2E44               	goto	u1630
  3828     0E43                     u1631:
  3829     0E43  2E4A               	goto	l2142
  3830     0E44                     u1630:
  3831     0E44                     l2140:
  3832     0E44  0872               	movf	___awmod@divisor,w
  3833     0E45  02F4               	subwf	___awmod@dividend,f
  3834     0E46  0873               	movf	___awmod@divisor+1,w
  3835     0E47  1C03               	skipc
  3836     0E48  03F5               	decf	___awmod@dividend+1,f
  3837     0E49  02F5               	subwf	___awmod@dividend+1,f
  3838     0E4A                     l2142:
  3839     0E4A  3001               	movlw	1
  3840     0E4B                     u1645:
  3841     0E4B  1003               	clrc
  3842     0E4C  0CF3               	rrf	___awmod@divisor+1,f
  3843     0E4D  0CF2               	rrf	___awmod@divisor,f
  3844     0E4E  3EFF               	addlw	-1
  3845     0E4F  1D03               	skipz
  3846     0E50  2E4B               	goto	u1645
  3847     0E51                     l2144:
  3848     0E51  3001               	movlw	1
  3849     0E52  02F6               	subwf	___awmod@counter,f
  3850     0E53  1D03               	btfss	3,2
  3851     0E54  2E56               	goto	u1651
  3852     0E55  2E57               	goto	u1650
  3853     0E56                     u1651:
  3854     0E56  2E3A               	goto	l2138
  3855     0E57                     u1650:
  3856     0E57                     l2146:
  3857     0E57  0877               	movf	___awmod@sign,w
  3858     0E58  1903               	btfsc	3,2
  3859     0E59  2E5B               	goto	u1661
  3860     0E5A  2E5C               	goto	u1660
  3861     0E5B                     u1661:
  3862     0E5B  2E61               	goto	l2150
  3863     0E5C                     u1660:
  3864     0E5C                     l2148:
  3865     0E5C  09F4               	comf	___awmod@dividend,f
  3866     0E5D  09F5               	comf	___awmod@dividend+1,f
  3867     0E5E  0AF4               	incf	___awmod@dividend,f
  3868     0E5F  1903               	skipnz
  3869     0E60  0AF5               	incf	___awmod@dividend+1,f
  3870     0E61                     l2150:
  3871     0E61  0875               	movf	___awmod@dividend+1,w
  3872     0E62  00F3               	movwf	?___awmod+1
  3873     0E63  0874               	movf	___awmod@dividend,w
  3874     0E64  00F2               	movwf	?___awmod
  3875     0E65                     l614:
  3876     0E65  0008               	return
  3877     0E66                     __end_of___awmod:
  3878                           
  3879                           	psect	text17
  3880     079F                     __ptext17:	
  3881 ;; *************** function _read_temperatura *****************
  3882 ;; Defined at:
  3883 ;;		line 35 in file "ADC.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  celsius         4   36[BANK0 ] float 
  3888 ;;  valor_adc       2   42[BANK0 ] int 
  3889 ;;  temperatura     2   40[BANK0 ] int 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2   32[BANK0 ] int 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3899 ;;      Params:         0       2       0       0       0
  3900 ;;      Locals:         0       8       0       0       0
  3901 ;;      Temps:          0       2       0       0       0
  3902 ;;      Totals:         0      12       0       0       0
  3903 ;;Total ram usage:       12 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 3
  3906 ;; This function calls:
  3907 ;;		___flmul
  3908 ;;		___fltol
  3909 ;;		___xxtofl
  3910 ;;		_adc_read
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;;		_funcion_monitoreo_ambiental
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     079F                     _read_temperatura:	
  3918                           ;psect for function _read_temperatura
  3919                           
  3920     079F                     l3498:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _read_temperatura: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3923                           
  3924                           
  3925                           ;ADC.c: 36:     int temperatura = adc_read(0);
  3926     079F  3000               	movlw	0
  3927     07A0  00F2               	movwf	adc_read@channel
  3928     07A1  00F3               	movwf	adc_read@channel+1
  3929     07A2  120A  158A  257D  120A  118A  	fcall	_adc_read
  3930     07A7  0873               	movf	?_adc_read+1,w
  3931     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3932     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  3933     07AA  00C9               	movwf	read_temperatura@temperatura+1
  3934     07AB  0872               	movf	?_adc_read,w
  3935     07AC  00C8               	movwf	read_temperatura@temperatura
  3936     07AD                     l3500:
  3937                           
  3938                           ;ADC.c: 37:     int valor_adc = 1023 - (int)temperatura;
  3939     07AD  30FF               	movlw	255
  3940     07AE  00C2               	movwf	??_read_temperatura
  3941     07AF  3003               	movlw	3
  3942     07B0  00C3               	movwf	??_read_temperatura+1
  3943     07B1  0848               	movf	read_temperatura@temperatura,w
  3944     07B2  0242               	subwf	??_read_temperatura,w
  3945     07B3  00CA               	movwf	read_temperatura@valor_adc
  3946     07B4  0849               	movf	read_temperatura@temperatura+1,w
  3947     07B5  1C03               	skipc
  3948     07B6  0A49               	incf	read_temperatura@temperatura+1,w
  3949     07B7  0243               	subwf	??_read_temperatura+1,w
  3950     07B8  00CB               	movwf	read_temperatura@valor_adc+1
  3951     07B9                     l3502:
  3952                           
  3953                           ;ADC.c: 38:     float celsius = (float)(valor_adc * 0.04058);
  3954     07B9  303D               	movlw	61
  3955     07BA  00A9               	movwf	___flmul@b+3
  3956     07BB  3026               	movlw	38
  3957     07BC  00A8               	movwf	___flmul@b+2
  3958     07BD  3037               	movlw	55
  3959     07BE  00A7               	movwf	___flmul@b+1
  3960     07BF  3037               	movlw	55
  3961     07C0  00A6               	movwf	___flmul@b
  3962     07C1  084A               	movf	read_temperatura@valor_adc,w
  3963     07C2  00F2               	movwf	___xxtofl@val
  3964     07C3  084B               	movf	read_temperatura@valor_adc+1,w
  3965     07C4  00F3               	movwf	___xxtofl@val+1
  3966     07C5  3000               	movlw	0
  3967     07C6  1BF3               	btfsc	___xxtofl@val+1,7
  3968     07C7  30FF               	movlw	255
  3969     07C8  00F4               	movwf	___xxtofl@val+2
  3970     07C9  00F5               	movwf	___xxtofl@val+3
  3971     07CA  3001               	movlw	1
  3972     07CB  120A  118A  254A  120A  118A  	fcall	___xxtofl
  3973     07D0  0875               	movf	?___xxtofl+3,w
  3974     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3975     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3976     07D3  00AD               	movwf	___flmul@a+3
  3977     07D4  0874               	movf	?___xxtofl+2,w
  3978     07D5  00AC               	movwf	___flmul@a+2
  3979     07D6  0873               	movf	?___xxtofl+1,w
  3980     07D7  00AB               	movwf	___flmul@a+1
  3981     07D8  0872               	movf	?___xxtofl,w
  3982     07D9  00AA               	movwf	___flmul@a
  3983     07DA  120A  118A  2033  120A  118A  	fcall	___flmul
  3984     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  3985     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  3986     07E1  0829               	movf	?___flmul+3,w
  3987     07E2  00C7               	movwf	read_temperatura@celsius+3
  3988     07E3  0828               	movf	?___flmul+2,w
  3989     07E4  00C6               	movwf	read_temperatura@celsius+2
  3990     07E5  0827               	movf	?___flmul+1,w
  3991     07E6  00C5               	movwf	read_temperatura@celsius+1
  3992     07E7  0826               	movf	?___flmul,w
  3993     07E8  00C4               	movwf	read_temperatura@celsius
  3994     07E9                     l3504:
  3995                           
  3996                           ;ADC.c: 39:     return (int)celsius;
  3997     07E9  0847               	movf	read_temperatura@celsius+3,w
  3998     07EA  00F5               	movwf	___fltol@f1+3
  3999     07EB  0846               	movf	read_temperatura@celsius+2,w
  4000     07EC  00F4               	movwf	___fltol@f1+2
  4001     07ED  0845               	movf	read_temperatura@celsius+1,w
  4002     07EE  00F3               	movwf	___fltol@f1+1
  4003     07EF  0844               	movf	read_temperatura@celsius,w
  4004     07F0  00F2               	movwf	___fltol@f1
  4005     07F1  120A  118A  2727  120A  118A  	fcall	___fltol
  4006     07F6  0873               	movf	?___fltol+1,w
  4007     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  4008     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  4009     07F9  00C1               	movwf	?_read_temperatura+1
  4010     07FA  0872               	movf	?___fltol,w
  4011     07FB  00C0               	movwf	?_read_temperatura
  4012     07FC                     l22:
  4013     07FC  0008               	return
  4014     07FD                     __end_of_read_temperatura:
  4015                           
  4016                           	psect	text18
  4017     054A                     __ptext18:	
  4018 ;; *************** function ___xxtofl *****************
  4019 ;; Defined at:
  4020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  sign            1    wreg     unsigned char 
  4023 ;;  val             4    2[COMMON] long 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  sign            1    0[BANK0 ] unsigned char 
  4026 ;;  arg             4    2[BANK0 ] unsigned long 
  4027 ;;  exp             1    1[BANK0 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  4    2[COMMON] unsigned char 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, btemp+1
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         4       0       0       0       0
  4038 ;;      Locals:         0       6       0       0       0
  4039 ;;      Temps:          4       0       0       0       0
  4040 ;;      Totals:         8       6       0       0       0
  4041 ;;Total ram usage:       14 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_read_temperatura
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051     054A                     ___xxtofl:	
  4052                           ;psect for function ___xxtofl
  4053                           
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  4057                           ;___xxtofl@sign stored from wreg
  4058     054A  1283               	bcf	3,5	;RP0=0, select bank0
  4059     054B  1303               	bcf	3,6	;RP1=0, select bank0
  4060     054C  00A0               	movwf	___xxtofl@sign
  4061     054D                     l2500:
  4062     054D  0820               	movf	___xxtofl@sign,w
  4063     054E  1903               	btfsc	3,2
  4064     054F  2D51               	goto	u2401
  4065     0550  2D52               	goto	u2400
  4066     0551                     u2401:
  4067     0551  2D66               	goto	l2506
  4068     0552                     u2400:
  4069     0552                     l2502:
  4070     0552  1FF5               	btfss	___xxtofl@val+3,7
  4071     0553  2D55               	goto	u2411
  4072     0554  2D56               	goto	u2410
  4073     0555                     u2411:
  4074     0555  2D66               	goto	l2506
  4075     0556                     u2410:
  4076     0556                     l2504:
  4077     0556  0972               	comf	___xxtofl@val,w
  4078     0557  00A2               	movwf	___xxtofl@arg
  4079     0558  0973               	comf	___xxtofl@val+1,w
  4080     0559  00A3               	movwf	___xxtofl@arg+1
  4081     055A  0974               	comf	___xxtofl@val+2,w
  4082     055B  00A4               	movwf	___xxtofl@arg+2
  4083     055C  0975               	comf	___xxtofl@val+3,w
  4084     055D  00A5               	movwf	___xxtofl@arg+3
  4085     055E  0AA2               	incf	___xxtofl@arg,f
  4086     055F  1903               	skipnz
  4087     0560  0AA3               	incf	___xxtofl@arg+1,f
  4088     0561  1903               	skipnz
  4089     0562  0AA4               	incf	___xxtofl@arg+2,f
  4090     0563  1903               	skipnz
  4091     0564  0AA5               	incf	___xxtofl@arg+3,f
  4092     0565  2D6E               	goto	l889
  4093     0566                     l2506:
  4094     0566  0875               	movf	___xxtofl@val+3,w
  4095     0567  00A5               	movwf	___xxtofl@arg+3
  4096     0568  0874               	movf	___xxtofl@val+2,w
  4097     0569  00A4               	movwf	___xxtofl@arg+2
  4098     056A  0873               	movf	___xxtofl@val+1,w
  4099     056B  00A3               	movwf	___xxtofl@arg+1
  4100     056C  0872               	movf	___xxtofl@val,w
  4101     056D  00A2               	movwf	___xxtofl@arg
  4102     056E                     l889:
  4103     056E  0875               	movf	___xxtofl@val+3,w
  4104     056F  0474               	iorwf	___xxtofl@val+2,w
  4105     0570  0473               	iorwf	___xxtofl@val+1,w
  4106     0571  0472               	iorwf	___xxtofl@val,w
  4107     0572  1D03               	skipz
  4108     0573  2D75               	goto	u2421
  4109     0574  2D76               	goto	u2420
  4110     0575                     u2421:
  4111     0575  2D7F               	goto	l2512
  4112     0576                     u2420:
  4113     0576                     l2508:
  4114     0576  3000               	movlw	0
  4115     0577  00F5               	movwf	?___xxtofl+3
  4116     0578  3000               	movlw	0
  4117     0579  00F4               	movwf	?___xxtofl+2
  4118     057A  3000               	movlw	0
  4119     057B  00F3               	movwf	?___xxtofl+1
  4120     057C  3000               	movlw	0
  4121     057D  00F2               	movwf	?___xxtofl
  4122     057E  2E03               	goto	l891
  4123     057F                     l2512:
  4124     057F  3096               	movlw	150
  4125     0580  00A1               	movwf	___xxtofl@exp
  4126     0581  2D8F               	goto	l2518
  4127     0582                     l2514:
  4128     0582  3001               	movlw	1
  4129     0583  00FF               	movwf	btemp+1
  4130     0584  087F               	movf	btemp+1,w
  4131     0585  07A1               	addwf	___xxtofl@exp,f
  4132     0586                     l2516:
  4133     0586  3001               	movlw	1
  4134     0587                     u2435:
  4135     0587  1003               	clrc
  4136     0588  0CA5               	rrf	___xxtofl@arg+3,f
  4137     0589  0CA4               	rrf	___xxtofl@arg+2,f
  4138     058A  0CA3               	rrf	___xxtofl@arg+1,f
  4139     058B  0CA2               	rrf	___xxtofl@arg,f
  4140     058C  3EFF               	addlw	-1
  4141     058D  1D03               	skipz
  4142     058E  2D87               	goto	u2435
  4143     058F                     l2518:
  4144     058F  30FE               	movlw	254
  4145     0590  0525               	andwf	___xxtofl@arg+3,w
  4146     0591  1D03               	btfss	3,2
  4147     0592  2D94               	goto	u2441
  4148     0593  2D95               	goto	u2440
  4149     0594                     u2441:
  4150     0594  2D82               	goto	l2514
  4151     0595                     u2440:
  4152     0595  2DB1               	goto	l2526
  4153     0596                     l2520:
  4154     0596  3001               	movlw	1
  4155     0597  00FF               	movwf	btemp+1
  4156     0598  087F               	movf	btemp+1,w
  4157     0599  07A1               	addwf	___xxtofl@exp,f
  4158     059A                     l2522:
  4159     059A  3001               	movlw	1
  4160     059B  07A2               	addwf	___xxtofl@arg,f
  4161     059C  3000               	movlw	0
  4162     059D  1803               	skipnc
  4163     059E  3001               	movlw	1
  4164     059F  07A3               	addwf	___xxtofl@arg+1,f
  4165     05A0  3000               	movlw	0
  4166     05A1  1803               	skipnc
  4167     05A2  3001               	movlw	1
  4168     05A3  07A4               	addwf	___xxtofl@arg+2,f
  4169     05A4  3000               	movlw	0
  4170     05A5  1803               	skipnc
  4171     05A6  3001               	movlw	1
  4172     05A7  07A5               	addwf	___xxtofl@arg+3,f
  4173     05A8                     l2524:
  4174     05A8  3001               	movlw	1
  4175     05A9                     u2455:
  4176     05A9  1003               	clrc
  4177     05AA  0CA5               	rrf	___xxtofl@arg+3,f
  4178     05AB  0CA4               	rrf	___xxtofl@arg+2,f
  4179     05AC  0CA3               	rrf	___xxtofl@arg+1,f
  4180     05AD  0CA2               	rrf	___xxtofl@arg,f
  4181     05AE  3EFF               	addlw	-1
  4182     05AF  1D03               	skipz
  4183     05B0  2DA9               	goto	u2455
  4184     05B1                     l2526:
  4185     05B1  30FF               	movlw	255
  4186     05B2  0525               	andwf	___xxtofl@arg+3,w
  4187     05B3  1D03               	btfss	3,2
  4188     05B4  2DB6               	goto	u2461
  4189     05B5  2DB7               	goto	u2460
  4190     05B6                     u2461:
  4191     05B6  2D96               	goto	l2520
  4192     05B7                     u2460:
  4193     05B7  2DC3               	goto	l2530
  4194     05B8                     l2528:
  4195     05B8  3001               	movlw	1
  4196     05B9  02A1               	subwf	___xxtofl@exp,f
  4197     05BA  3001               	movlw	1
  4198     05BB  00F6               	movwf	??___xxtofl
  4199     05BC                     u2475:
  4200     05BC  1003               	clrc
  4201     05BD  0DA2               	rlf	___xxtofl@arg,f
  4202     05BE  0DA3               	rlf	___xxtofl@arg+1,f
  4203     05BF  0DA4               	rlf	___xxtofl@arg+2,f
  4204     05C0  0DA5               	rlf	___xxtofl@arg+3,f
  4205     05C1  0BF6               	decfsz	??___xxtofl,f
  4206     05C2  2DBC               	goto	u2475
  4207     05C3                     l2530:
  4208     05C3  1BA4               	btfsc	___xxtofl@arg+2,7
  4209     05C4  2DC6               	goto	u2481
  4210     05C5  2DC7               	goto	u2480
  4211     05C6                     u2481:
  4212     05C6  2DCD               	goto	l902
  4213     05C7                     u2480:
  4214     05C7                     l2532:
  4215     05C7  3002               	movlw	2
  4216     05C8  0221               	subwf	___xxtofl@exp,w
  4217     05C9  1803               	skipnc
  4218     05CA  2DCC               	goto	u2491
  4219     05CB  2DCD               	goto	u2490
  4220     05CC                     u2491:
  4221     05CC  2DB8               	goto	l2528
  4222     05CD                     u2490:
  4223     05CD                     l902:
  4224     05CD  1821               	btfsc	___xxtofl@exp,0
  4225     05CE  2DD0               	goto	u2501
  4226     05CF  2DD1               	goto	u2500
  4227     05D0                     u2501:
  4228     05D0  2DD9               	goto	l903
  4229     05D1                     u2500:
  4230     05D1                     l2534:
  4231     05D1  30FF               	movlw	255
  4232     05D2  05A2               	andwf	___xxtofl@arg,f
  4233     05D3  30FF               	movlw	255
  4234     05D4  05A3               	andwf	___xxtofl@arg+1,f
  4235     05D5  307F               	movlw	127
  4236     05D6  05A4               	andwf	___xxtofl@arg+2,f
  4237     05D7  30FF               	movlw	255
  4238     05D8  05A5               	andwf	___xxtofl@arg+3,f
  4239     05D9                     l903:
  4240     05D9  1003               	clrc
  4241     05DA  0CA1               	rrf	___xxtofl@exp,f
  4242     05DB                     l2536:
  4243     05DB  0821               	movf	___xxtofl@exp,w
  4244     05DC  00F6               	movwf	??___xxtofl
  4245     05DD  01F7               	clrf	??___xxtofl+1
  4246     05DE  01F8               	clrf	??___xxtofl+2
  4247     05DF  01F9               	clrf	??___xxtofl+3
  4248     05E0  3018               	movlw	24
  4249     05E1                     u2515:
  4250     05E1  1003               	clrc
  4251     05E2  0DF6               	rlf	??___xxtofl,f
  4252     05E3  0DF7               	rlf	??___xxtofl+1,f
  4253     05E4  0DF8               	rlf	??___xxtofl+2,f
  4254     05E5  0DF9               	rlf	??___xxtofl+3,f
  4255     05E6                     u2510:
  4256     05E6  3EFF               	addlw	-1
  4257     05E7  1D03               	skipz
  4258     05E8  2DE1               	goto	u2515
  4259     05E9  0876               	movf	??___xxtofl,w
  4260     05EA  04A2               	iorwf	___xxtofl@arg,f
  4261     05EB  0877               	movf	??___xxtofl+1,w
  4262     05EC  04A3               	iorwf	___xxtofl@arg+1,f
  4263     05ED  0878               	movf	??___xxtofl+2,w
  4264     05EE  04A4               	iorwf	___xxtofl@arg+2,f
  4265     05EF  0879               	movf	??___xxtofl+3,w
  4266     05F0  04A5               	iorwf	___xxtofl@arg+3,f
  4267     05F1                     l2538:
  4268     05F1  0820               	movf	___xxtofl@sign,w
  4269     05F2  1903               	btfsc	3,2
  4270     05F3  2DF5               	goto	u2521
  4271     05F4  2DF6               	goto	u2520
  4272     05F5                     u2521:
  4273     05F5  2DFB               	goto	l2544
  4274     05F6                     u2520:
  4275     05F6                     l2540:
  4276     05F6  1FF5               	btfss	___xxtofl@val+3,7
  4277     05F7  2DF9               	goto	u2531
  4278     05F8  2DFA               	goto	u2530
  4279     05F9                     u2531:
  4280     05F9  2DFB               	goto	l2544
  4281     05FA                     u2530:
  4282     05FA                     l2542:
  4283     05FA  17A5               	bsf	___xxtofl@arg+3,7
  4284     05FB                     l2544:
  4285     05FB  0825               	movf	___xxtofl@arg+3,w
  4286     05FC  00F5               	movwf	?___xxtofl+3
  4287     05FD  0824               	movf	___xxtofl@arg+2,w
  4288     05FE  00F4               	movwf	?___xxtofl+2
  4289     05FF  0823               	movf	___xxtofl@arg+1,w
  4290     0600  00F3               	movwf	?___xxtofl+1
  4291     0601  0822               	movf	___xxtofl@arg,w
  4292     0602  00F2               	movwf	?___xxtofl
  4293     0603                     l891:
  4294     0603  0008               	return
  4295     0604                     __end_of___xxtofl:
  4296                           
  4297                           	psect	text19
  4298     0727                     __ptext19:	
  4299 ;; *************** function ___fltol *****************
  4300 ;; Defined at:
  4301 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  f1              4    2[COMMON] unsigned char 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  exp1            1    1[BANK0 ] unsigned char 
  4306 ;;  sign1           1    0[BANK0 ] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  4    2[COMMON] long 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0, btemp+1
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4316 ;;      Params:         4       0       0       0       0
  4317 ;;      Locals:         0       2       0       0       0
  4318 ;;      Temps:          4       0       0       0       0
  4319 ;;      Totals:         8       2       0       0       0
  4320 ;;Total ram usage:       10 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 1
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_read_temperatura
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330     0727                     ___fltol:	
  4331                           ;psect for function ___fltol
  4332                           
  4333     0727                     l3308:	
  4334                           ;incstack = 0
  4335                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  4336                           
  4337     0727  1003               	clrc
  4338     0728  0D74               	rlf	___fltol@f1+2,w
  4339     0729  0D75               	rlf	___fltol@f1+3,w
  4340     072A  1283               	bcf	3,5	;RP0=0, select bank0
  4341     072B  1303               	bcf	3,6	;RP1=0, select bank0
  4342     072C  00A1               	movwf	___fltol@exp1
  4343     072D  0821               	movf	___fltol@exp1,w
  4344     072E  1D03               	btfss	3,2
  4345     072F  2F31               	goto	u3211
  4346     0730  2F32               	goto	u3210
  4347     0731                     u3211:
  4348     0731  2F3B               	goto	l3314
  4349     0732                     u3210:
  4350     0732                     l3310:
  4351     0732  3000               	movlw	0
  4352     0733  00F5               	movwf	?___fltol+3
  4353     0734  3000               	movlw	0
  4354     0735  00F4               	movwf	?___fltol+2
  4355     0736  3000               	movlw	0
  4356     0737  00F3               	movwf	?___fltol+1
  4357     0738  3000               	movlw	0
  4358     0739  00F2               	movwf	?___fltol
  4359     073A  2F9E               	goto	l642
  4360     073B                     l3314:
  4361     073B  0872               	movf	___fltol@f1,w
  4362     073C  00F6               	movwf	??___fltol
  4363     073D  0873               	movf	___fltol@f1+1,w
  4364     073E  00F7               	movwf	??___fltol+1
  4365     073F  0874               	movf	___fltol@f1+2,w
  4366     0740  00F8               	movwf	??___fltol+2
  4367     0741  0875               	movf	___fltol@f1+3,w
  4368     0742  00F9               	movwf	??___fltol+3
  4369     0743  301F               	movlw	31
  4370     0744                     u3225:
  4371     0744  1003               	clrc
  4372     0745  0CF9               	rrf	??___fltol+3,f
  4373     0746  0CF8               	rrf	??___fltol+2,f
  4374     0747  0CF7               	rrf	??___fltol+1,f
  4375     0748  0CF6               	rrf	??___fltol,f
  4376     0749                     u3220:
  4377     0749  3EFF               	addlw	-1
  4378     074A  1D03               	skipz
  4379     074B  2F44               	goto	u3225
  4380     074C  0876               	movf	??___fltol,w
  4381     074D  00A0               	movwf	___fltol@sign1
  4382     074E                     l3316:
  4383     074E  17F4               	bsf	___fltol@f1+2,7
  4384     074F                     l3318:
  4385     074F  30FF               	movlw	255
  4386     0750  05F2               	andwf	___fltol@f1,f
  4387     0751  30FF               	movlw	255
  4388     0752  05F3               	andwf	___fltol@f1+1,f
  4389     0753  30FF               	movlw	255
  4390     0754  05F4               	andwf	___fltol@f1+2,f
  4391     0755  3000               	movlw	0
  4392     0756  05F5               	andwf	___fltol@f1+3,f
  4393     0757                     l3320:
  4394     0757  3096               	movlw	150
  4395     0758  02A1               	subwf	___fltol@exp1,f
  4396     0759                     l3322:
  4397     0759  1FA1               	btfss	___fltol@exp1,7
  4398     075A  2F5C               	goto	u3231
  4399     075B  2F5D               	goto	u3230
  4400     075C                     u3231:
  4401     075C  2F77               	goto	l3334
  4402     075D                     u3230:
  4403     075D                     l3324:
  4404     075D  0821               	movf	___fltol@exp1,w
  4405     075E  3A80               	xorlw	128
  4406     075F  3E97               	addlw	151
  4407     0760  1803               	skipnc
  4408     0761  2F63               	goto	u3241
  4409     0762  2F64               	goto	u3240
  4410     0763                     u3241:
  4411     0763  2F65               	goto	l3330
  4412     0764                     u3240:
  4413     0764  2F32               	goto	l3310
  4414     0765                     l3330:
  4415     0765  3001               	movlw	1
  4416     0766                     u3255:
  4417     0766  1003               	clrc
  4418     0767  0CF5               	rrf	___fltol@f1+3,f
  4419     0768  0CF4               	rrf	___fltol@f1+2,f
  4420     0769  0CF3               	rrf	___fltol@f1+1,f
  4421     076A  0CF2               	rrf	___fltol@f1,f
  4422     076B  3EFF               	addlw	-1
  4423     076C  1D03               	skipz
  4424     076D  2F66               	goto	u3255
  4425     076E                     l3332:
  4426     076E  3001               	movlw	1
  4427     076F  00FF               	movwf	btemp+1
  4428     0770  087F               	movf	btemp+1,w
  4429     0771  07A1               	addwf	___fltol@exp1,f
  4430     0772  1D03               	btfss	3,2
  4431     0773  2F75               	goto	u3261
  4432     0774  2F76               	goto	u3260
  4433     0775                     u3261:
  4434     0775  2F65               	goto	l3330
  4435     0776                     u3260:
  4436     0776  2F8E               	goto	l3342
  4437     0777                     l3334:
  4438     0777  3020               	movlw	32
  4439     0778  0221               	subwf	___fltol@exp1,w
  4440     0779  1C03               	skipc
  4441     077A  2F7C               	goto	u3271
  4442     077B  2F7D               	goto	u3270
  4443     077C                     u3271:
  4444     077C  2F89               	goto	l649
  4445     077D                     u3270:
  4446     077D  2F32               	goto	l3310
  4447     077E                     l3340:
  4448     077E  3001               	movlw	1
  4449     077F  00F6               	movwf	??___fltol
  4450     0780                     u3285:
  4451     0780  1003               	clrc
  4452     0781  0DF2               	rlf	___fltol@f1,f
  4453     0782  0DF3               	rlf	___fltol@f1+1,f
  4454     0783  0DF4               	rlf	___fltol@f1+2,f
  4455     0784  0DF5               	rlf	___fltol@f1+3,f
  4456     0785  0BF6               	decfsz	??___fltol,f
  4457     0786  2F80               	goto	u3285
  4458     0787  3001               	movlw	1
  4459     0788  02A1               	subwf	___fltol@exp1,f
  4460     0789                     l649:
  4461     0789  0821               	movf	___fltol@exp1,w
  4462     078A  1D03               	btfss	3,2
  4463     078B  2F8D               	goto	u3291
  4464     078C  2F8E               	goto	u3290
  4465     078D                     u3291:
  4466     078D  2F7E               	goto	l3340
  4467     078E                     u3290:
  4468     078E                     l3342:
  4469     078E  0820               	movf	___fltol@sign1,w
  4470     078F  1903               	btfsc	3,2
  4471     0790  2F92               	goto	u3301
  4472     0791  2F93               	goto	u3300
  4473     0792                     u3301:
  4474     0792  2F9E               	goto	l652
  4475     0793                     u3300:
  4476     0793                     l3344:
  4477     0793  09F2               	comf	___fltol@f1,f
  4478     0794  09F3               	comf	___fltol@f1+1,f
  4479     0795  09F4               	comf	___fltol@f1+2,f
  4480     0796  09F5               	comf	___fltol@f1+3,f
  4481     0797  0AF2               	incf	___fltol@f1,f
  4482     0798  1903               	skipnz
  4483     0799  0AF3               	incf	___fltol@f1+1,f
  4484     079A  1903               	skipnz
  4485     079B  0AF4               	incf	___fltol@f1+2,f
  4486     079C  1903               	skipnz
  4487     079D  0AF5               	incf	___fltol@f1+3,f
  4488     079E                     l652:
  4489     079E                     l642:
  4490     079E  0008               	return
  4491     079F                     __end_of___fltol:
  4492                           
  4493                           	psect	text20
  4494     0033                     __ptext20:	
  4495 ;; *************** function ___flmul *****************
  4496 ;; Defined at:
  4497 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  b               4    6[BANK0 ] long 
  4500 ;;  a               4   10[BANK0 ] long 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  prod            4   26[BANK0 ] struct .
  4503 ;;  grs             4   21[BANK0 ] unsigned long 
  4504 ;;  temp            2   30[BANK0 ] struct .
  4505 ;;  bexp            1   25[BANK0 ] unsigned char 
  4506 ;;  aexp            1   20[BANK0 ] unsigned char 
  4507 ;;  sign            1   19[BANK0 ] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  4    6[BANK0 ] unsigned char 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         0       8       0       0       0
  4518 ;;      Locals:         0      13       0       0       0
  4519 ;;      Temps:          0       5       0       0       0
  4520 ;;      Totals:         0      26       0       0       0
  4521 ;;Total ram usage:       26 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 2
  4524 ;; This function calls:
  4525 ;;		__Umul8_16
  4526 ;; This function is called by:
  4527 ;;		_read_temperatura
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531     0033                     ___flmul:	
  4532                           ;psect for function ___flmul
  4533                           
  4534     0033                     l3346:	
  4535                           ;incstack = 0
  4536                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4537                           
  4538     0033  1283               	bcf	3,5	;RP0=0, select bank0
  4539     0034  1303               	bcf	3,6	;RP1=0, select bank0
  4540     0035  0829               	movf	___flmul@b+3,w
  4541     0036  3980               	andlw	128
  4542     0037  00B3               	movwf	___flmul@sign
  4543     0038                     l3348:
  4544     0038  0829               	movf	___flmul@b+3,w
  4545     0039  00AE               	movwf	??___flmul
  4546     003A  072E               	addwf	??___flmul,w
  4547     003B  00B9               	movwf	___flmul@bexp
  4548     003C                     l3350:
  4549     003C  1FA8               	btfss	___flmul@b+2,7
  4550     003D  283F               	goto	u3311
  4551     003E  2840               	goto	u3310
  4552     003F                     u3311:
  4553     003F  2841               	goto	l3354
  4554     0040                     u3310:
  4555     0040                     l3352:
  4556     0040  1439               	bsf	___flmul@bexp,0
  4557     0041                     l3354:
  4558     0041  0839               	movf	___flmul@bexp,w
  4559     0042  1903               	btfsc	3,2
  4560     0043  2845               	goto	u3321
  4561     0044  2846               	goto	u3320
  4562     0045                     u3321:
  4563     0045  2855               	goto	l3362
  4564     0046                     u3320:
  4565     0046                     l3356:
  4566     0046  0A39               	incf	___flmul@bexp,w
  4567     0047  1D03               	btfss	3,2
  4568     0048  284A               	goto	u3331
  4569     0049  284B               	goto	u3330
  4570     004A                     u3331:
  4571     004A  2853               	goto	l3360
  4572     004B                     u3330:
  4573     004B                     l3358:
  4574     004B  3000               	movlw	0
  4575     004C  00A9               	movwf	___flmul@b+3
  4576     004D  3000               	movlw	0
  4577     004E  00A8               	movwf	___flmul@b+2
  4578     004F  3000               	movlw	0
  4579     0050  00A7               	movwf	___flmul@b+1
  4580     0051  3000               	movlw	0
  4581     0052  00A6               	movwf	___flmul@b
  4582     0053                     l3360:
  4583     0053  17A8               	bsf	___flmul@b+2,7
  4584     0054  285D               	goto	l3364
  4585     0055                     l3362:
  4586     0055  3000               	movlw	0
  4587     0056  00A9               	movwf	___flmul@b+3
  4588     0057  3000               	movlw	0
  4589     0058  00A8               	movwf	___flmul@b+2
  4590     0059  3000               	movlw	0
  4591     005A  00A7               	movwf	___flmul@b+1
  4592     005B  3000               	movlw	0
  4593     005C  00A6               	movwf	___flmul@b
  4594     005D                     l3364:
  4595     005D  082D               	movf	___flmul@a+3,w
  4596     005E  3980               	andlw	128
  4597     005F  00FF               	movwf	btemp+1
  4598     0060  087F               	movf	btemp+1,w
  4599     0061  06B3               	xorwf	___flmul@sign,f
  4600     0062                     l3366:
  4601     0062  082D               	movf	___flmul@a+3,w
  4602     0063  00AE               	movwf	??___flmul
  4603     0064  072E               	addwf	??___flmul,w
  4604     0065  00B4               	movwf	___flmul@aexp
  4605     0066                     l3368:
  4606     0066  1FAC               	btfss	___flmul@a+2,7
  4607     0067  2869               	goto	u3341
  4608     0068  286A               	goto	u3340
  4609     0069                     u3341:
  4610     0069  286B               	goto	l3372
  4611     006A                     u3340:
  4612     006A                     l3370:
  4613     006A  1434               	bsf	___flmul@aexp,0
  4614     006B                     l3372:
  4615     006B  0834               	movf	___flmul@aexp,w
  4616     006C  1903               	btfsc	3,2
  4617     006D  286F               	goto	u3351
  4618     006E  2870               	goto	u3350
  4619     006F                     u3351:
  4620     006F  287F               	goto	l3380
  4621     0070                     u3350:
  4622     0070                     l3374:
  4623     0070  0A34               	incf	___flmul@aexp,w
  4624     0071  1D03               	btfss	3,2
  4625     0072  2874               	goto	u3361
  4626     0073  2875               	goto	u3360
  4627     0074                     u3361:
  4628     0074  287D               	goto	l3378
  4629     0075                     u3360:
  4630     0075                     l3376:
  4631     0075  3000               	movlw	0
  4632     0076  00AD               	movwf	___flmul@a+3
  4633     0077  3000               	movlw	0
  4634     0078  00AC               	movwf	___flmul@a+2
  4635     0079  3000               	movlw	0
  4636     007A  00AB               	movwf	___flmul@a+1
  4637     007B  3000               	movlw	0
  4638     007C  00AA               	movwf	___flmul@a
  4639     007D                     l3378:
  4640     007D  17AC               	bsf	___flmul@a+2,7
  4641     007E  2887               	goto	l3382
  4642     007F                     l3380:
  4643     007F  3000               	movlw	0
  4644     0080  00AD               	movwf	___flmul@a+3
  4645     0081  3000               	movlw	0
  4646     0082  00AC               	movwf	___flmul@a+2
  4647     0083  3000               	movlw	0
  4648     0084  00AB               	movwf	___flmul@a+1
  4649     0085  3000               	movlw	0
  4650     0086  00AA               	movwf	___flmul@a
  4651     0087                     l3382:
  4652     0087  0834               	movf	___flmul@aexp,w
  4653     0088  1903               	btfsc	3,2
  4654     0089  288B               	goto	u3371
  4655     008A  288C               	goto	u3370
  4656     008B                     u3371:
  4657     008B  2891               	goto	l3386
  4658     008C                     u3370:
  4659     008C                     l3384:
  4660     008C  0839               	movf	___flmul@bexp,w
  4661     008D  1D03               	btfss	3,2
  4662     008E  2890               	goto	u3381
  4663     008F  2891               	goto	u3380
  4664     0090                     u3381:
  4665     0090  289A               	goto	l3390
  4666     0091                     u3380:
  4667     0091                     l3386:
  4668     0091  3000               	movlw	0
  4669     0092  00A9               	movwf	?___flmul+3
  4670     0093  3000               	movlw	0
  4671     0094  00A8               	movwf	?___flmul+2
  4672     0095  3000               	movlw	0
  4673     0096  00A7               	movwf	?___flmul+1
  4674     0097  3000               	movlw	0
  4675     0098  00A6               	movwf	?___flmul
  4676     0099  2B77               	goto	l845
  4677     009A                     l3390:
  4678     009A  0826               	movf	___flmul@b,w
  4679     009B  00F2               	movwf	__Umul8_16@multiplicand
  4680     009C  082C               	movf	___flmul@a+2,w
  4681     009D  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  4682     00A2  0873               	movf	?__Umul8_16+1,w
  4683     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  4684     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  4685     00A5  00BF               	movwf	___flmul@temp+1
  4686     00A6  0872               	movf	?__Umul8_16,w
  4687     00A7  00BE               	movwf	___flmul@temp
  4688     00A8                     l3392:
  4689     00A8  083E               	movf	___flmul@temp,w
  4690     00A9  00AE               	movwf	??___flmul
  4691     00AA  01AF               	clrf	??___flmul+1
  4692     00AB  01B0               	clrf	??___flmul+2
  4693     00AC  01B1               	clrf	??___flmul+3
  4694     00AD  0831               	movf	??___flmul+3,w
  4695     00AE  00B8               	movwf	___flmul@grs+3
  4696     00AF  0830               	movf	??___flmul+2,w
  4697     00B0  00B7               	movwf	___flmul@grs+2
  4698     00B1  082F               	movf	??___flmul+1,w
  4699     00B2  00B6               	movwf	___flmul@grs+1
  4700     00B3  082E               	movf	??___flmul,w
  4701     00B4  00B5               	movwf	___flmul@grs
  4702     00B5                     l3394:
  4703     00B5  083F               	movf	___flmul@temp+1,w
  4704     00B6  00AE               	movwf	??___flmul
  4705     00B7  01AF               	clrf	??___flmul+1
  4706     00B8  01B0               	clrf	??___flmul+2
  4707     00B9  01B1               	clrf	??___flmul+3
  4708     00BA  0831               	movf	??___flmul+3,w
  4709     00BB  00BD               	movwf	___flmul@prod+3
  4710     00BC  0830               	movf	??___flmul+2,w
  4711     00BD  00BC               	movwf	___flmul@prod+2
  4712     00BE  082F               	movf	??___flmul+1,w
  4713     00BF  00BB               	movwf	___flmul@prod+1
  4714     00C0  082E               	movf	??___flmul,w
  4715     00C1  00BA               	movwf	___flmul@prod
  4716     00C2  0827               	movf	___flmul@b+1,w
  4717     00C3  00F2               	movwf	__Umul8_16@multiplicand
  4718     00C4  082B               	movf	___flmul@a+1,w
  4719     00C5  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  4720     00CA  0873               	movf	?__Umul8_16+1,w
  4721     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4722     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  4723     00CD  00BF               	movwf	___flmul@temp+1
  4724     00CE  0872               	movf	?__Umul8_16,w
  4725     00CF  00BE               	movwf	___flmul@temp
  4726     00D0                     l3396:
  4727     00D0  083E               	movf	___flmul@temp,w
  4728     00D1  00AE               	movwf	??___flmul
  4729     00D2  01AF               	clrf	??___flmul+1
  4730     00D3  01B0               	clrf	??___flmul+2
  4731     00D4  01B1               	clrf	??___flmul+3
  4732     00D5  082E               	movf	??___flmul,w
  4733     00D6  07B5               	addwf	___flmul@grs,f
  4734     00D7  082F               	movf	??___flmul+1,w
  4735     00D8  1103               	clrz
  4736     00D9  1803               	skipnc
  4737     00DA  3E01               	addlw	1
  4738     00DB  1903               	skipnz
  4739     00DC  28DE               	goto	u3391
  4740     00DD  07B6               	addwf	___flmul@grs+1,f
  4741     00DE                     u3391:
  4742     00DE  0830               	movf	??___flmul+2,w
  4743     00DF  1103               	clrz
  4744     00E0  1803               	skipnc
  4745     00E1  3E01               	addlw	1
  4746     00E2  1903               	skipnz
  4747     00E3  28E5               	goto	u3392
  4748     00E4  07B7               	addwf	___flmul@grs+2,f
  4749     00E5                     u3392:
  4750     00E5  0831               	movf	??___flmul+3,w
  4751     00E6  1103               	clrz
  4752     00E7  1803               	skipnc
  4753     00E8  3E01               	addlw	1
  4754     00E9  1903               	skipnz
  4755     00EA  28EC               	goto	u3393
  4756     00EB  07B8               	addwf	___flmul@grs+3,f
  4757     00EC                     u3393:
  4758     00EC                     l3398:
  4759     00EC  083F               	movf	___flmul@temp+1,w
  4760     00ED  00AE               	movwf	??___flmul
  4761     00EE  01AF               	clrf	??___flmul+1
  4762     00EF  01B0               	clrf	??___flmul+2
  4763     00F0  01B1               	clrf	??___flmul+3
  4764     00F1  082E               	movf	??___flmul,w
  4765     00F2  07BA               	addwf	___flmul@prod,f
  4766     00F3  082F               	movf	??___flmul+1,w
  4767     00F4  1103               	clrz
  4768     00F5  1803               	skipnc
  4769     00F6  3E01               	addlw	1
  4770     00F7  1903               	skipnz
  4771     00F8  28FA               	goto	u3401
  4772     00F9  07BB               	addwf	___flmul@prod+1,f
  4773     00FA                     u3401:
  4774     00FA  0830               	movf	??___flmul+2,w
  4775     00FB  1103               	clrz
  4776     00FC  1803               	skipnc
  4777     00FD  3E01               	addlw	1
  4778     00FE  1903               	skipnz
  4779     00FF  2901               	goto	u3402
  4780     0100  07BC               	addwf	___flmul@prod+2,f
  4781     0101                     u3402:
  4782     0101  0831               	movf	??___flmul+3,w
  4783     0102  1103               	clrz
  4784     0103  1803               	skipnc
  4785     0104  3E01               	addlw	1
  4786     0105  1903               	skipnz
  4787     0106  2908               	goto	u3403
  4788     0107  07BD               	addwf	___flmul@prod+3,f
  4789     0108                     u3403:
  4790     0108  0828               	movf	___flmul@b+2,w
  4791     0109  00F2               	movwf	__Umul8_16@multiplicand
  4792     010A  082A               	movf	___flmul@a,w
  4793     010B  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  4794     0110  0873               	movf	?__Umul8_16+1,w
  4795     0111  1283               	bcf	3,5	;RP0=0, select bank0
  4796     0112  1303               	bcf	3,6	;RP1=0, select bank0
  4797     0113  00BF               	movwf	___flmul@temp+1
  4798     0114  0872               	movf	?__Umul8_16,w
  4799     0115  00BE               	movwf	___flmul@temp
  4800     0116                     l3400:
  4801     0116  083E               	movf	___flmul@temp,w
  4802     0117  00AE               	movwf	??___flmul
  4803     0118  01AF               	clrf	??___flmul+1
  4804     0119  01B0               	clrf	??___flmul+2
  4805     011A  01B1               	clrf	??___flmul+3
  4806     011B  082E               	movf	??___flmul,w
  4807     011C  07B5               	addwf	___flmul@grs,f
  4808     011D  082F               	movf	??___flmul+1,w
  4809     011E  1103               	clrz
  4810     011F  1803               	skipnc
  4811     0120  3E01               	addlw	1
  4812     0121  1903               	skipnz
  4813     0122  2924               	goto	u3411
  4814     0123  07B6               	addwf	___flmul@grs+1,f
  4815     0124                     u3411:
  4816     0124  0830               	movf	??___flmul+2,w
  4817     0125  1103               	clrz
  4818     0126  1803               	skipnc
  4819     0127  3E01               	addlw	1
  4820     0128  1903               	skipnz
  4821     0129  292B               	goto	u3412
  4822     012A  07B7               	addwf	___flmul@grs+2,f
  4823     012B                     u3412:
  4824     012B  0831               	movf	??___flmul+3,w
  4825     012C  1103               	clrz
  4826     012D  1803               	skipnc
  4827     012E  3E01               	addlw	1
  4828     012F  1903               	skipnz
  4829     0130  2932               	goto	u3413
  4830     0131  07B8               	addwf	___flmul@grs+3,f
  4831     0132                     u3413:
  4832     0132                     l3402:
  4833     0132  083F               	movf	___flmul@temp+1,w
  4834     0133  00AE               	movwf	??___flmul
  4835     0134  01AF               	clrf	??___flmul+1
  4836     0135  01B0               	clrf	??___flmul+2
  4837     0136  01B1               	clrf	??___flmul+3
  4838     0137  082E               	movf	??___flmul,w
  4839     0138  07BA               	addwf	___flmul@prod,f
  4840     0139  082F               	movf	??___flmul+1,w
  4841     013A  1103               	clrz
  4842     013B  1803               	skipnc
  4843     013C  3E01               	addlw	1
  4844     013D  1903               	skipnz
  4845     013E  2940               	goto	u3421
  4846     013F  07BB               	addwf	___flmul@prod+1,f
  4847     0140                     u3421:
  4848     0140  0830               	movf	??___flmul+2,w
  4849     0141  1103               	clrz
  4850     0142  1803               	skipnc
  4851     0143  3E01               	addlw	1
  4852     0144  1903               	skipnz
  4853     0145  2947               	goto	u3422
  4854     0146  07BC               	addwf	___flmul@prod+2,f
  4855     0147                     u3422:
  4856     0147  0831               	movf	??___flmul+3,w
  4857     0148  1103               	clrz
  4858     0149  1803               	skipnc
  4859     014A  3E01               	addlw	1
  4860     014B  1903               	skipnz
  4861     014C  294E               	goto	u3423
  4862     014D  07BD               	addwf	___flmul@prod+3,f
  4863     014E                     u3423:
  4864     014E                     l3404:
  4865     014E  3008               	movlw	8
  4866     014F  00AE               	movwf	??___flmul
  4867     0150                     u3435:
  4868     0150  1003               	clrc
  4869     0151  0DB5               	rlf	___flmul@grs,f
  4870     0152  0DB6               	rlf	___flmul@grs+1,f
  4871     0153  0DB7               	rlf	___flmul@grs+2,f
  4872     0154  0DB8               	rlf	___flmul@grs+3,f
  4873     0155  0BAE               	decfsz	??___flmul,f
  4874     0156  2950               	goto	u3435
  4875     0157                     l3406:
  4876     0157  0827               	movf	___flmul@b+1,w
  4877     0158  00F2               	movwf	__Umul8_16@multiplicand
  4878     0159  082A               	movf	___flmul@a,w
  4879     015A  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  4880     015F  0873               	movf	?__Umul8_16+1,w
  4881     0160  1283               	bcf	3,5	;RP0=0, select bank0
  4882     0161  1303               	bcf	3,6	;RP1=0, select bank0
  4883     0162  00BF               	movwf	___flmul@temp+1
  4884     0163  0872               	movf	?__Umul8_16,w
  4885     0164  00BE               	movwf	___flmul@temp
  4886     0165                     l3408:
  4887     0165  083E               	movf	___flmul@temp,w
  4888     0166  00AE               	movwf	??___flmul
  4889     0167  083F               	movf	___flmul@temp+1,w
  4890     0168  00AF               	movwf	??___flmul+1
  4891     0169  01B0               	clrf	??___flmul+2
  4892     016A  01B1               	clrf	??___flmul+3
  4893     016B  082E               	movf	??___flmul,w
  4894     016C  07B5               	addwf	___flmul@grs,f
  4895     016D  082F               	movf	??___flmul+1,w
  4896     016E  1103               	clrz
  4897     016F  1803               	skipnc
  4898     0170  3E01               	addlw	1
  4899     0171  1903               	skipnz
  4900     0172  2974               	goto	u3441
  4901     0173  07B6               	addwf	___flmul@grs+1,f
  4902     0174                     u3441:
  4903     0174  0830               	movf	??___flmul+2,w
  4904     0175  1103               	clrz
  4905     0176  1803               	skipnc
  4906     0177  3E01               	addlw	1
  4907     0178  1903               	skipnz
  4908     0179  297B               	goto	u3442
  4909     017A  07B7               	addwf	___flmul@grs+2,f
  4910     017B                     u3442:
  4911     017B  0831               	movf	??___flmul+3,w
  4912     017C  1103               	clrz
  4913     017D  1803               	skipnc
  4914     017E  3E01               	addlw	1
  4915     017F  1903               	skipnz
  4916     0180  2982               	goto	u3443
  4917     0181  07B8               	addwf	___flmul@grs+3,f
  4918     0182                     u3443:
  4919     0182                     l3410:
  4920     0182  0826               	movf	___flmul@b,w
  4921     0183  00F2               	movwf	__Umul8_16@multiplicand
  4922     0184  082B               	movf	___flmul@a+1,w
  4923     0185  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  4924     018A  0873               	movf	?__Umul8_16+1,w
  4925     018B  1283               	bcf	3,5	;RP0=0, select bank0
  4926     018C  1303               	bcf	3,6	;RP1=0, select bank0
  4927     018D  00BF               	movwf	___flmul@temp+1
  4928     018E  0872               	movf	?__Umul8_16,w
  4929     018F  00BE               	movwf	___flmul@temp
  4930     0190                     l3412:
  4931     0190  083E               	movf	___flmul@temp,w
  4932     0191  00AE               	movwf	??___flmul
  4933     0192  083F               	movf	___flmul@temp+1,w
  4934     0193  00AF               	movwf	??___flmul+1
  4935     0194  01B0               	clrf	??___flmul+2
  4936     0195  01B1               	clrf	??___flmul+3
  4937     0196  082E               	movf	??___flmul,w
  4938     0197  07B5               	addwf	___flmul@grs,f
  4939     0198  082F               	movf	??___flmul+1,w
  4940     0199  1103               	clrz
  4941     019A  1803               	skipnc
  4942     019B  3E01               	addlw	1
  4943     019C  1903               	skipnz
  4944     019D  299F               	goto	u3451
  4945     019E  07B6               	addwf	___flmul@grs+1,f
  4946     019F                     u3451:
  4947     019F  0830               	movf	??___flmul+2,w
  4948     01A0  1103               	clrz
  4949     01A1  1803               	skipnc
  4950     01A2  3E01               	addlw	1
  4951     01A3  1903               	skipnz
  4952     01A4  29A6               	goto	u3452
  4953     01A5  07B7               	addwf	___flmul@grs+2,f
  4954     01A6                     u3452:
  4955     01A6  0831               	movf	??___flmul+3,w
  4956     01A7  1103               	clrz
  4957     01A8  1803               	skipnc
  4958     01A9  3E01               	addlw	1
  4959     01AA  1903               	skipnz
  4960     01AB  29AD               	goto	u3453
  4961     01AC  07B8               	addwf	___flmul@grs+3,f
  4962     01AD                     u3453:
  4963     01AD                     l3414:
  4964     01AD  3008               	movlw	8
  4965     01AE  00AE               	movwf	??___flmul
  4966     01AF                     u3465:
  4967     01AF  1003               	clrc
  4968     01B0  0DB5               	rlf	___flmul@grs,f
  4969     01B1  0DB6               	rlf	___flmul@grs+1,f
  4970     01B2  0DB7               	rlf	___flmul@grs+2,f
  4971     01B3  0DB8               	rlf	___flmul@grs+3,f
  4972     01B4  0BAE               	decfsz	??___flmul,f
  4973     01B5  29AF               	goto	u3465
  4974     01B6  0826               	movf	___flmul@b,w
  4975     01B7  00F2               	movwf	__Umul8_16@multiplicand
  4976     01B8  082A               	movf	___flmul@a,w
  4977     01B9  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  4978     01BE  0873               	movf	?__Umul8_16+1,w
  4979     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  4980     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  4981     01C1  00BF               	movwf	___flmul@temp+1
  4982     01C2  0872               	movf	?__Umul8_16,w
  4983     01C3  00BE               	movwf	___flmul@temp
  4984     01C4                     l3416:
  4985     01C4  083E               	movf	___flmul@temp,w
  4986     01C5  00AE               	movwf	??___flmul
  4987     01C6  083F               	movf	___flmul@temp+1,w
  4988     01C7  00AF               	movwf	??___flmul+1
  4989     01C8  01B0               	clrf	??___flmul+2
  4990     01C9  01B1               	clrf	??___flmul+3
  4991     01CA  082E               	movf	??___flmul,w
  4992     01CB  07B5               	addwf	___flmul@grs,f
  4993     01CC  082F               	movf	??___flmul+1,w
  4994     01CD  1103               	clrz
  4995     01CE  1803               	skipnc
  4996     01CF  3E01               	addlw	1
  4997     01D0  1903               	skipnz
  4998     01D1  29D3               	goto	u3471
  4999     01D2  07B6               	addwf	___flmul@grs+1,f
  5000     01D3                     u3471:
  5001     01D3  0830               	movf	??___flmul+2,w
  5002     01D4  1103               	clrz
  5003     01D5  1803               	skipnc
  5004     01D6  3E01               	addlw	1
  5005     01D7  1903               	skipnz
  5006     01D8  29DA               	goto	u3472
  5007     01D9  07B7               	addwf	___flmul@grs+2,f
  5008     01DA                     u3472:
  5009     01DA  0831               	movf	??___flmul+3,w
  5010     01DB  1103               	clrz
  5011     01DC  1803               	skipnc
  5012     01DD  3E01               	addlw	1
  5013     01DE  1903               	skipnz
  5014     01DF  29E1               	goto	u3473
  5015     01E0  07B8               	addwf	___flmul@grs+3,f
  5016     01E1                     u3473:
  5017     01E1                     l3418:
  5018     01E1  0827               	movf	___flmul@b+1,w
  5019     01E2  00F2               	movwf	__Umul8_16@multiplicand
  5020     01E3  082C               	movf	___flmul@a+2,w
  5021     01E4  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  5022     01E9  0873               	movf	?__Umul8_16+1,w
  5023     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  5024     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  5025     01EC  00BF               	movwf	___flmul@temp+1
  5026     01ED  0872               	movf	?__Umul8_16,w
  5027     01EE  00BE               	movwf	___flmul@temp
  5028     01EF  083E               	movf	___flmul@temp,w
  5029     01F0  00AE               	movwf	??___flmul
  5030     01F1  083F               	movf	___flmul@temp+1,w
  5031     01F2  00AF               	movwf	??___flmul+1
  5032     01F3  01B0               	clrf	??___flmul+2
  5033     01F4  01B1               	clrf	??___flmul+3
  5034     01F5  082E               	movf	??___flmul,w
  5035     01F6  07BA               	addwf	___flmul@prod,f
  5036     01F7  082F               	movf	??___flmul+1,w
  5037     01F8  1103               	clrz
  5038     01F9  1803               	skipnc
  5039     01FA  3E01               	addlw	1
  5040     01FB  1903               	skipnz
  5041     01FC  29FE               	goto	u3481
  5042     01FD  07BB               	addwf	___flmul@prod+1,f
  5043     01FE                     u3481:
  5044     01FE  0830               	movf	??___flmul+2,w
  5045     01FF  1103               	clrz
  5046     0200  1803               	skipnc
  5047     0201  3E01               	addlw	1
  5048     0202  1903               	skipnz
  5049     0203  2A05               	goto	u3482
  5050     0204  07BC               	addwf	___flmul@prod+2,f
  5051     0205                     u3482:
  5052     0205  0831               	movf	??___flmul+3,w
  5053     0206  1103               	clrz
  5054     0207  1803               	skipnc
  5055     0208  3E01               	addlw	1
  5056     0209  1903               	skipnz
  5057     020A  2A0C               	goto	u3483
  5058     020B  07BD               	addwf	___flmul@prod+3,f
  5059     020C                     u3483:
  5060     020C                     l3420:
  5061     020C  0828               	movf	___flmul@b+2,w
  5062     020D  00F2               	movwf	__Umul8_16@multiplicand
  5063     020E  082B               	movf	___flmul@a+1,w
  5064     020F  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  5065     0214  0873               	movf	?__Umul8_16+1,w
  5066     0215  1283               	bcf	3,5	;RP0=0, select bank0
  5067     0216  1303               	bcf	3,6	;RP1=0, select bank0
  5068     0217  00BF               	movwf	___flmul@temp+1
  5069     0218  0872               	movf	?__Umul8_16,w
  5070     0219  00BE               	movwf	___flmul@temp
  5071     021A                     l3422:
  5072     021A  083E               	movf	___flmul@temp,w
  5073     021B  00AE               	movwf	??___flmul
  5074     021C  083F               	movf	___flmul@temp+1,w
  5075     021D  00AF               	movwf	??___flmul+1
  5076     021E  01B0               	clrf	??___flmul+2
  5077     021F  01B1               	clrf	??___flmul+3
  5078     0220  082E               	movf	??___flmul,w
  5079     0221  07BA               	addwf	___flmul@prod,f
  5080     0222  082F               	movf	??___flmul+1,w
  5081     0223  1103               	clrz
  5082     0224  1803               	skipnc
  5083     0225  3E01               	addlw	1
  5084     0226  1903               	skipnz
  5085     0227  2A29               	goto	u3491
  5086     0228  07BB               	addwf	___flmul@prod+1,f
  5087     0229                     u3491:
  5088     0229  0830               	movf	??___flmul+2,w
  5089     022A  1103               	clrz
  5090     022B  1803               	skipnc
  5091     022C  3E01               	addlw	1
  5092     022D  1903               	skipnz
  5093     022E  2A30               	goto	u3492
  5094     022F  07BC               	addwf	___flmul@prod+2,f
  5095     0230                     u3492:
  5096     0230  0831               	movf	??___flmul+3,w
  5097     0231  1103               	clrz
  5098     0232  1803               	skipnc
  5099     0233  3E01               	addlw	1
  5100     0234  1903               	skipnz
  5101     0235  2A37               	goto	u3493
  5102     0236  07BD               	addwf	___flmul@prod+3,f
  5103     0237                     u3493:
  5104     0237  0828               	movf	___flmul@b+2,w
  5105     0238  00F2               	movwf	__Umul8_16@multiplicand
  5106     0239  082C               	movf	___flmul@a+2,w
  5107     023A  120A  158A  23B7  120A  118A  	fcall	__Umul8_16
  5108     023F  0873               	movf	?__Umul8_16+1,w
  5109     0240  1283               	bcf	3,5	;RP0=0, select bank0
  5110     0241  1303               	bcf	3,6	;RP1=0, select bank0
  5111     0242  00BF               	movwf	___flmul@temp+1
  5112     0243  0872               	movf	?__Umul8_16,w
  5113     0244  00BE               	movwf	___flmul@temp
  5114     0245                     l3424:
  5115     0245  083E               	movf	___flmul@temp,w
  5116     0246  00AE               	movwf	??___flmul
  5117     0247  083F               	movf	___flmul@temp+1,w
  5118     0248  00AF               	movwf	??___flmul+1
  5119     0249  01B0               	clrf	??___flmul+2
  5120     024A  01B1               	clrf	??___flmul+3
  5121     024B  3008               	movlw	8
  5122     024C                     u3505:
  5123     024C  1003               	clrc
  5124     024D  0DAE               	rlf	??___flmul,f
  5125     024E  0DAF               	rlf	??___flmul+1,f
  5126     024F  0DB0               	rlf	??___flmul+2,f
  5127     0250  0DB1               	rlf	??___flmul+3,f
  5128     0251                     u3500:
  5129     0251  3EFF               	addlw	-1
  5130     0252  1D03               	skipz
  5131     0253  2A4C               	goto	u3505
  5132     0254  082E               	movf	??___flmul,w
  5133     0255  07BA               	addwf	___flmul@prod,f
  5134     0256  082F               	movf	??___flmul+1,w
  5135     0257  1103               	clrz
  5136     0258  1803               	skipnc
  5137     0259  3E01               	addlw	1
  5138     025A  1903               	skipnz
  5139     025B  2A5D               	goto	u3511
  5140     025C  07BB               	addwf	___flmul@prod+1,f
  5141     025D                     u3511:
  5142     025D  0830               	movf	??___flmul+2,w
  5143     025E  1103               	clrz
  5144     025F  1803               	skipnc
  5145     0260  3E01               	addlw	1
  5146     0261  1903               	skipnz
  5147     0262  2A64               	goto	u3512
  5148     0263  07BC               	addwf	___flmul@prod+2,f
  5149     0264                     u3512:
  5150     0264  0831               	movf	??___flmul+3,w
  5151     0265  1103               	clrz
  5152     0266  1803               	skipnc
  5153     0267  3E01               	addlw	1
  5154     0268  1903               	skipnz
  5155     0269  2A6B               	goto	u3513
  5156     026A  07BD               	addwf	___flmul@prod+3,f
  5157     026B                     u3513:
  5158     026B                     l3426:
  5159     026B  0835               	movf	___flmul@grs,w
  5160     026C  00AE               	movwf	??___flmul
  5161     026D  0836               	movf	___flmul@grs+1,w
  5162     026E  00AF               	movwf	??___flmul+1
  5163     026F  0837               	movf	___flmul@grs+2,w
  5164     0270  00B0               	movwf	??___flmul+2
  5165     0271  0838               	movf	___flmul@grs+3,w
  5166     0272  00B1               	movwf	??___flmul+3
  5167     0273  3018               	movlw	24
  5168     0274                     u3525:
  5169     0274  1003               	clrc
  5170     0275  0CB1               	rrf	??___flmul+3,f
  5171     0276  0CB0               	rrf	??___flmul+2,f
  5172     0277  0CAF               	rrf	??___flmul+1,f
  5173     0278  0CAE               	rrf	??___flmul,f
  5174     0279                     u3520:
  5175     0279  3EFF               	addlw	-1
  5176     027A  1D03               	skipz
  5177     027B  2A74               	goto	u3525
  5178     027C  082E               	movf	??___flmul,w
  5179     027D  07BA               	addwf	___flmul@prod,f
  5180     027E  082F               	movf	??___flmul+1,w
  5181     027F  1103               	clrz
  5182     0280  1803               	skipnc
  5183     0281  3E01               	addlw	1
  5184     0282  1903               	skipnz
  5185     0283  2A85               	goto	u3531
  5186     0284  07BB               	addwf	___flmul@prod+1,f
  5187     0285                     u3531:
  5188     0285  0830               	movf	??___flmul+2,w
  5189     0286  1103               	clrz
  5190     0287  1803               	skipnc
  5191     0288  3E01               	addlw	1
  5192     0289  1903               	skipnz
  5193     028A  2A8C               	goto	u3532
  5194     028B  07BC               	addwf	___flmul@prod+2,f
  5195     028C                     u3532:
  5196     028C  0831               	movf	??___flmul+3,w
  5197     028D  1103               	clrz
  5198     028E  1803               	skipnc
  5199     028F  3E01               	addlw	1
  5200     0290  1903               	skipnz
  5201     0291  2A93               	goto	u3533
  5202     0292  07BD               	addwf	___flmul@prod+3,f
  5203     0293                     u3533:
  5204     0293                     l3428:
  5205     0293  3008               	movlw	8
  5206     0294  00AE               	movwf	??___flmul
  5207     0295                     u3545:
  5208     0295  1003               	clrc
  5209     0296  0DB5               	rlf	___flmul@grs,f
  5210     0297  0DB6               	rlf	___flmul@grs+1,f
  5211     0298  0DB7               	rlf	___flmul@grs+2,f
  5212     0299  0DB8               	rlf	___flmul@grs+3,f
  5213     029A  0BAE               	decfsz	??___flmul,f
  5214     029B  2A95               	goto	u3545
  5215     029C                     l3430:
  5216     029C  0839               	movf	___flmul@bexp,w
  5217     029D  0734               	addwf	___flmul@aexp,w
  5218     029E  00AE               	movwf	??___flmul
  5219     029F  01AF               	clrf	??___flmul+1
  5220     02A0  0DAF               	rlf	??___flmul+1,f
  5221     02A1  082E               	movf	??___flmul,w
  5222     02A2  3E82               	addlw	130
  5223     02A3  00BE               	movwf	___flmul@temp
  5224     02A4  082F               	movf	??___flmul+1,w
  5225     02A5  1803               	skipnc
  5226     02A6  3E01               	addlw	1
  5227     02A7  3EFF               	addlw	255
  5228     02A8  00BF               	movwf	___flmul@temp+1
  5229     02A9  2AC7               	goto	l3442
  5230     02AA                     l3432:
  5231     02AA  3001               	movlw	1
  5232     02AB  00AE               	movwf	??___flmul
  5233     02AC                     u3555:
  5234     02AC  1003               	clrc
  5235     02AD  0DBA               	rlf	___flmul@prod,f
  5236     02AE  0DBB               	rlf	___flmul@prod+1,f
  5237     02AF  0DBC               	rlf	___flmul@prod+2,f
  5238     02B0  0DBD               	rlf	___flmul@prod+3,f
  5239     02B1  0BAE               	decfsz	??___flmul,f
  5240     02B2  2AAC               	goto	u3555
  5241     02B3                     l3434:
  5242     02B3  1FB8               	btfss	___flmul@grs+3,7
  5243     02B4  2AB6               	goto	u3561
  5244     02B5  2AB7               	goto	u3560
  5245     02B6                     u3561:
  5246     02B6  2AB8               	goto	l3438
  5247     02B7                     u3560:
  5248     02B7                     l3436:
  5249     02B7  143A               	bsf	___flmul@prod,0
  5250     02B8                     l3438:
  5251     02B8  3001               	movlw	1
  5252     02B9  00AE               	movwf	??___flmul
  5253     02BA                     u3575:
  5254     02BA  1003               	clrc
  5255     02BB  0DB5               	rlf	___flmul@grs,f
  5256     02BC  0DB6               	rlf	___flmul@grs+1,f
  5257     02BD  0DB7               	rlf	___flmul@grs+2,f
  5258     02BE  0DB8               	rlf	___flmul@grs+3,f
  5259     02BF  0BAE               	decfsz	??___flmul,f
  5260     02C0  2ABA               	goto	u3575
  5261     02C1                     l3440:
  5262     02C1  30FF               	movlw	255
  5263     02C2  07BE               	addwf	___flmul@temp,f
  5264     02C3  1803               	skipnc
  5265     02C4  0ABF               	incf	___flmul@temp+1,f
  5266     02C5  30FF               	movlw	255
  5267     02C6  07BF               	addwf	___flmul@temp+1,f
  5268     02C7                     l3442:
  5269     02C7  1FBC               	btfss	___flmul@prod+2,7
  5270     02C8  2ACA               	goto	u3581
  5271     02C9  2ACB               	goto	u3580
  5272     02CA                     u3581:
  5273     02CA  2AAA               	goto	l3432
  5274     02CB                     u3580:
  5275     02CB                     l3444:
  5276     02CB  01B4               	clrf	___flmul@aexp
  5277     02CC                     l3446:
  5278     02CC  1FB8               	btfss	___flmul@grs+3,7
  5279     02CD  2ACF               	goto	u3591
  5280     02CE  2AD0               	goto	u3590
  5281     02CF                     u3591:
  5282     02CF  2AEC               	goto	l3454
  5283     02D0                     u3590:
  5284     02D0                     l3448:
  5285     02D0  30FF               	movlw	255
  5286     02D1  0535               	andwf	___flmul@grs,w
  5287     02D2  00AE               	movwf	??___flmul
  5288     02D3  30FF               	movlw	255
  5289     02D4  0536               	andwf	___flmul@grs+1,w
  5290     02D5  00AF               	movwf	??___flmul+1
  5291     02D6  30FF               	movlw	255
  5292     02D7  0537               	andwf	___flmul@grs+2,w
  5293     02D8  00B0               	movwf	??___flmul+2
  5294     02D9  307F               	movlw	127
  5295     02DA  0538               	andwf	___flmul@grs+3,w
  5296     02DB  00B1               	movwf	??___flmul+3
  5297     02DC  0831               	movf	??___flmul+3,w
  5298     02DD  0430               	iorwf	??___flmul+2,w
  5299     02DE  042F               	iorwf	??___flmul+1,w
  5300     02DF  042E               	iorwf	??___flmul,w
  5301     02E0  1903               	skipnz
  5302     02E1  2AE3               	goto	u3601
  5303     02E2  2AE4               	goto	u3600
  5304     02E3                     u3601:
  5305     02E3  2AE7               	goto	l851
  5306     02E4                     u3600:
  5307     02E4                     l3450:
  5308     02E4  01B4               	clrf	___flmul@aexp
  5309     02E5  0AB4               	incf	___flmul@aexp,f
  5310     02E6  2AEC               	goto	l3454
  5311     02E7                     l851:
  5312     02E7  1C3A               	btfss	___flmul@prod,0
  5313     02E8  2AEA               	goto	u3611
  5314     02E9  2AEB               	goto	u3610
  5315     02EA                     u3611:
  5316     02EA  2AEC               	goto	l3454
  5317     02EB                     u3610:
  5318     02EB  2AE4               	goto	l3450
  5319     02EC                     l3454:
  5320     02EC  0834               	movf	___flmul@aexp,w
  5321     02ED  1903               	btfsc	3,2
  5322     02EE  2AF0               	goto	u3621
  5323     02EF  2AF1               	goto	u3620
  5324     02F0                     u3621:
  5325     02F0  2B22               	goto	l3464
  5326     02F1                     u3620:
  5327     02F1                     l3456:
  5328     02F1  3001               	movlw	1
  5329     02F2  07BA               	addwf	___flmul@prod,f
  5330     02F3  3000               	movlw	0
  5331     02F4  1803               	skipnc
  5332     02F5  3001               	movlw	1
  5333     02F6  07BB               	addwf	___flmul@prod+1,f
  5334     02F7  3000               	movlw	0
  5335     02F8  1803               	skipnc
  5336     02F9  3001               	movlw	1
  5337     02FA  07BC               	addwf	___flmul@prod+2,f
  5338     02FB  3000               	movlw	0
  5339     02FC  1803               	skipnc
  5340     02FD  3001               	movlw	1
  5341     02FE  07BD               	addwf	___flmul@prod+3,f
  5342     02FF                     l3458:
  5343     02FF  1C3D               	btfss	___flmul@prod+3,0
  5344     0300  2B02               	goto	u3631
  5345     0301  2B03               	goto	u3630
  5346     0302                     u3631:
  5347     0302  2B22               	goto	l3464
  5348     0303                     u3630:
  5349     0303                     l3460:
  5350     0303  083A               	movf	___flmul@prod,w
  5351     0304  00AE               	movwf	??___flmul
  5352     0305  083B               	movf	___flmul@prod+1,w
  5353     0306  00AF               	movwf	??___flmul+1
  5354     0307  083C               	movf	___flmul@prod+2,w
  5355     0308  00B0               	movwf	??___flmul+2
  5356     0309  083D               	movf	___flmul@prod+3,w
  5357     030A  00B1               	movwf	??___flmul+3
  5358     030B  3001               	movlw	1
  5359     030C  00B2               	movwf	??___flmul+4
  5360     030D                     u3645:
  5361     030D  0D31               	rlf	??___flmul+3,w
  5362     030E  0CB1               	rrf	??___flmul+3,f
  5363     030F  0CB0               	rrf	??___flmul+2,f
  5364     0310  0CAF               	rrf	??___flmul+1,f
  5365     0311  0CAE               	rrf	??___flmul,f
  5366     0312                     u3640:
  5367     0312  0BB2               	decfsz	??___flmul+4,f
  5368     0313  2B0D               	goto	u3645
  5369     0314  0831               	movf	??___flmul+3,w
  5370     0315  00BD               	movwf	___flmul@prod+3
  5371     0316  0830               	movf	??___flmul+2,w
  5372     0317  00BC               	movwf	___flmul@prod+2
  5373     0318  082F               	movf	??___flmul+1,w
  5374     0319  00BB               	movwf	___flmul@prod+1
  5375     031A  082E               	movf	??___flmul,w
  5376     031B  00BA               	movwf	___flmul@prod
  5377     031C                     l3462:
  5378     031C  3001               	movlw	1
  5379     031D  07BE               	addwf	___flmul@temp,f
  5380     031E  1803               	skipnc
  5381     031F  0ABF               	incf	___flmul@temp+1,f
  5382     0320  3000               	movlw	0
  5383     0321  07BF               	addwf	___flmul@temp+1,f
  5384     0322                     l3464:
  5385     0322  083F               	movf	___flmul@temp+1,w
  5386     0323  3A80               	xorlw	128
  5387     0324  00FF               	movwf	btemp+1
  5388     0325  3080               	movlw	128
  5389     0326  027F               	subwf	btemp+1,w
  5390     0327  1D03               	skipz
  5391     0328  2B2B               	goto	u3655
  5392     0329  30FF               	movlw	255
  5393     032A  023E               	subwf	___flmul@temp,w
  5394     032B                     u3655:
  5395     032B  1C03               	skipc
  5396     032C  2B2E               	goto	u3651
  5397     032D  2B2F               	goto	u3650
  5398     032E                     u3651:
  5399     032E  2B3A               	goto	l3468
  5400     032F                     u3650:
  5401     032F                     l3466:
  5402     032F  307F               	movlw	127
  5403     0330  1283               	bcf	3,5	;RP0=0, select bank0
  5404     0331  1303               	bcf	3,6	;RP1=0, select bank0
  5405     0332  00BD               	movwf	___flmul@prod+3
  5406     0333  3080               	movlw	128
  5407     0334  00BC               	movwf	___flmul@prod+2
  5408     0335  3000               	movlw	0
  5409     0336  00BB               	movwf	___flmul@prod+1
  5410     0337  3000               	movlw	0
  5411     0338  00BA               	movwf	___flmul@prod
  5412     0339  2B6B               	goto	l3482
  5413     033A                     l3468:
  5414     033A  1283               	bcf	3,5	;RP0=0, select bank0
  5415     033B  1303               	bcf	3,6	;RP1=0, select bank0
  5416     033C  083F               	movf	___flmul@temp+1,w
  5417     033D  3A80               	xorlw	128
  5418     033E  00FF               	movwf	btemp+1
  5419     033F  3080               	movlw	128
  5420     0340  027F               	subwf	btemp+1,w
  5421     0341  1D03               	skipz
  5422     0342  2B45               	goto	u3665
  5423     0343  3001               	movlw	1
  5424     0344  023E               	subwf	___flmul@temp,w
  5425     0345                     u3665:
  5426     0345  1803               	skipnc
  5427     0346  2B48               	goto	u3661
  5428     0347  2B49               	goto	u3660
  5429     0348                     u3661:
  5430     0348  2B55               	goto	l3474
  5431     0349                     u3660:
  5432     0349                     l3470:
  5433     0349  3000               	movlw	0
  5434     034A  1283               	bcf	3,5	;RP0=0, select bank0
  5435     034B  1303               	bcf	3,6	;RP1=0, select bank0
  5436     034C  00BD               	movwf	___flmul@prod+3
  5437     034D  3000               	movlw	0
  5438     034E  00BC               	movwf	___flmul@prod+2
  5439     034F  3000               	movlw	0
  5440     0350  00BB               	movwf	___flmul@prod+1
  5441     0351  3000               	movlw	0
  5442     0352  00BA               	movwf	___flmul@prod
  5443     0353                     l3472:
  5444     0353  01B3               	clrf	___flmul@sign
  5445     0354  2B6B               	goto	l3482
  5446     0355                     l3474:
  5447     0355  1283               	bcf	3,5	;RP0=0, select bank0
  5448     0356  1303               	bcf	3,6	;RP1=0, select bank0
  5449     0357  083E               	movf	___flmul@temp,w
  5450     0358  00B9               	movwf	___flmul@bexp
  5451     0359  30FF               	movlw	255
  5452     035A  05BA               	andwf	___flmul@prod,f
  5453     035B  30FF               	movlw	255
  5454     035C  05BB               	andwf	___flmul@prod+1,f
  5455     035D  307F               	movlw	127
  5456     035E  05BC               	andwf	___flmul@prod+2,f
  5457     035F  3000               	movlw	0
  5458     0360  05BD               	andwf	___flmul@prod+3,f
  5459     0361                     l3476:
  5460     0361  1C39               	btfss	___flmul@bexp,0
  5461     0362  2B64               	goto	u3671
  5462     0363  2B65               	goto	u3670
  5463     0364                     u3671:
  5464     0364  2B66               	goto	l3480
  5465     0365                     u3670:
  5466     0365                     l3478:
  5467     0365  17BC               	bsf	___flmul@prod+2,7
  5468     0366                     l3480:
  5469     0366  0839               	movf	___flmul@bexp,w
  5470     0367  00AE               	movwf	??___flmul
  5471     0368  1003               	clrc
  5472     0369  0C2E               	rrf	??___flmul,w
  5473     036A  00BD               	movwf	___flmul@prod+3
  5474     036B                     l3482:
  5475     036B  0833               	movf	___flmul@sign,w
  5476     036C  00FF               	movwf	btemp+1
  5477     036D  087F               	movf	btemp+1,w
  5478     036E  04BD               	iorwf	___flmul@prod+3,f
  5479     036F                     l3484:
  5480     036F  083D               	movf	___flmul@prod+3,w
  5481     0370  00A9               	movwf	?___flmul+3
  5482     0371  083C               	movf	___flmul@prod+2,w
  5483     0372  00A8               	movwf	?___flmul+2
  5484     0373  083B               	movf	___flmul@prod+1,w
  5485     0374  00A7               	movwf	?___flmul+1
  5486     0375  083A               	movf	___flmul@prod,w
  5487     0376  00A6               	movwf	?___flmul
  5488     0377                     l845:
  5489     0377  0008               	return
  5490     0378                     __end_of___flmul:
  5491                           
  5492                           	psect	text21
  5493     0BB7                     __ptext21:	
  5494 ;; *************** function __Umul8_16 *****************
  5495 ;; Defined at:
  5496 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  multiplier      1    wreg     unsigned char 
  5499 ;;  multiplicand    1    2[COMMON] unsigned char 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5502 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  5503 ;;  product         2    0[BANK0 ] unsigned short 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2    2[COMMON] unsigned int 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5513 ;;      Params:         2       0       0       0       0
  5514 ;;      Locals:         0       5       0       0       0
  5515 ;;      Temps:          2       0       0       0       0
  5516 ;;      Totals:         4       5       0       0       0
  5517 ;;Total ram usage:        9 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; Hardware stack levels required when called: 1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		___flmul
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527     0BB7                     __Umul8_16:	
  5528                           ;psect for function __Umul8_16
  5529                           
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5533                           ;__Umul8_16@multiplier stored from wreg
  5534     0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  5535     0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  5536     0BB9  00A4               	movwf	__Umul8_16@multiplier
  5537     0BBA                     l3214:
  5538     0BBA  01A0               	clrf	__Umul8_16@product
  5539     0BBB  01A1               	clrf	__Umul8_16@product+1
  5540     0BBC                     l3216:
  5541     0BBC  0872               	movf	__Umul8_16@multiplicand,w
  5542     0BBD  00F4               	movwf	??__Umul8_16
  5543     0BBE  01F5               	clrf	??__Umul8_16+1
  5544     0BBF  0874               	movf	??__Umul8_16,w
  5545     0BC0  00A2               	movwf	__Umul8_16@word_mpld
  5546     0BC1  0875               	movf	??__Umul8_16+1,w
  5547     0BC2  00A3               	movwf	__Umul8_16@word_mpld+1
  5548     0BC3                     l3218:
  5549     0BC3  1C24               	btfss	__Umul8_16@multiplier,0
  5550     0BC4  2BC6               	goto	u3061
  5551     0BC5  2BC7               	goto	u3060
  5552     0BC6                     u3061:
  5553     0BC6  2BCD               	goto	l864
  5554     0BC7                     u3060:
  5555     0BC7                     l3220:
  5556     0BC7  0822               	movf	__Umul8_16@word_mpld,w
  5557     0BC8  07A0               	addwf	__Umul8_16@product,f
  5558     0BC9  1803               	skipnc
  5559     0BCA  0AA1               	incf	__Umul8_16@product+1,f
  5560     0BCB  0823               	movf	__Umul8_16@word_mpld+1,w
  5561     0BCC  07A1               	addwf	__Umul8_16@product+1,f
  5562     0BCD                     l864:
  5563     0BCD  3001               	movlw	1
  5564     0BCE                     u3075:
  5565     0BCE  1003               	clrc
  5566     0BCF  0DA2               	rlf	__Umul8_16@word_mpld,f
  5567     0BD0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5568     0BD1  3EFF               	addlw	-1
  5569     0BD2  1D03               	skipz
  5570     0BD3  2BCE               	goto	u3075
  5571     0BD4  1003               	clrc
  5572     0BD5  0CA4               	rrf	__Umul8_16@multiplier,f
  5573     0BD6                     l3222:
  5574     0BD6  0824               	movf	__Umul8_16@multiplier,w
  5575     0BD7  1D03               	btfss	3,2
  5576     0BD8  2BDA               	goto	u3081
  5577     0BD9  2BDB               	goto	u3080
  5578     0BDA                     u3081:
  5579     0BDA  2BC3               	goto	l3218
  5580     0BDB                     u3080:
  5581     0BDB                     l3224:
  5582     0BDB  0821               	movf	__Umul8_16@product+1,w
  5583     0BDC  00F3               	movwf	?__Umul8_16+1
  5584     0BDD  0820               	movf	__Umul8_16@product,w
  5585     0BDE  00F2               	movwf	?__Umul8_16
  5586     0BDF                     l866:
  5587     0BDF  0008               	return
  5588     0BE0                     __end_of__Umul8_16:
  5589                           
  5590                           	psect	text22
  5591     0CD7                     __ptext22:	
  5592 ;; *************** function _read_fotoresistor *****************
  5593 ;; Defined at:
  5594 ;;		line 43 in file "ADC.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  luzPorcentaj    2   12[BANK0 ] int 
  5599 ;;  luz             2   10[BANK0 ] int 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  2    8[BANK0 ] int 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5609 ;;      Params:         0       2       0       0       0
  5610 ;;      Locals:         0       4       0       0       0
  5611 ;;      Temps:          0       0       0       0       0
  5612 ;;      Totals:         0       6       0       0       0
  5613 ;;Total ram usage:        6 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 2
  5616 ;; This function calls:
  5617 ;;		___awdiv
  5618 ;;		___wmul
  5619 ;;		_adc_read
  5620 ;; This function is called by:
  5621 ;;		_main
  5622 ;;		_funcion_monitoreo_ambiental
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626     0CD7                     _read_fotoresistor:	
  5627                           ;psect for function _read_fotoresistor
  5628                           
  5629     0CD7                     l3508:	
  5630                           ;incstack = 0
  5631                           ; Regs used in _read_fotoresistor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5632                           
  5633                           
  5634                           ;ADC.c: 44:     int luz = adc_read(1);
  5635     0CD7  3001               	movlw	1
  5636     0CD8  00F2               	movwf	adc_read@channel
  5637     0CD9  3000               	movlw	0
  5638     0CDA  00F3               	movwf	adc_read@channel+1
  5639     0CDB  120A  158A  257D  120A  158A  	fcall	_adc_read
  5640     0CE0  0873               	movf	?_adc_read+1,w
  5641     0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  5642     0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  5643     0CE3  00AB               	movwf	read_fotoresistor@luz+1
  5644     0CE4  0872               	movf	?_adc_read,w
  5645     0CE5  00AA               	movwf	read_fotoresistor@luz
  5646                           
  5647                           ;ADC.c: 45:     int luzPorcentaje = (luz * 100) / 1023;
  5648     0CE6  30FF               	movlw	255
  5649     0CE7  00A0               	movwf	___awdiv@divisor
  5650     0CE8  3003               	movlw	3
  5651     0CE9  00A1               	movwf	___awdiv@divisor+1
  5652     0CEA  082B               	movf	read_fotoresistor@luz+1,w
  5653     0CEB  00F3               	movwf	___wmul@multiplier+1
  5654     0CEC  082A               	movf	read_fotoresistor@luz,w
  5655     0CED  00F2               	movwf	___wmul@multiplier
  5656     0CEE  3064               	movlw	100
  5657     0CEF  00F4               	movwf	___wmul@multiplicand
  5658     0CF0  3000               	movlw	0
  5659     0CF1  00F5               	movwf	___wmul@multiplicand+1
  5660     0CF2  120A  158A  2344  120A  158A  	fcall	___wmul
  5661     0CF7  0873               	movf	?___wmul+1,w
  5662     0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  5663     0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  5664     0CFA  00A3               	movwf	___awdiv@dividend+1
  5665     0CFB  0872               	movf	?___wmul,w
  5666     0CFC  00A2               	movwf	___awdiv@dividend
  5667     0CFD  120A  158A  2725  120A  158A  	fcall	___awdiv
  5668     0D02  1283               	bcf	3,5	;RP0=0, select bank0
  5669     0D03  1303               	bcf	3,6	;RP1=0, select bank0
  5670     0D04  0821               	movf	?___awdiv+1,w
  5671     0D05  00AD               	movwf	read_fotoresistor@luzPorcentaje+1
  5672     0D06  0820               	movf	?___awdiv,w
  5673     0D07  00AC               	movwf	read_fotoresistor@luzPorcentaje
  5674     0D08                     l3510:
  5675                           
  5676                           ;ADC.c: 46:     return luzPorcentaje;
  5677     0D08  082D               	movf	read_fotoresistor@luzPorcentaje+1,w
  5678     0D09  00A9               	movwf	?_read_fotoresistor+1
  5679     0D0A  082C               	movf	read_fotoresistor@luzPorcentaje,w
  5680     0D0B  00A8               	movwf	?_read_fotoresistor
  5681     0D0C                     l25:
  5682     0D0C  0008               	return
  5683     0D0D                     __end_of_read_fotoresistor:
  5684                           
  5685                           	psect	text23
  5686     0D7D                     __ptext23:	
  5687 ;; *************** function _adc_read *****************
  5688 ;; Defined at:
  5689 ;;		line 23 in file "ADC.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  channel         2    2[COMMON] int 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  value_adc       2    8[COMMON] int 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  2    2[COMMON] int 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, btemp+1
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5703 ;;      Params:         2       0       0       0       0
  5704 ;;      Locals:         2       0       0       0       0
  5705 ;;      Temps:          4       0       0       0       0
  5706 ;;      Totals:         8       0       0       0       0
  5707 ;;Total ram usage:        8 bytes
  5708 ;; Hardware stack levels used: 1
  5709 ;; Hardware stack levels required when called: 1
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_read_temperatura
  5714 ;;		_read_fotoresistor
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718     0D7D                     _adc_read:	
  5719                           ;psect for function _adc_read
  5720                           
  5721     0D7D                     l2262:	
  5722                           ;incstack = 0
  5723                           ; Regs used in _adc_read: [wreg+status,2+status,0+btemp+1]
  5724                           
  5725                           
  5726                           ;ADC.c: 25:     ADCON0bits.CHS = (0x0F & channel);
  5727     0D7D  0872               	movf	adc_read@channel,w
  5728     0D7E  390F               	andlw	15
  5729     0D7F  00F4               	movwf	??_adc_read
  5730     0D80  0DF4               	rlf	??_adc_read,f
  5731     0D81  0DF4               	rlf	??_adc_read,f
  5732     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  5733     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  5734     0D84  081F               	movf	31,w	;volatile
  5735     0D85  0674               	xorwf	??_adc_read,w
  5736     0D86  39C3               	andlw	-61
  5737     0D87  0674               	xorwf	??_adc_read,w
  5738     0D88  009F               	movwf	31	;volatile
  5739     0D89                     l2264:
  5740                           
  5741                           ;ADC.c: 26:     ADCON0bits.ADON = 1;
  5742     0D89  141F               	bsf	31,0	;volatile
  5743     0D8A                     l2266:
  5744                           
  5745                           ;ADC.c: 27:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  5746     0D8A  3013               	movlw	19
  5747     0D8B  00F4               	movwf	??_adc_read
  5748     0D8C                     u3857:
  5749     0D8C  0BF4               	decfsz	??_adc_read,f
  5750     0D8D  2D8C               	goto	u3857
  5751     0D8E  2D8F               	nop2
  5752     0D8F                     l2268:
  5753                           
  5754                           ;ADC.c: 28:     ADCON0bits.GO_DONE = 1;
  5755     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  5756     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  5757     0D91  149F               	bsf	31,1	;volatile
  5758     0D92                     l16:	
  5759                           ;ADC.c: 29:     while (ADCON0bits.GO_DONE);
  5760                           
  5761     0D92  189F               	btfsc	31,1	;volatile
  5762     0D93  2D95               	goto	u1861
  5763     0D94  2D96               	goto	u1860
  5764     0D95                     u1861:
  5765     0D95  2D92               	goto	l16
  5766     0D96                     u1860:
  5767     0D96                     l2270:
  5768                           
  5769                           ;ADC.c: 30:     int value_adc = ADRESH;
  5770     0D96  081E               	movf	30,w	;volatile
  5771     0D97  00F4               	movwf	??_adc_read
  5772     0D98  01F5               	clrf	??_adc_read+1
  5773     0D99  0874               	movf	??_adc_read,w
  5774     0D9A  00F8               	movwf	adc_read@value_adc
  5775     0D9B  0875               	movf	??_adc_read+1,w
  5776     0D9C  00F9               	movwf	adc_read@value_adc+1
  5777     0D9D                     l2272:
  5778                           
  5779                           ;ADC.c: 31:     value_adc = (value_adc << 8) + ADRESL;
  5780     0D9D  0879               	movf	adc_read@value_adc+1,w
  5781     0D9E  00F5               	movwf	??_adc_read+1
  5782     0D9F  0878               	movf	adc_read@value_adc,w
  5783     0DA0  00F4               	movwf	??_adc_read
  5784     0DA1  0874               	movf	??_adc_read,w
  5785     0DA2  00F5               	movwf	??_adc_read+1
  5786     0DA3  01F4               	clrf	??_adc_read
  5787     0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  5788     0DA5  1303               	bcf	3,6	;RP1=0, select bank1
  5789     0DA6  081E               	movf	30,w	;volatile
  5790     0DA7  0774               	addwf	??_adc_read,w
  5791     0DA8  00F6               	movwf	??_adc_read+2
  5792     0DA9  3000               	movlw	0
  5793     0DAA  1803               	skipnc
  5794     0DAB  3001               	movlw	1
  5795     0DAC  0775               	addwf	??_adc_read+1,w
  5796     0DAD  00F7               	movwf	??_adc_read+3
  5797     0DAE  0876               	movf	??_adc_read+2,w
  5798     0DAF  00F8               	movwf	adc_read@value_adc
  5799     0DB0  0877               	movf	??_adc_read+3,w
  5800     0DB1  00F9               	movwf	adc_read@value_adc+1
  5801     0DB2                     l2274:
  5802                           
  5803                           ;ADC.c: 32:     return value_adc;
  5804     0DB2  0879               	movf	adc_read@value_adc+1,w
  5805     0DB3  00F3               	movwf	?_adc_read+1
  5806     0DB4  0878               	movf	adc_read@value_adc,w
  5807     0DB5  00F2               	movwf	?_adc_read
  5808     0DB6                     l19:
  5809     0DB6  0008               	return
  5810     0DB7                     __end_of_adc_read:
  5811                           
  5812                           	psect	text24
  5813     0B44                     __ptext24:	
  5814 ;; *************** function ___wmul *****************
  5815 ;; Defined at:
  5816 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  multiplier      2    2[COMMON] unsigned int 
  5819 ;;  multiplicand    2    4[COMMON] unsigned int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  product         2    6[COMMON] unsigned int 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2    2[COMMON] unsigned int 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         4       0       0       0       0
  5832 ;;      Locals:         2       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0
  5834 ;;      Totals:         6       0       0       0       0
  5835 ;;Total ram usage:        6 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_read_fotoresistor
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     0B44                     ___wmul:	
  5846                           ;psect for function ___wmul
  5847                           
  5848     0B44                     l2306:	
  5849                           ;incstack = 0
  5850                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5851                           
  5852     0B44  01F6               	clrf	___wmul@product
  5853     0B45  01F7               	clrf	___wmul@product+1
  5854     0B46                     l2308:
  5855     0B46  1C72               	btfss	___wmul@multiplier,0
  5856     0B47  2B49               	goto	u1891
  5857     0B48  2B4A               	goto	u1890
  5858     0B49                     u1891:
  5859     0B49  2B50               	goto	l448
  5860     0B4A                     u1890:
  5861     0B4A                     l2310:
  5862     0B4A  0874               	movf	___wmul@multiplicand,w
  5863     0B4B  07F6               	addwf	___wmul@product,f
  5864     0B4C  1803               	skipnc
  5865     0B4D  0AF7               	incf	___wmul@product+1,f
  5866     0B4E  0875               	movf	___wmul@multiplicand+1,w
  5867     0B4F  07F7               	addwf	___wmul@product+1,f
  5868     0B50                     l448:
  5869     0B50  3001               	movlw	1
  5870     0B51                     u1905:
  5871     0B51  1003               	clrc
  5872     0B52  0DF4               	rlf	___wmul@multiplicand,f
  5873     0B53  0DF5               	rlf	___wmul@multiplicand+1,f
  5874     0B54  3EFF               	addlw	-1
  5875     0B55  1D03               	skipz
  5876     0B56  2B51               	goto	u1905
  5877     0B57                     l2312:
  5878     0B57  3001               	movlw	1
  5879     0B58                     u1915:
  5880     0B58  1003               	clrc
  5881     0B59  0CF3               	rrf	___wmul@multiplier+1,f
  5882     0B5A  0CF2               	rrf	___wmul@multiplier,f
  5883     0B5B  3EFF               	addlw	-1
  5884     0B5C  1D03               	skipz
  5885     0B5D  2B58               	goto	u1915
  5886     0B5E                     l2314:
  5887     0B5E  0872               	movf	___wmul@multiplier,w
  5888     0B5F  0473               	iorwf	___wmul@multiplier+1,w
  5889     0B60  1D03               	btfss	3,2
  5890     0B61  2B63               	goto	u1921
  5891     0B62  2B64               	goto	u1920
  5892     0B63                     u1921:
  5893     0B63  2B46               	goto	l2308
  5894     0B64                     u1920:
  5895     0B64                     l2316:
  5896     0B64  0877               	movf	___wmul@product+1,w
  5897     0B65  00F3               	movwf	?___wmul+1
  5898     0B66  0876               	movf	___wmul@product,w
  5899     0B67  00F2               	movwf	?___wmul
  5900     0B68                     l450:
  5901     0B68  0008               	return
  5902     0B69                     __end_of___wmul:
  5903                           
  5904                           	psect	text25
  5905     0F25                     __ptext25:	
  5906 ;; *************** function ___awdiv *****************
  5907 ;; Defined at:
  5908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  divisor         2    0[BANK0 ] int 
  5911 ;;  dividend        2    2[BANK0 ] int 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  quotient        2    6[BANK0 ] int 
  5914 ;;  sign            1    5[BANK0 ] unsigned char 
  5915 ;;  counter         1    4[BANK0 ] unsigned char 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  2    0[BANK0 ] int 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0, btemp+1
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5925 ;;      Params:         0       4       0       0       0
  5926 ;;      Locals:         0       4       0       0       0
  5927 ;;      Temps:          0       0       0       0       0
  5928 ;;      Totals:         0       8       0       0       0
  5929 ;;Total ram usage:        8 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; Hardware stack levels required when called: 1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_read_fotoresistor
  5936 ;;		_vfpfcnvrt
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940     0F25                     ___awdiv:	
  5941                           ;psect for function ___awdiv
  5942                           
  5943     0F25                     l3142:	
  5944                           ;incstack = 0
  5945                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5946                           
  5947     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5948     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  5949     0F27  01A5               	clrf	___awdiv@sign
  5950     0F28                     l3144:
  5951     0F28  1FA1               	btfss	___awdiv@divisor+1,7
  5952     0F29  2F2B               	goto	u2941
  5953     0F2A  2F2C               	goto	u2940
  5954     0F2B                     u2941:
  5955     0F2B  2F33               	goto	l3150
  5956     0F2C                     u2940:
  5957     0F2C                     l3146:
  5958     0F2C  09A0               	comf	___awdiv@divisor,f
  5959     0F2D  09A1               	comf	___awdiv@divisor+1,f
  5960     0F2E  0AA0               	incf	___awdiv@divisor,f
  5961     0F2F  1903               	skipnz
  5962     0F30  0AA1               	incf	___awdiv@divisor+1,f
  5963     0F31                     l3148:
  5964     0F31  01A5               	clrf	___awdiv@sign
  5965     0F32  0AA5               	incf	___awdiv@sign,f
  5966     0F33                     l3150:
  5967     0F33  1FA3               	btfss	___awdiv@dividend+1,7
  5968     0F34  2F36               	goto	u2951
  5969     0F35  2F37               	goto	u2950
  5970     0F36                     u2951:
  5971     0F36  2F40               	goto	l3156
  5972     0F37                     u2950:
  5973     0F37                     l3152:
  5974     0F37  09A2               	comf	___awdiv@dividend,f
  5975     0F38  09A3               	comf	___awdiv@dividend+1,f
  5976     0F39  0AA2               	incf	___awdiv@dividend,f
  5977     0F3A  1903               	skipnz
  5978     0F3B  0AA3               	incf	___awdiv@dividend+1,f
  5979     0F3C                     l3154:
  5980     0F3C  3001               	movlw	1
  5981     0F3D  00FF               	movwf	btemp+1
  5982     0F3E  087F               	movf	btemp+1,w
  5983     0F3F  06A5               	xorwf	___awdiv@sign,f
  5984     0F40                     l3156:
  5985     0F40  01A6               	clrf	___awdiv@quotient
  5986     0F41  01A7               	clrf	___awdiv@quotient+1
  5987     0F42                     l3158:
  5988     0F42  0820               	movf	___awdiv@divisor,w
  5989     0F43  0421               	iorwf	___awdiv@divisor+1,w
  5990     0F44  1903               	btfsc	3,2
  5991     0F45  2F47               	goto	u2961
  5992     0F46  2F48               	goto	u2960
  5993     0F47                     u2961:
  5994     0F47  2F7F               	goto	l3178
  5995     0F48                     u2960:
  5996     0F48                     l3160:
  5997     0F48  01A4               	clrf	___awdiv@counter
  5998     0F49  0AA4               	incf	___awdiv@counter,f
  5999     0F4A  2F56               	goto	l3166
  6000     0F4B                     l3162:
  6001     0F4B  3001               	movlw	1
  6002     0F4C                     u2975:
  6003     0F4C  1003               	clrc
  6004     0F4D  0DA0               	rlf	___awdiv@divisor,f
  6005     0F4E  0DA1               	rlf	___awdiv@divisor+1,f
  6006     0F4F  3EFF               	addlw	-1
  6007     0F50  1D03               	skipz
  6008     0F51  2F4C               	goto	u2975
  6009     0F52                     l3164:
  6010     0F52  3001               	movlw	1
  6011     0F53  00FF               	movwf	btemp+1
  6012     0F54  087F               	movf	btemp+1,w
  6013     0F55  07A4               	addwf	___awdiv@counter,f
  6014     0F56                     l3166:
  6015     0F56  1FA1               	btfss	___awdiv@divisor+1,7
  6016     0F57  2F59               	goto	u2981
  6017     0F58  2F5A               	goto	u2980
  6018     0F59                     u2981:
  6019     0F59  2F4B               	goto	l3162
  6020     0F5A                     u2980:
  6021     0F5A                     l3168:
  6022     0F5A  3001               	movlw	1
  6023     0F5B                     u2995:
  6024     0F5B  1003               	clrc
  6025     0F5C  0DA6               	rlf	___awdiv@quotient,f
  6026     0F5D  0DA7               	rlf	___awdiv@quotient+1,f
  6027     0F5E  3EFF               	addlw	-1
  6028     0F5F  1D03               	skipz
  6029     0F60  2F5B               	goto	u2995
  6030     0F61  0821               	movf	___awdiv@divisor+1,w
  6031     0F62  0223               	subwf	___awdiv@dividend+1,w
  6032     0F63  1D03               	skipz
  6033     0F64  2F67               	goto	u3005
  6034     0F65  0820               	movf	___awdiv@divisor,w
  6035     0F66  0222               	subwf	___awdiv@dividend,w
  6036     0F67                     u3005:
  6037     0F67  1C03               	skipc
  6038     0F68  2F6A               	goto	u3001
  6039     0F69  2F6B               	goto	u3000
  6040     0F6A                     u3001:
  6041     0F6A  2F72               	goto	l3174
  6042     0F6B                     u3000:
  6043     0F6B                     l3170:
  6044     0F6B  0820               	movf	___awdiv@divisor,w
  6045     0F6C  02A2               	subwf	___awdiv@dividend,f
  6046     0F6D  0821               	movf	___awdiv@divisor+1,w
  6047     0F6E  1C03               	skipc
  6048     0F6F  03A3               	decf	___awdiv@dividend+1,f
  6049     0F70  02A3               	subwf	___awdiv@dividend+1,f
  6050     0F71                     l3172:
  6051     0F71  1426               	bsf	___awdiv@quotient,0
  6052     0F72                     l3174:
  6053     0F72  3001               	movlw	1
  6054     0F73                     u3015:
  6055     0F73  1003               	clrc
  6056     0F74  0CA1               	rrf	___awdiv@divisor+1,f
  6057     0F75  0CA0               	rrf	___awdiv@divisor,f
  6058     0F76  3EFF               	addlw	-1
  6059     0F77  1D03               	skipz
  6060     0F78  2F73               	goto	u3015
  6061     0F79                     l3176:
  6062     0F79  3001               	movlw	1
  6063     0F7A  02A4               	subwf	___awdiv@counter,f
  6064     0F7B  1D03               	btfss	3,2
  6065     0F7C  2F7E               	goto	u3021
  6066     0F7D  2F7F               	goto	u3020
  6067     0F7E                     u3021:
  6068     0F7E  2F5A               	goto	l3168
  6069     0F7F                     u3020:
  6070     0F7F                     l3178:
  6071     0F7F  0825               	movf	___awdiv@sign,w
  6072     0F80  1903               	btfsc	3,2
  6073     0F81  2F83               	goto	u3031
  6074     0F82  2F84               	goto	u3030
  6075     0F83                     u3031:
  6076     0F83  2F89               	goto	l3182
  6077     0F84                     u3030:
  6078     0F84                     l3180:
  6079     0F84  09A6               	comf	___awdiv@quotient,f
  6080     0F85  09A7               	comf	___awdiv@quotient+1,f
  6081     0F86  0AA6               	incf	___awdiv@quotient,f
  6082     0F87  1903               	skipnz
  6083     0F88  0AA7               	incf	___awdiv@quotient+1,f
  6084     0F89                     l3182:
  6085     0F89  0827               	movf	___awdiv@quotient+1,w
  6086     0F8A  00A1               	movwf	?___awdiv+1
  6087     0F8B  0826               	movf	___awdiv@quotient,w
  6088     0F8C  00A0               	movwf	?___awdiv
  6089     0F8D                     l601:
  6090     0F8D  0008               	return
  6091     0F8E                     __end_of___awdiv:
  6092                           
  6093                           	psect	text26
  6094     0D0D                     __ptext26:	
  6095 ;; *************** function _funcion_inicio *****************
  6096 ;; Defined at:
  6097 ;;		line 125 in file "main.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6111 ;;      Params:         0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0
  6113 ;;      Temps:          0       3       0       0       0
  6114 ;;      Totals:         0       3       0       0       0
  6115 ;;Total ram usage:        3 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 4
  6118 ;; This function calls:
  6119 ;;		_LCD_Clear
  6120 ;;		_LCD_Init
  6121 ;;		_LCD_String
  6122 ;;		_LCD_String_xy
  6123 ;; This function is called by:
  6124 ;;		_main
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128     0D0D                     _funcion_inicio:	
  6129                           ;psect for function _funcion_inicio
  6130                           
  6131     0D0D                     l3576:	
  6132                           ;incstack = 0
  6133                           ; Regs used in _funcion_inicio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6134                           
  6135                           
  6136                           ;main.c: 126:     LCD_Init();
  6137     0D0D  120A  158A  2544  120A  158A  	fcall	_LCD_Init
  6138     0D12                     l3578:
  6139                           
  6140                           ;main.c: 127:     LCD_String_xy(0, 0, "BIENVENIDO");
  6141     0D12  01F7               	clrf	LCD_String_xy@pos
  6142     0D13  3063               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6143     0D14  00F8               	movwf	LCD_String_xy@msg
  6144     0D15  3080               	movlw	128
  6145     0D16  00F9               	movwf	LCD_String_xy@msg+1
  6146     0D17  3000               	movlw	0
  6147     0D18  120A  158A  238F  120A  158A  	fcall	_LCD_String_xy
  6148     0D1D                     l3580:
  6149                           
  6150                           ;main.c: 128:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  6151     0D1D  3015               	movlw	21
  6152     0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  6153     0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  6154     0D20  00A4               	movwf	??_funcion_inicio+2
  6155     0D21  304B               	movlw	75
  6156     0D22  00A3               	movwf	??_funcion_inicio+1
  6157     0D23  30BD               	movlw	189
  6158     0D24  00A2               	movwf	??_funcion_inicio
  6159     0D25                     u3867:
  6160     0D25  0BA2               	decfsz	??_funcion_inicio,f
  6161     0D26  2D25               	goto	u3867
  6162     0D27  0BA3               	decfsz	??_funcion_inicio+1,f
  6163     0D28  2D25               	goto	u3867
  6164     0D29  0BA4               	decfsz	??_funcion_inicio+2,f
  6165     0D2A  2D25               	goto	u3867
  6166     0D2B  2D2C               	nop2
  6167     0D2C                     l3582:
  6168                           
  6169                           ;main.c: 129:     LCD_Clear();
  6170     0D2C  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  6171     0D31                     l3584:
  6172                           
  6173                           ;main.c: 130:     LCD_String("Seguridad");
  6174     0D31  306E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  6175     0D32  00F5               	movwf	LCD_String@msg
  6176     0D33  3080               	movlw	128
  6177     0D34  00F6               	movwf	LCD_String@msg+1
  6178     0D35  120A  158A  2369  120A  158A  	fcall	_LCD_String
  6179     0D3A                     l3586:
  6180                           
  6181                           ;main.c: 131:     PORTDbits.RD5 = 0;
  6182     0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  6183     0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  6184     0D3C  1288               	bcf	8,5	;volatile
  6185     0D3D                     l3588:
  6186                           
  6187                           ;main.c: 132:     PORTDbits.RD7 = 0;
  6188     0D3D  1388               	bcf	8,7	;volatile
  6189     0D3E                     l3590:
  6190                           
  6191                           ;main.c: 133:     PORTDbits.RD6 = 0;
  6192     0D3E  1308               	bcf	8,6	;volatile
  6193     0D3F                     l3592:
  6194                           
  6195                           ;main.c: 135:     estado_actual = sistema_seguridad;
  6196     0D3F  01EF               	clrf	_estado_actual
  6197     0D40  0AEF               	incf	_estado_actual,f
  6198     0D41                     l3594:
  6199                           
  6200                           ;main.c: 136:     ms_counter = 0;
  6201     0D41  01FA               	clrf	_ms_counter	;volatile
  6202     0D42  01FB               	clrf	_ms_counter+1	;volatile
  6203     0D43                     l303:
  6204     0D43  0008               	return
  6205     0D44                     __end_of_funcion_inicio:
  6206                           
  6207                           	psect	text27
  6208     0D44                     __ptext27:	
  6209 ;; *************** function _LCD_Init *****************
  6210 ;; Defined at:
  6211 ;;		line 22 in file "LCD.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0, pclath, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6225 ;;      Params:         0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0
  6227 ;;      Temps:          2       0       0       0       0
  6228 ;;      Totals:         2       0       0       0       0
  6229 ;;Total ram usage:        2 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 2
  6232 ;; This function calls:
  6233 ;;		_LCD_Command
  6234 ;; This function is called by:
  6235 ;;		_main
  6236 ;;		_funcion_inicio
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240     0D44                     _LCD_Init:	
  6241                           ;psect for function _LCD_Init
  6242                           
  6243     0D44                     l3514:	
  6244                           ;incstack = 0
  6245                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  6246                           
  6247                           
  6248                           ;LCD.c: 24:     TRISC = 0x00;
  6249     0D44  1683               	bsf	3,5	;RP0=1, select bank1
  6250     0D45  1303               	bcf	3,6	;RP1=0, select bank1
  6251     0D46  0187               	clrf	7	;volatile
  6252     0D47                     l3516:
  6253                           
  6254                           ;LCD.c: 25:     PORTCbits.RC0 = 0;
  6255     0D47  1283               	bcf	3,5	;RP0=0, select bank0
  6256     0D48  1303               	bcf	3,6	;RP1=0, select bank0
  6257     0D49  1007               	bcf	7,0	;volatile
  6258     0D4A                     l3518:
  6259                           
  6260                           ;LCD.c: 26:     PORTCbits.RC1 = 0;
  6261     0D4A  1087               	bcf	7,1	;volatile
  6262     0D4B                     l3520:
  6263                           
  6264                           ;LCD.c: 27:     PORTC = 0xFF;
  6265     0D4B  30FF               	movlw	255
  6266     0D4C  0087               	movwf	7	;volatile
  6267     0D4D                     l3522:
  6268                           
  6269                           ;LCD.c: 28:     TRISC0 = 0;
  6270     0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  6271     0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  6272     0D4F  1007               	bcf	7,0	;volatile
  6273     0D50                     l3524:
  6274                           
  6275                           ;LCD.c: 29:     TRISC1 = 0;
  6276     0D50  1087               	bcf	7,1	;volatile
  6277     0D51                     l3526:
  6278                           
  6279                           ;LCD.c: 30:     TRISC4 = 0;
  6280     0D51  1207               	bcf	7,4	;volatile
  6281     0D52                     l3528:
  6282                           
  6283                           ;LCD.c: 31:     TRISC5 = 0;
  6284     0D52  1287               	bcf	7,5	;volatile
  6285     0D53                     l3530:
  6286                           
  6287                           ;LCD.c: 32:     TRISC6 = 0;
  6288     0D53  1307               	bcf	7,6	;volatile
  6289     0D54                     l3532:
  6290                           
  6291                           ;LCD.c: 33:     TRISC7 = 0;
  6292     0D54  1387               	bcf	7,7	;volatile
  6293     0D55                     l3534:
  6294                           
  6295                           ;LCD.c: 35:     TRISC = 0;
  6296     0D55  0187               	clrf	7	;volatile
  6297                           
  6298                           ;LCD.c: 36:     _delay((unsigned long)((15)*(8000000/4000.0)));
  6299     0D56  3027               	movlw	39
  6300     0D57  00F6               	movwf	??_LCD_Init+1
  6301     0D58  30F5               	movlw	245
  6302     0D59  00F5               	movwf	??_LCD_Init
  6303     0D5A                     u3877:
  6304     0D5A  0BF5               	decfsz	??_LCD_Init,f
  6305     0D5B  2D5A               	goto	u3877
  6306     0D5C  0BF6               	decfsz	??_LCD_Init+1,f
  6307     0D5D  2D5A               	goto	u3877
  6308     0D5E                     l3536:
  6309                           
  6310                           ;LCD.c: 37:     LCD_Command(0x02);
  6311     0D5E  3002               	movlw	2
  6312     0D5F  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6313     0D64                     l3538:
  6314                           
  6315                           ;LCD.c: 38:     LCD_Command(0x28);
  6316     0D64  3028               	movlw	40
  6317     0D65  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6318     0D6A                     l3540:
  6319                           
  6320                           ;LCD.c: 39:     LCD_Command(0x01);
  6321     0D6A  3001               	movlw	1
  6322     0D6B  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6323     0D70                     l3542:
  6324                           
  6325                           ;LCD.c: 40:     LCD_Command(0x0c);
  6326     0D70  300C               	movlw	12
  6327     0D71  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6328     0D76                     l3544:
  6329                           
  6330                           ;LCD.c: 41:     LCD_Command(0x06);
  6331     0D76  3006               	movlw	6
  6332     0D77  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6333     0D7C                     l122:
  6334     0D7C  0008               	return
  6335     0D7D                     __end_of_LCD_Init:
  6336                           
  6337                           	psect	text28
  6338     0BE0                     __ptext28:	
  6339 ;; *************** function _funcion_bloqueado *****************
  6340 ;; Defined at:
  6341 ;;		line 210 in file "main.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6355 ;;      Params:         0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0
  6358 ;;      Totals:         0       0       0       0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 3
  6362 ;; This function calls:
  6363 ;;		_LCD_Clear
  6364 ;;		_LCD_String
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370     0BE0                     _funcion_bloqueado:	
  6371                           ;psect for function _funcion_bloqueado
  6372                           
  6373     0BE0                     l3700:	
  6374                           ;incstack = 0
  6375                           ; Regs used in _funcion_bloqueado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6376                           
  6377                           
  6378                           ;main.c: 211:     LCD_Clear();
  6379     0BE0  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  6380     0BE5                     l3702:
  6381                           
  6382                           ;main.c: 212:     LCD_String("SISTEMA BLOQUEADO");
  6383     0BE5  3006               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  6384     0BE6  00F5               	movwf	LCD_String@msg
  6385     0BE7  3080               	movlw	128
  6386     0BE8  00F6               	movwf	LCD_String@msg+1
  6387     0BE9  120A  158A  2369  120A  158A  	fcall	_LCD_String
  6388     0BEE                     l3704:
  6389                           
  6390                           ;main.c: 213:     PORTDbits.RD7 = 1;
  6391     0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  6392     0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  6393     0BF0  1788               	bsf	8,7	;volatile
  6394     0BF1                     l3706:
  6395                           
  6396                           ;main.c: 214:     PORTDbits.RD4 = 1;
  6397     0BF1  1608               	bsf	8,4	;volatile
  6398     0BF2                     l3708:
  6399                           
  6400                           ;main.c: 216:     timeout_ms = 10000;
  6401     0BF2  3010               	movlw	16
  6402     0BF3  00E9               	movwf	_timeout_ms
  6403     0BF4  3027               	movlw	39
  6404     0BF5  00EA               	movwf	_timeout_ms+1
  6405     0BF6                     l3710:	
  6406                           ;main.c: 217:     while (ms_counter < timeout_ms);
  6407                           
  6408     0BF6  086A               	movf	_timeout_ms+1,w
  6409     0BF7  027B               	subwf	_ms_counter+1,w	;volatile
  6410     0BF8  1D03               	skipz
  6411     0BF9  2BFC               	goto	u3715
  6412     0BFA  0869               	movf	_timeout_ms,w
  6413     0BFB  027A               	subwf	_ms_counter,w	;volatile
  6414     0BFC                     u3715:
  6415     0BFC  1C03               	skipc
  6416     0BFD  2BFF               	goto	u3711
  6417     0BFE  2C00               	goto	u3710
  6418     0BFF                     u3711:
  6419     0BFF  2BF6               	goto	l3710
  6420     0C00                     u3710:
  6421     0C00                     l3712:
  6422                           
  6423                           ;main.c: 218:     ms_counter = 0;
  6424     0C00  01FA               	clrf	_ms_counter	;volatile
  6425     0C01  01FB               	clrf	_ms_counter+1	;volatile
  6426     0C02                     l3714:
  6427                           
  6428                           ;main.c: 220:     estado_actual = sistema_seguridad;
  6429     0C02  01EF               	clrf	_estado_actual
  6430     0C03  0AEF               	incf	_estado_actual,f
  6431     0C04                     l3716:
  6432                           
  6433                           ;main.c: 221:     intentos = 3;
  6434     0C04  3003               	movlw	3
  6435     0C05  00EB               	movwf	_intentos
  6436     0C06  3000               	movlw	0
  6437     0C07  00EC               	movwf	_intentos+1
  6438     0C08                     l3718:
  6439                           
  6440                           ;main.c: 222:     PORTDbits.RD7 = 0;
  6441     0C08  1388               	bcf	8,7	;volatile
  6442     0C09                     l3720:
  6443                           
  6444                           ;main.c: 223:     PORTDbits.RD4 = 0;
  6445     0C09  1208               	bcf	8,4	;volatile
  6446     0C0A                     l341:
  6447     0C0A  0008               	return
  6448     0C0B                     __end_of_funcion_bloqueado:
  6449                           
  6450                           	psect	text29
  6451     0C3A                     __ptext29:	
  6452 ;; *************** function _funcion_alerta *****************
  6453 ;; Defined at:
  6454 ;;		line 286 in file "main.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6468 ;;      Params:         0       0       0       0       0
  6469 ;;      Locals:         0       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0
  6471 ;;      Totals:         0       0       0       0       0
  6472 ;;Total ram usage:        0 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 4
  6475 ;; This function calls:
  6476 ;;		_LCD_Clear
  6477 ;;		_LCD_Command
  6478 ;;		_LCD_String_xy
  6479 ;; This function is called by:
  6480 ;;		_main
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484     0C3A                     _funcion_alerta:	
  6485                           ;psect for function _funcion_alerta
  6486                           
  6487     0C3A                     l3788:	
  6488                           ;incstack = 0
  6489                           ; Regs used in _funcion_alerta: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6490                           
  6491                           
  6492                           ;main.c: 287:     PORTDbits.RD7 = 1;
  6493     0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  6494     0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  6495     0C3C  1788               	bsf	8,7	;volatile
  6496                           
  6497                           ;main.c: 288:     PORTDbits.RD4 = 1;
  6498     0C3D  1608               	bsf	8,4	;volatile
  6499     0C3E                     l3790:
  6500                           
  6501                           ;main.c: 289:     LCD_Clear();
  6502     0C3E  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  6503     0C43                     l3792:
  6504                           
  6505                           ;main.c: 290:     LCD_String_xy(0, 0, "ALERTA");
  6506     0C43  01F7               	clrf	LCD_String_xy@pos
  6507     0C44  3081               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  6508     0C45  00F8               	movwf	LCD_String_xy@msg
  6509     0C46  3080               	movlw	128
  6510     0C47  00F9               	movwf	LCD_String_xy@msg+1
  6511     0C48  3000               	movlw	0
  6512     0C49  120A  158A  238F  120A  158A  	fcall	_LCD_String_xy
  6513     0C4E                     l3794:
  6514                           
  6515                           ;main.c: 291:     LCD_Command(0xC0);
  6516     0C4E  30C0               	movlw	192
  6517     0C4F  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6518     0C54                     l3796:
  6519                           
  6520                           ;main.c: 292:     timeout_ms = 5000;
  6521     0C54  3088               	movlw	136
  6522     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  6523     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  6524     0C57  00E9               	movwf	_timeout_ms
  6525     0C58  3013               	movlw	19
  6526     0C59  00EA               	movwf	_timeout_ms+1
  6527     0C5A                     l3798:
  6528                           
  6529                           ;main.c: 294:     if (ms_counter >= timeout_ms) {
  6530     0C5A  086A               	movf	_timeout_ms+1,w
  6531     0C5B  027B               	subwf	_ms_counter+1,w	;volatile
  6532     0C5C  1D03               	skipz
  6533     0C5D  2C60               	goto	u3785
  6534     0C5E  0869               	movf	_timeout_ms,w
  6535     0C5F  027A               	subwf	_ms_counter,w	;volatile
  6536     0C60                     u3785:
  6537     0C60  1C03               	skipc
  6538     0C61  2C63               	goto	u3781
  6539     0C62  2C64               	goto	u3780
  6540     0C63                     u3781:
  6541     0C63  2C6A               	goto	l362
  6542     0C64                     u3780:
  6543     0C64                     l3800:
  6544                           
  6545                           ;main.c: 295:         estado_actual = sistema_monitoreo_ambiental;
  6546     0C64  3003               	movlw	3
  6547     0C65  00EF               	movwf	_estado_actual
  6548     0C66                     l3802:
  6549                           
  6550                           ;main.c: 296:         ms_counter = 0;
  6551     0C66  01FA               	clrf	_ms_counter	;volatile
  6552     0C67  01FB               	clrf	_ms_counter+1	;volatile
  6553     0C68                     l3804:
  6554                           
  6555                           ;main.c: 297:         PORTDbits.RD7 = 0;
  6556     0C68  1388               	bcf	8,7	;volatile
  6557     0C69                     l3806:
  6558                           
  6559                           ;main.c: 298:         PORTDbits.RD4 = 0;
  6560     0C69  1208               	bcf	8,4	;volatile
  6561     0C6A                     l362:
  6562     0C6A  0008               	return
  6563     0C6B                     __end_of_funcion_alerta:
  6564                           
  6565                           	psect	text30
  6566     0C0B                     __ptext30:	
  6567 ;; *************** function _funcion_alarma *****************
  6568 ;; Defined at:
  6569 ;;		line 271 in file "main.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6583 ;;      Params:         0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0
  6586 ;;      Totals:         0       0       0       0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used: 1
  6589 ;; Hardware stack levels required when called: 4
  6590 ;; This function calls:
  6591 ;;		_LCD_Clear
  6592 ;;		_LCD_Command
  6593 ;;		_LCD_String_xy
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599     0C0B                     _funcion_alarma:	
  6600                           ;psect for function _funcion_alarma
  6601                           
  6602     0C0B                     l3770:	
  6603                           ;incstack = 0
  6604                           ; Regs used in _funcion_alarma: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6605                           
  6606                           
  6607                           ;main.c: 272:     PORTDbits.RD6 = 1;
  6608     0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  6609     0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  6610     0C0D  1708               	bsf	8,6	;volatile
  6611     0C0E                     l3772:
  6612                           
  6613                           ;main.c: 273:     LCD_Clear();
  6614     0C0E  120A  158A  224E  120A  158A  	fcall	_LCD_Clear
  6615     0C13                     l3774:
  6616                           
  6617                           ;main.c: 274:     LCD_String_xy(0, 0, "ALARMAAA");
  6618     0C13  01F7               	clrf	LCD_String_xy@pos
  6619     0C14  3078               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  6620     0C15  00F8               	movwf	LCD_String_xy@msg
  6621     0C16  3080               	movlw	128
  6622     0C17  00F9               	movwf	LCD_String_xy@msg+1
  6623     0C18  3000               	movlw	0
  6624     0C19  120A  158A  238F  120A  158A  	fcall	_LCD_String_xy
  6625     0C1E                     l3776:
  6626                           
  6627                           ;main.c: 275:     LCD_Command(0xC0);
  6628     0C1E  30C0               	movlw	192
  6629     0C1F  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6630     0C24                     l3778:
  6631                           
  6632                           ;main.c: 276:     timeout_ms = 5000;
  6633     0C24  3088               	movlw	136
  6634     0C25  1283               	bcf	3,5	;RP0=0, select bank0
  6635     0C26  1303               	bcf	3,6	;RP1=0, select bank0
  6636     0C27  00E9               	movwf	_timeout_ms
  6637     0C28  3013               	movlw	19
  6638     0C29  00EA               	movwf	_timeout_ms+1
  6639     0C2A                     l3780:
  6640                           
  6641                           ;main.c: 278:     if (ms_counter >= timeout_ms) {
  6642     0C2A  086A               	movf	_timeout_ms+1,w
  6643     0C2B  027B               	subwf	_ms_counter+1,w	;volatile
  6644     0C2C  1D03               	skipz
  6645     0C2D  2C30               	goto	u3775
  6646     0C2E  0869               	movf	_timeout_ms,w
  6647     0C2F  027A               	subwf	_ms_counter,w	;volatile
  6648     0C30                     u3775:
  6649     0C30  1C03               	skipc
  6650     0C31  2C33               	goto	u3771
  6651     0C32  2C34               	goto	u3770
  6652     0C33                     u3771:
  6653     0C33  2C39               	goto	l358
  6654     0C34                     u3770:
  6655     0C34                     l3782:
  6656                           
  6657                           ;main.c: 279:         estado_actual = sistema_monitoreo_ambiental;
  6658     0C34  3003               	movlw	3
  6659     0C35  00EF               	movwf	_estado_actual
  6660     0C36                     l3784:
  6661                           
  6662                           ;main.c: 280:         ms_counter = 0;
  6663     0C36  01FA               	clrf	_ms_counter	;volatile
  6664     0C37  01FB               	clrf	_ms_counter+1	;volatile
  6665     0C38                     l3786:
  6666                           
  6667                           ;main.c: 281:         PORTDbits.RD6 = 0;
  6668     0C38  1308               	bcf	8,6	;volatile
  6669     0C39                     l358:
  6670     0C39  0008               	return
  6671     0C3A                     __end_of_funcion_alarma:
  6672                           
  6673                           	psect	text31
  6674     0B8F                     __ptext31:	
  6675 ;; *************** function _LCD_String_xy *****************
  6676 ;; Defined at:
  6677 ;;		line 111 in file "LCD.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  row             1    wreg     unsigned char 
  6680 ;;  pos             1    7[COMMON] unsigned char 
  6681 ;;  msg             2    8[COMMON] PTR const unsigned char 
  6682 ;;		 -> STR_10(7), STR_9(9), funcion_monitoreo_puertas@buffer(17), funcion_monitoreo_ambiental@buffer(17), 
  6683 ;;		 -> STR_5(17), STR_4(15), STR_3(16), STR_1(11), 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  row             1    0[BANK0 ] unsigned char 
  6686 ;;  location        1    1[BANK0 ] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6696 ;;      Params:         3       0       0       0       0
  6697 ;;      Locals:         0       2       0       0       0
  6698 ;;      Temps:          0       0       0       0       0
  6699 ;;      Totals:         3       2       0       0       0
  6700 ;;Total ram usage:        5 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 3
  6703 ;; This function calls:
  6704 ;;		_LCD_Command
  6705 ;;		_LCD_String
  6706 ;; This function is called by:
  6707 ;;		_funcion_inicio
  6708 ;;		_funcion_seguridad
  6709 ;;		_funcion_monitoreo_ambiental
  6710 ;;		_funcion_monitoreo_puertas
  6711 ;;		_funcion_alarma
  6712 ;;		_funcion_alerta
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716     0B8F                     _LCD_String_xy:	
  6717                           ;psect for function _LCD_String_xy
  6718                           
  6719                           
  6720                           ;incstack = 0
  6721                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6722                           ;LCD_String_xy@row stored from wreg
  6723     0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  6724     0B90  1303               	bcf	3,6	;RP1=0, select bank0
  6725     0B91  00A0               	movwf	LCD_String_xy@row
  6726     0B92                     l3546:
  6727     0B92                     l3548:
  6728                           
  6729                           ;LCD.c: 114:     if(row<=1)
  6730     0B92  3002               	movlw	2
  6731     0B93  0220               	subwf	LCD_String_xy@row,w
  6732     0B94  1803               	skipnc
  6733     0B95  2B97               	goto	u3691
  6734     0B96  2B98               	goto	u3690
  6735     0B97                     u3691:
  6736     0B97  2BA3               	goto	l3554
  6737     0B98                     u3690:
  6738     0B98                     l3550:
  6739                           
  6740                           ;LCD.c: 115:     {;LCD.c: 116:         location=(0x80) | ((pos) & 0x0f);
  6741     0B98  0877               	movf	LCD_String_xy@pos,w
  6742     0B99  390F               	andlw	15
  6743     0B9A  3880               	iorlw	128
  6744     0B9B  00A1               	movwf	LCD_String_xy@location
  6745     0B9C                     l3552:
  6746                           
  6747                           ;LCD.c: 117:         LCD_Command(location);
  6748     0B9C  0821               	movf	LCD_String_xy@location,w
  6749     0B9D  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6750                           
  6751                           ;LCD.c: 118:     }
  6752     0BA2  2BAD               	goto	l3558
  6753     0BA3                     l3554:
  6754                           
  6755                           ;LCD.c: 120:     {;LCD.c: 121:         location=(0xC0) | ((pos) & 0x0f);
  6756     0BA3  0877               	movf	LCD_String_xy@pos,w
  6757     0BA4  390F               	andlw	15
  6758     0BA5  38C0               	iorlw	192
  6759     0BA6  00A1               	movwf	LCD_String_xy@location
  6760     0BA7                     l3556:
  6761                           
  6762                           ;LCD.c: 122:         LCD_Command(location);
  6763     0BA7  0821               	movf	LCD_String_xy@location,w
  6764     0BA8  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  6765     0BAD                     l3558:
  6766                           
  6767                           ;LCD.c: 126:     LCD_String(msg);
  6768     0BAD  0878               	movf	LCD_String_xy@msg,w
  6769     0BAE  00F5               	movwf	LCD_String@msg
  6770     0BAF  0879               	movf	LCD_String_xy@msg+1,w
  6771     0BB0  00F6               	movwf	LCD_String@msg+1
  6772     0BB1  120A  158A  2369  120A  158A  	fcall	_LCD_String
  6773     0BB6                     l139:
  6774     0BB6  0008               	return
  6775     0BB7                     __end_of_LCD_String_xy:
  6776                           
  6777                           	psect	text32
  6778     0B69                     __ptext32:	
  6779 ;; *************** function _LCD_String *****************
  6780 ;; Defined at:
  6781 ;;		line 101 in file "LCD.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  msg             2    5[COMMON] PTR const unsigned char 
  6784 ;;		 -> STR_10(7), STR_9(9), funcion_monitoreo_puertas@buffer(17), funcion_monitoreo_ambiental@buffer(17), 
  6785 ;;		 -> STR_6(18), STR_5(17), STR_4(15), STR_3(16), 
  6786 ;;		 -> STR_2(10), STR_1(11), 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         2       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0
  6801 ;;      Totals:         2       0       0       0       0
  6802 ;;Total ram usage:        2 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 2
  6805 ;; This function calls:
  6806 ;;		_LCD_Char
  6807 ;; This function is called by:
  6808 ;;		_LCD_String_xy
  6809 ;;		_funcion_inicio
  6810 ;;		_funcion_bloqueado
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814     0B69                     _LCD_String:	
  6815                           ;psect for function _LCD_String
  6816                           
  6817     0B69                     l3300:	
  6818                           ;incstack = 0
  6819                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6820                           
  6821                           
  6822                           ;LCD.c: 101: void LCD_String(const char *msg);LCD.c: 102: {;LCD.c: 103:  while((*msg)!=0
      +                          )
  6823     0B69  2B7E               	goto	l3306
  6824     0B6A                     l3302:
  6825                           
  6826                           ;LCD.c: 104:  {;LCD.c: 105:    LCD_Char(*msg);
  6827     0B6A  0876               	movf	LCD_String@msg+1,w
  6828     0B6B  00FF               	movwf	btemp+1
  6829     0B6C  0875               	movf	LCD_String@msg,w
  6830     0B6D  0084               	movwf	4
  6831     0B6E  120A  118A  2604  120A  158A  	fcall	stringtab
  6832     0B73  120A  158A  24A1  120A  158A  	fcall	_LCD_Char
  6833     0B78                     l3304:
  6834                           
  6835                           ;LCD.c: 106:    msg++;
  6836     0B78  3001               	movlw	1
  6837     0B79  07F5               	addwf	LCD_String@msg,f
  6838     0B7A  1803               	skipnc
  6839     0B7B  0AF6               	incf	LCD_String@msg+1,f
  6840     0B7C  3000               	movlw	0
  6841     0B7D  07F6               	addwf	LCD_String@msg+1,f
  6842     0B7E                     l3306:
  6843                           
  6844                           ;LCD.c: 103:  while((*msg)!=0)
  6845     0B7E  0876               	movf	LCD_String@msg+1,w
  6846     0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  6847     0B80  1303               	bcf	3,6	;RP1=0, select bank0
  6848     0B81  00FF               	movwf	btemp+1
  6849     0B82  0875               	movf	LCD_String@msg,w
  6850     0B83  0084               	movwf	4
  6851     0B84  120A  118A  2604  120A  158A  	fcall	stringtab
  6852     0B89  3A00               	xorlw	0
  6853     0B8A  1D03               	skipz
  6854     0B8B  2B8D               	goto	u3201
  6855     0B8C  2B8E               	goto	u3200
  6856     0B8D                     u3201:
  6857     0B8D  2B6A               	goto	l3302
  6858     0B8E                     u3200:
  6859     0B8E                     l134:
  6860     0B8E  0008               	return
  6861     0B8F                     __end_of_LCD_String:
  6862                           
  6863                           	psect	text33
  6864     0CA1                     __ptext33:	
  6865 ;; *************** function _LCD_Char *****************
  6866 ;; Defined at:
  6867 ;;		line 86 in file "LCD.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  dat             1    wreg     unsigned char 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  dat             1    4[COMMON] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6881 ;;      Params:         0       0       0       0       0
  6882 ;;      Locals:         1       0       0       0       0
  6883 ;;      Temps:          2       0       0       0       0
  6884 ;;      Totals:         3       0       0       0       0
  6885 ;;Total ram usage:        3 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_LCD_String
  6892 ;;		_funcion_seguridad
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896     0CA1                     _LCD_Char:	
  6897                           ;psect for function _LCD_Char
  6898                           
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  6902                           ;LCD_Char@dat stored from wreg
  6903     0CA1  00F4               	movwf	LCD_Char@dat
  6904     0CA2                     l3194:
  6905                           
  6906                           ;LCD.c: 86: void LCD_Char(unsigned char dat);LCD.c: 87: {;LCD.c: 88:  PORTC = (PORTC & 0
      +                          x0f) | (0xF0 & dat);
  6907     0CA2  30F0               	movlw	240
  6908     0CA3  0574               	andwf	LCD_Char@dat,w
  6909     0CA4  00F2               	movwf	??_LCD_Char
  6910     0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  6911     0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  6912     0CA7  0807               	movf	7,w	;volatile
  6913     0CA8  390F               	andlw	15
  6914     0CA9  0472               	iorwf	??_LCD_Char,w
  6915     0CAA  0087               	movwf	7	;volatile
  6916     0CAB                     l3196:
  6917                           
  6918                           ;LCD.c: 89:  PORTCbits.RC0 = 1;
  6919     0CAB  1407               	bsf	7,0	;volatile
  6920     0CAC                     l3198:
  6921                           
  6922                           ;LCD.c: 90:  PORTCbits.RC1 = 1;
  6923     0CAC  1487               	bsf	7,1	;volatile
  6924     0CAD                     l3200:
  6925                           
  6926                           ;LCD.c: 91:  __nop();
  6927     0CAD  0000               	nop
  6928     0CAE                     l3202:
  6929                           
  6930                           ;LCD.c: 92:  PORTCbits.RC1 = 0;
  6931     0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  6932     0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  6933     0CB0  1087               	bcf	7,1	;volatile
  6934     0CB1                     l3204:
  6935                           
  6936                           ;LCD.c: 93:  _delay((unsigned long)((1)*(8000000/4000.0)));
  6937     0CB1  3003               	movlw	3
  6938     0CB2  00F3               	movwf	??_LCD_Char+1
  6939     0CB3  3097               	movlw	151
  6940     0CB4  00F2               	movwf	??_LCD_Char
  6941     0CB5                     u3887:
  6942     0CB5  0BF2               	decfsz	??_LCD_Char,f
  6943     0CB6  2CB5               	goto	u3887
  6944     0CB7  0BF3               	decfsz	??_LCD_Char+1,f
  6945     0CB8  2CB5               	goto	u3887
  6946     0CB9  2CBA               	nop2
  6947     0CBA                     l3206:
  6948                           
  6949                           ;LCD.c: 94:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  6950     0CBA  0874               	movf	LCD_Char@dat,w
  6951     0CBB  00F2               	movwf	??_LCD_Char
  6952     0CBC  3004               	movlw	4
  6953     0CBD                     u3055:
  6954     0CBD  1003               	clrc
  6955     0CBE  0DF2               	rlf	??_LCD_Char,f
  6956     0CBF  3EFF               	addlw	-1
  6957     0CC0  1D03               	skipz
  6958     0CC1  2CBD               	goto	u3055
  6959     0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  6960     0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  6961     0CC4  0807               	movf	7,w	;volatile
  6962     0CC5  390F               	andlw	15
  6963     0CC6  0472               	iorwf	??_LCD_Char,w
  6964     0CC7  0087               	movwf	7	;volatile
  6965     0CC8                     l3208:
  6966                           
  6967                           ;LCD.c: 95:  PORTCbits.RC1 = 1;
  6968     0CC8  1487               	bsf	7,1	;volatile
  6969     0CC9                     l3210:
  6970                           
  6971                           ;LCD.c: 96:  __nop();
  6972     0CC9  0000               	nop
  6973     0CCA                     l3212:
  6974                           
  6975                           ;LCD.c: 97:  PORTCbits.RC1 = 0;
  6976     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  6977     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  6978     0CCC  1087               	bcf	7,1	;volatile
  6979                           
  6980                           ;LCD.c: 98:  _delay((unsigned long)((3)*(8000000/4000.0)));
  6981     0CCD  3008               	movlw	8
  6982     0CCE  00F3               	movwf	??_LCD_Char+1
  6983     0CCF  30C9               	movlw	201
  6984     0CD0  00F2               	movwf	??_LCD_Char
  6985     0CD1                     u3897:
  6986     0CD1  0BF2               	decfsz	??_LCD_Char,f
  6987     0CD2  2CD1               	goto	u3897
  6988     0CD3  0BF3               	decfsz	??_LCD_Char+1,f
  6989     0CD4  2CD1               	goto	u3897
  6990     0CD5  2CD6               	nop2
  6991     0CD6                     l128:
  6992     0CD6  0008               	return
  6993     0CD7                     __end_of_LCD_Char:
  6994                           
  6995                           	psect	text34
  6996     0A4E                     __ptext34:	
  6997 ;; *************** function _LCD_Clear *****************
  6998 ;; Defined at:
  6999 ;;		line 142 in file "LCD.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0, pclath, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7013 ;;      Params:         0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0
  7015 ;;      Temps:          2       0       0       0       0
  7016 ;;      Totals:         2       0       0       0       0
  7017 ;;Total ram usage:        2 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 2
  7020 ;; This function calls:
  7021 ;;		_LCD_Command
  7022 ;; This function is called by:
  7023 ;;		_funcion_inicio
  7024 ;;		_funcion_seguridad
  7025 ;;		_funcion_bloqueado
  7026 ;;		_funcion_monitoreo_ambiental
  7027 ;;		_funcion_monitoreo_puertas
  7028 ;;		_funcion_alarma
  7029 ;;		_funcion_alerta
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033     0A4E                     _LCD_Clear:	
  7034                           ;psect for function _LCD_Clear
  7035                           
  7036     0A4E                     l3560:	
  7037                           ;incstack = 0
  7038                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7039                           
  7040                           
  7041                           ;LCD.c: 144:     LCD_Command(0x01);
  7042     0A4E  3001               	movlw	1
  7043     0A4F  120A  158A  246B  120A  158A  	fcall	_LCD_Command
  7044     0A54                     l3562:
  7045                           
  7046                           ;LCD.c: 145:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7047     0A54  3008               	movlw	8
  7048     0A55  00F6               	movwf	??_LCD_Clear+1
  7049     0A56  30C9               	movlw	201
  7050     0A57  00F5               	movwf	??_LCD_Clear
  7051     0A58                     u3907:
  7052     0A58  0BF5               	decfsz	??_LCD_Clear,f
  7053     0A59  2A58               	goto	u3907
  7054     0A5A  0BF6               	decfsz	??_LCD_Clear+1,f
  7055     0A5B  2A58               	goto	u3907
  7056     0A5C  2A5D               	nop2
  7057     0A5D                     l142:
  7058     0A5D  0008               	return
  7059     0A5E                     __end_of_LCD_Clear:
  7060                           
  7061                           	psect	text35
  7062     0C6B                     __ptext35:	
  7063 ;; *************** function _LCD_Command *****************
  7064 ;; Defined at:
  7065 ;;		line 57 in file "LCD.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  cmd             1    wreg     unsigned char 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  cmd             1    4[COMMON] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7079 ;;      Params:         0       0       0       0       0
  7080 ;;      Locals:         1       0       0       0       0
  7081 ;;      Temps:          2       0       0       0       0
  7082 ;;      Totals:         3       0       0       0       0
  7083 ;;Total ram usage:        3 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 1
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_LCD_Init
  7090 ;;		_LCD_String_xy
  7091 ;;		_LCD_Clear
  7092 ;;		_funcion_seguridad
  7093 ;;		_funcion_alarma
  7094 ;;		_funcion_alerta
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098     0C6B                     _LCD_Command:	
  7099                           ;psect for function _LCD_Command
  7100                           
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  7104                           ;LCD_Command@cmd stored from wreg
  7105     0C6B  00F4               	movwf	LCD_Command@cmd
  7106     0C6C                     l3280:
  7107                           
  7108                           ;LCD.c: 57: void LCD_Command(unsigned char cmd );LCD.c: 58: {;LCD.c: 59:  PORTC = (PORTC
      +                           & 0x0f) |(0xF0 & cmd);
  7109     0C6C  30F0               	movlw	240
  7110     0C6D  0574               	andwf	LCD_Command@cmd,w
  7111     0C6E  00F2               	movwf	??_LCD_Command
  7112     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  7113     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  7114     0C71  0807               	movf	7,w	;volatile
  7115     0C72  390F               	andlw	15
  7116     0C73  0472               	iorwf	??_LCD_Command,w
  7117     0C74  0087               	movwf	7	;volatile
  7118     0C75                     l3282:
  7119                           
  7120                           ;LCD.c: 60:  PORTCbits.RC0 = 0;
  7121     0C75  1007               	bcf	7,0	;volatile
  7122     0C76                     l3284:
  7123                           
  7124                           ;LCD.c: 61:  PORTCbits.RC1 = 1;
  7125     0C76  1487               	bsf	7,1	;volatile
  7126     0C77                     l3286:
  7127                           
  7128                           ;LCD.c: 62:  __nop();
  7129     0C77  0000               	nop
  7130     0C78                     l3288:
  7131                           
  7132                           ;LCD.c: 63:  PORTCbits.RC1 = 0;
  7133     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  7134     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  7135     0C7A  1087               	bcf	7,1	;volatile
  7136     0C7B                     l3290:
  7137                           
  7138                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000/4000.0)));
  7139     0C7B  3003               	movlw	3
  7140     0C7C  00F3               	movwf	??_LCD_Command+1
  7141     0C7D  3097               	movlw	151
  7142     0C7E  00F2               	movwf	??_LCD_Command
  7143     0C7F                     u3917:
  7144     0C7F  0BF2               	decfsz	??_LCD_Command,f
  7145     0C80  2C7F               	goto	u3917
  7146     0C81  0BF3               	decfsz	??_LCD_Command+1,f
  7147     0C82  2C7F               	goto	u3917
  7148     0C83  2C84               	nop2
  7149     0C84                     l3292:
  7150                           
  7151                           ;LCD.c: 65:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  7152     0C84  0874               	movf	LCD_Command@cmd,w
  7153     0C85  00F2               	movwf	??_LCD_Command
  7154     0C86  3004               	movlw	4
  7155     0C87                     u3195:
  7156     0C87  1003               	clrc
  7157     0C88  0DF2               	rlf	??_LCD_Command,f
  7158     0C89  3EFF               	addlw	-1
  7159     0C8A  1D03               	skipz
  7160     0C8B  2C87               	goto	u3195
  7161     0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  7162     0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  7163     0C8E  0807               	movf	7,w	;volatile
  7164     0C8F  390F               	andlw	15
  7165     0C90  0472               	iorwf	??_LCD_Command,w
  7166     0C91  0087               	movwf	7	;volatile
  7167     0C92                     l3294:
  7168                           
  7169                           ;LCD.c: 66:  PORTCbits.RC1 = 1;
  7170     0C92  1487               	bsf	7,1	;volatile
  7171     0C93                     l3296:
  7172                           
  7173                           ;LCD.c: 67:  __nop();
  7174     0C93  0000               	nop
  7175     0C94                     l3298:
  7176                           
  7177                           ;LCD.c: 68:  PORTCbits.RC1 = 0;
  7178     0C94  1283               	bcf	3,5	;RP0=0, select bank0
  7179     0C95  1303               	bcf	3,6	;RP1=0, select bank0
  7180     0C96  1087               	bcf	7,1	;volatile
  7181                           
  7182                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000/4000.0)));
  7183     0C97  3008               	movlw	8
  7184     0C98  00F3               	movwf	??_LCD_Command+1
  7185     0C99  30C9               	movlw	201
  7186     0C9A  00F2               	movwf	??_LCD_Command
  7187     0C9B                     u3927:
  7188     0C9B  0BF2               	decfsz	??_LCD_Command,f
  7189     0C9C  2C9B               	goto	u3927
  7190     0C9D  0BF3               	decfsz	??_LCD_Command+1,f
  7191     0C9E  2C9B               	goto	u3927
  7192     0C9F  2CA0               	nop2
  7193     0CA0                     l125:
  7194     0CA0  0008               	return
  7195     0CA1                     __end_of_LCD_Command:
  7196                           
  7197                           	psect	text36
  7198     0A3E                     __ptext36:	
  7199 ;; *************** function _adc_init *****************
  7200 ;; Defined at:
  7201 ;;		line 12 in file "ADC.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7215 ;;      Params:         0       0       0       0       0
  7216 ;;      Locals:         0       0       0       0       0
  7217 ;;      Temps:          0       0       0       0       0
  7218 ;;      Totals:         0       0       0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 1
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_main
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229     0A3E                     _adc_init:	
  7230                           ;psect for function _adc_init
  7231                           
  7232     0A3E                     l2782:	
  7233                           ;incstack = 0
  7234                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  7235                           
  7236                           
  7237                           ;ADC.c: 14:     ADCON1bits.ADFM = 1;
  7238     0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7239     0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  7240     0A40  179F               	bsf	31,7	;volatile
  7241                           
  7242                           ;ADC.c: 15:     ADCON1bits.VCFG0 = 0;
  7243     0A41  121F               	bcf	31,4	;volatile
  7244                           
  7245                           ;ADC.c: 16:     ADCON1bits.VCFG1 = 0;
  7246     0A42  129F               	bcf	31,5	;volatile
  7247     0A43                     l2784:
  7248                           
  7249                           ;ADC.c: 17:     ADCON0bits.ADCS = 0b01;
  7250     0A43  1283               	bcf	3,5	;RP0=0, select bank0
  7251     0A44  1303               	bcf	3,6	;RP1=0, select bank0
  7252     0A45  081F               	movf	31,w	;volatile
  7253     0A46  393F               	andlw	-193
  7254     0A47  3840               	iorlw	64
  7255     0A48  009F               	movwf	31	;volatile
  7256     0A49                     l2786:
  7257                           
  7258                           ;ADC.c: 18:     ADRESH=0;
  7259     0A49  019E               	clrf	30	;volatile
  7260     0A4A                     l2788:
  7261                           
  7262                           ;ADC.c: 19:     ADRESL=0;
  7263     0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  7264     0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  7265     0A4C  019E               	clrf	30	;volatile
  7266     0A4D                     l13:
  7267     0A4D  0008               	return
  7268     0A4E                     __end_of_adc_init:
  7269                           
  7270                           	psect	text37
  7271     0ABA                     __ptext37:	
  7272 ;; *************** function _ISR *****************
  7273 ;; Defined at:
  7274 ;;		line 117 in file "main.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0
  7290 ;;      Temps:          2       0       0       0       0
  7291 ;;      Totals:         2       0       0       0       0
  7292 ;;Total ram usage:        2 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		Interrupt level 1
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301     0ABA                     _ISR:	
  7302                           ;psect for function _ISR
  7303                           
  7304     0ABA                     i1l2036:
  7305                           
  7306                           ;main.c: 118:     if (INTCONbits.TMR0IF) {
  7307     0ABA  1D0B               	btfss	11,2	;volatile
  7308     0ABB  2ABD               	goto	u147_21
  7309     0ABC  2ABE               	goto	u147_20
  7310     0ABD                     u147_21:
  7311     0ABD  2AC9               	goto	i1l300
  7312     0ABE                     u147_20:
  7313     0ABE                     i1l2038:
  7314                           
  7315                           ;main.c: 119:         TMR0 = 256 - (8000000 / 4 / 1000 / 256);
  7316     0ABE  30F9               	movlw	249
  7317     0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  7318     0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  7319     0AC1  0081               	movwf	1	;volatile
  7320                           
  7321                           ;main.c: 120:         ms_counter++;
  7322     0AC2  3001               	movlw	1
  7323     0AC3  07FA               	addwf	_ms_counter,f	;volatile
  7324     0AC4  1803               	skipnc
  7325     0AC5  0AFB               	incf	_ms_counter+1,f	;volatile
  7326     0AC6  3000               	movlw	0
  7327     0AC7  07FB               	addwf	_ms_counter+1,f	;volatile
  7328     0AC8                     i1l2040:
  7329                           
  7330                           ;main.c: 121:         INTCONbits.TMR0IF = 0;
  7331     0AC8  110B               	bcf	11,2	;volatile
  7332     0AC9                     i1l300:
  7333     0AC9  0871               	movf	??_ISR+1,w
  7334     0ACA  008A               	movwf	10
  7335     0ACB  0E70               	swapf	??_ISR,w
  7336     0ACC  0083               	movwf	3
  7337     0ACD  0EFE               	swapf	btemp,f
  7338     0ACE  0E7E               	swapf	btemp,w
  7339     0ACF  0009               	retfie
  7340     0AD0                     __end_of_ISR:
  7341     007E                     btemp	set	126	;btemp
  7342     007E                     wtemp0	set	126
  7343                           
  7344                           	psect	intentry
  7345     0004                     __pintentry:	
  7346                           ;incstack = 0
  7347                           ; Regs used in _ISR: [wreg]
  7348                           
  7349     0004                     interrupt_function:
  7350     007E                     saved_w	set	btemp
  7351     0004  00FE               	movwf	btemp
  7352     0005  0E03               	swapf	3,w
  7353     0006  00F0               	movwf	??_ISR
  7354     0007  080A               	movf	10,w
  7355     0008  00F1               	movwf	??_ISR+1
  7356     0009  120A  158A  2ABA   	ljmp	_ISR
  7357                           
  7358                           	psect	config
  7359                           
  7360                           ;Config register CONFIG1 @ 0x2007
  7361                           ;	Oscillator Selection bits
  7362                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  7363                           ;	Watchdog Timer Enable bit
  7364                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7365                           ;	Power-up Timer Enable bit
  7366                           ;	PWRTE = OFF, PWRT disabled
  7367                           ;	RE3/MCLR pin function select bit
  7368                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7369                           ;	Code Protection bit
  7370                           ;	CP = OFF, Program memory code protection is disabled
  7371                           ;	Data Code Protection bit
  7372                           ;	CPD = OFF, Data memory code protection is disabled
  7373                           ;	Brown Out Reset Selection bits
  7374                           ;	BOREN = OFF, BOR disabled
  7375                           ;	Internal External Switchover bit
  7376                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7377                           ;	Fail-Safe Clock Monitor Enabled bit
  7378                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7379                           ;	Low Voltage Programming Enable bit
  7380                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7381                           ;	In-Circuit Debugger Mode bit
  7382                           ;	DEBUG = 0x1, unprogrammed default
  7383     2007                     	org	8199
  7384     2007  20D7               	dw	8407
  7385                           
  7386                           ;Config register CONFIG2 @ 0x2008
  7387                           ;	Brown-out Reset Selection bit
  7388                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7389                           ;	Flash Program Memory Self Write Enable bits
  7390                           ;	WRT = OFF, Write protection off
  7391     2008                     	org	8200
  7392     2008  3FFF               	dw	16383

Data Sizes:
    Strings     130
    Constant    5
    Data        16
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     63      80
    BANK1            80      0      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 18
		 -> funcion_monitoreo_ambiental@buffer(BANK0[17]), funcion_monitoreo_puertas@buffer(BANK0[17]), STR_1(CODE[11]), STR_10(CODE[7]), 
		 -> STR_2(CODE[10]), STR_3(CODE[16]), STR_4(CODE[15]), STR_5(CODE[17]), 
		 -> STR_6(CODE[18]), STR_9(CODE[9]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> funcion_monitoreo_ambiental@buffer(BANK0[17]), funcion_monitoreo_puertas@buffer(BANK0[17]), STR_1(CODE[11]), STR_10(CODE[7]), 
		 -> STR_3(CODE[16]), STR_4(CODE[15]), STR_5(CODE[17]), STR_9(CODE[9]), 

    S939$buffer	PTR unsigned char  size(1) Largest target is 0

    S939$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[15]), STR_8(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> funcion_monitoreo_ambiental@buffer(BANK0[17]), funcion_monitoreo_puertas@buffer(BANK0[17]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 8
		 -> pass_user(BANK1[8]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[15]), STR_8(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[15]), STR_8(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[15]), STR_8(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _funcion_seguridad->_LCD_String_xy
    _funcion_monitoreo_puertas->_LCD_String_xy
    _funcion_monitoreo_ambiental->_LCD_String_xy
    _vfpfcnvrt->_abs
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _read_temperatura->___fltol
    _read_temperatura->___xxtofl
    _read_temperatura->_adc_read
    ___flmul->___xxtofl
    _read_fotoresistor->_adc_read
    ___awdiv->___wmul
    _funcion_inicio->_LCD_String_xy
    _LCD_Init->_LCD_Command
    _funcion_bloqueado->_LCD_Clear
    _funcion_bloqueado->_LCD_String
    _funcion_alerta->_LCD_String_xy
    _funcion_alarma->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_funcion_monitoreo_ambiental
    _funcion_seguridad->_keypad_getkey
    _funcion_monitoreo_puertas->_sprintf
    _funcion_monitoreo_ambiental->_read_temperatura
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___awdiv
    _read_temperatura->___flmul
    ___flmul->___xxtofl
    _read_fotoresistor->___awdiv
    _funcion_inicio->_LCD_String_xy
    _funcion_alerta->_LCD_String_xy
    _funcion_alarma->_LCD_String_xy

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   35470
                                             61 BANK0      2     2      0
                           _LCD_Init
                           _adc_init
                     _funcion_alarma
                     _funcion_alerta
                  _funcion_bloqueado
                     _funcion_inicio
        _funcion_monitoreo_ambiental
          _funcion_monitoreo_puertas
                  _funcion_seguridad
                        _keypad_Init
                  _read_fotoresistor
                          _read_hall
                    _read_movimiento
                   _read_temperatura
                      _sensores_init
 ---------------------------------------------------------------------------------
 (1) _sensores_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _funcion_seguridad                                    7     7      0    3430
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                      _keypad_getkey
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     3      3     364
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       23    23      0     542
                                              2 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _funcion_monitoreo_puertas                           17    17      0    6397
                                             43 BANK0     17    17      0
                          _LCD_Clear
                      _LCD_String_xy
                          _read_hall
                    _read_movimiento
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _read_movimiento                                      3     1      2       0
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _read_hall                                            3     1      2       0
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _funcion_monitoreo_ambiental                         17    17      0   12234
                                             44 BANK0     17    17      0
                          _LCD_Clear
                      _LCD_String_xy
                  _read_fotoresistor
                   _read_temperatura
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    16      5    4161
                                             24 BANK0     19    14      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     2      2    3603
                                             20 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12    10      2    3196
                                              8 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_temperatura                                    12    10      2    4500
                                             32 BANK0     12    10      2
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_read
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              2 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _read_fotoresistor                                    6     4      2    1337
                                              8 BANK0      6     4      2
                            ___awdiv
                             ___wmul
                           _adc_read
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             8     6      2     220
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _funcion_inicio                                       3     3      0    2615
                                              2 BANK0      3     3      0
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      62
                                              5 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _funcion_bloqueado                                    0     0      0     459
                          _LCD_Clear
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _funcion_alerta                                       0     0      0    2218
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _funcion_alarma                                       0     0      0    2218
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    2094
                                              7 COMMON     3     0      3
                                              0 BANK0      2     2      0
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     397
                                              5 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      62
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      62
                                              5 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      62
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _adc_init
   _funcion_alarma
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
   _funcion_alerta
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
   _funcion_bloqueado
     _LCD_Clear
     _LCD_String
   _funcion_inicio
     _LCD_Clear
     _LCD_Init
     _LCD_String
     _LCD_String_xy
   _funcion_monitoreo_ambiental
     _LCD_Clear
     _LCD_String_xy
     _read_fotoresistor
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _adc_read
     _read_temperatura
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _adc_read
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _funcion_monitoreo_puertas
     _LCD_Clear
     _LCD_String_xy
     _read_hall
     _read_movimiento
     _sprintf
   _funcion_seguridad
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
     _keypad_getkey
     _strncmp
   _keypad_Init
   _read_fotoresistor
   _read_hall
   _read_movimiento
   _read_temperatura
   _sensores_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      96      12        0.0%
ABS                  0      0      96       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Nov 15 15:38:46 2024

                                  pc 0002                         ?_LCD_Command 0070  
                                 l13 0A4D                                   l22 07FC  
                                 l16 0D92                                   l25 0D0C  
                                 l19 0DB6                                   l36 0A3D  
                                 l95 0549                         ___awdiv@sign 0025  
                                 fsr 0004                  ___wmul@multiplicand 0074  
                        ?_LCD_String 0075                  __Umul8_16@word_mpld 0022  
                                l122 0D7C                                  l125 0CA0  
                                l142 0A5D                                  l134 0B8E  
                                l303 0D43                                  l128 0CD6  
                                l139 0BB6                                  l331 0AD4  
                                l171 0B03                                  l180 0AA6  
                                l341 0C0A                                  l175 0A93  
                                l335 0AE9                                  l601 0F8D  
                                l362 0C6A                                  l450 0B68  
                                l354 0F24                                  l347 0FFF  
                                l358 0C39                                  l614 0E65  
                                l448 0B50                                  l642 079E  
                                l652 079E                                  l902 05CD  
                                l903 05D9                                  l911 0B22  
                                l649 0789                                  l851 02E7  
                                l845 0377                                  l864 0BCD  
                                l866 0BDF                                  l962 0A80  
                                l891 0603                                  l955 0B43  
                                l949 0468                                  l974 0E0C  
                                l889 056E                                  l985 07FD  
                                l989 0EC2                                  _ISR 0ABA  
                                _abs 0A6E                                  fsr0 0004  
                    ??_sensores_init 0072                                  indf 0000  
                       ___awmod@sign 0077                         ___flmul@aexp 0034  
                       ___flmul@bexp 0039                         ___flmul@sign 0033  
                       ___flmul@temp 003E                         ___flmul@prod 003A  
                               ?_ISR 0070                          LCD_Char@dat 0074  
                       ___fltol@exp1 0021                     ??_funcion_alarma 007A  
                   ??_funcion_alerta 007A                                 ?_abs 0078  
                               l2120 0E12                                 l2130 0E28  
                               l2122 0E17                                 l2140 0E44  
                               l2132 0E2B                                 l2124 0E19  
                               l2116 0E0D                                 l2310 0B4A  
                               l2150 0E61                                 l2142 0E4A  
                               l2134 0E32                                 l2126 0E1D  
                               l2118 0E0E                                 l3200 0CAD  
                               l2312 0B57                                 l2144 0E51  
                               l2136 0E36                                 l2128 0E22  
                               l2160 0DC8                                 l3210 0CC9  
                               l3202 0CAE                                 l2314 0B5E  
                               l2306 0B44                                 l2138 0E3A  
                               l2146 0E57                                 l2162 0DD7  
                               l2154 0DB7                                 l3212 0CCA  
                               l3204 0CB1                                 l3300 0B69  
                               l2316 0B64                                 l2308 0B46  
                               l3220 0BC7                                 l2500 054D  
                               l2148 0E5C                                 l2164 0DF5  
                               l2156 0DBC                                 l3206 0CBA  
                               l3302 0B6A                                 l3150 0F33  
                               l3142 0F25                                 l2270 0D96  
                               l2262 0D7D                                 l3222 0BD6  
                               l3214 0BBA                                 l3310 0732  
                               l2502 0552                                 l2158 0DC1  
                               l3230 038A                                 l3208 0CC8  
                               l3304 0B78                                 l3160 0F48  
                               l3152 0F37                                 l3144 0F28  
                               l2272 0D9D                                 l2264 0D89  
                               l3224 0BDB                                 l3216 0BBC  
                               l3400 0116                                 l3320 0757  
                               l2520 0596                                 l2512 057F  
                               l2504 0556                                 l3240 03AF  
                               l3232 0390                                 l2600 04A5  
                               l3306 0B7E                                 l3170 0F6B  
                               l3162 0F4B                                 l3154 0F3C  
                               l3146 0F2C                                 l2274 0DB2  
                               l2266 0D8A                                 l3218 0BC3  
                               l3410 0182                                 l3402 0132  
                               l3330 0765                                 l3322 0759  
                               l3314 073B                                 l2530 05C3  
                               l2522 059A                                 l2514 0582  
                               l2506 0566                                 l3250 03D6  
                               l3242 03BB                                 l3234 039B  
                               l2610 04BE                                 l2602 04AA  
                               l3180 0F84                                 l3172 0F71  
                               l3164 0F52                                 l3156 0F40  
                               l3148 0F31                                 l2268 0D8F  
                               l3420 020C                                 l3412 0190  
                               l3404 014E                                 l3340 077E  
                               l3332 076E                                 l3324 075D  
                               l3316 074E                                 l3308 0727  
                               l2540 05F6                                 l2532 05C7  
                               l2524 05A8                                 l2516 0586  
                               l2508 0576                                 l3500 07AD  
                               l3260 041A                                 l3252 03F5  
                               l3244 03C8                                 l3236 039F  
                               l3228 037B                                 l2620 04D0  
                               l2612 04C0                                 l2604 04AC  
                               l3182 0F89                                 l3174 0F72  
                               l3166 0F56                                 l3158 0F42  
                               l3510 0D08                                 l3430 029C  
                               l3422 021A                                 l3414 01AD  
                               l3406 0157                                 l3350 003C  
                               l3342 078E                                 l3334 0777  
                               l3318 074F                                 l2542 05FA  
                               l2534 05D1                                 l2526 05B1  
                               l2518 058F                                 l3502 07B9  
                               l3190 0A73                                 l3262 041F  
                               l3254 040A                                 l3246 03CD  
                               l3270 0447                                 l3238 03A3  
                               l2630 04EA                                 l2622 04D5  
                               l2614 04C7                                 l2606 04B0  
                               l3280 0C6C                                 l3520 0D4B  
                               l3176 0F79                                 l3168 0F5A  
                               l3440 02C1                                 l3432 02AA  
                               l3424 0245                                 l3416 01C4  
                               l3408 0165                                 l3360 0053  
                               l3352 0040                                 l3344 0793  
                               l2544 05FB                                 l2536 05DB  
                               l2528 05B8                                 l3504 07E9  
                               l3264 0428                                 l3256 0410  
                               l3248 03CF                                 l2640 04FC  
                               l2632 04EC                                 l2624 04D7  
                               l2616 04C9                                 l2608 04B6  
                               l2800 0AF4                                 l3290 0C7B  
                               l3282 0C75                                 l3194 0CA2  
                               l3530 0D53                                 l3522 0D4D  
                               l3514 0D44                                 l3178 0F7F  
                               l3450 02E4                                 l3434 02B3  
                               l3442 02C7                                 l3426 026B  
                               l3418 01E1                                 l3370 006A  
                               l3362 0055                                 l3354 0041  
                               l3346 0033                                 l2538 05F1  
                               l3186 0A6E                                 l3266 043A  
                               l3258 0415                                 l3274 0451  
                               l2650 0516                                 l2642 0501  
                               l2634 04F3                                 l2618 04CE  
                               l2626 04DB                                 l2810 0AFD  
                               l2802 0AF5                                 l3292 0C84  
                               l3284 0C76                                 l3196 0CAB  
                               l3700 0BE0                                 l3540 0D6A  
                               l3532 0D54                                 l3524 0D50  
                               l3516 0D47                                 l3508 0CD7  
                               l3460 0303                                 l3444 02CB  
                               l3436 02B7                                 l3428 0293  
                               l3380 007F                                 l3372 006B  
                               l3364 005D                                 l3356 0046  
                               l3348 0038                                 l3188 0A72  
                               l3268 0440                                 l2732 0A91  
                               l2724 0A81                                 l2660 0528  
                               l2652 0518                                 l2644 0503  
                               l2636 04F5                                 l2628 04E2  
                               l2580 0481                                 l2812 0AFE  
                               l2804 0AF6                                 l3294 0C92  
                               l3286 0C77                                 l3198 0CAC  
                               l3550 0B98                                 l3710 0BF6  
                               l3702 0BE5                                 l3542 0D70  
                               l3534 0D55                                 l3526 0D51  
                               l3518 0D4A                                 l3470 0349  
                               l3462 031C                                 l3454 02EC  
                               l3446 02CC                                 l3438 02B8  
                               l3390 009A                                 l3382 0087  
                               l3374 0070                                 l3366 0062  
                               l3358 004B                                 l2726 0A87  
                               l2670 0546                                 l2662 052D  
                               l2654 051F                                 l2638 04FA  
                               l2646 0507                                 l2590 0493  
                               l2574 0469                                 l2750 0E75  
                               l2814 0B01                                 l2806 0AF7  
                               l3296 0C93                                 l3288 0C78  
                               l3560 0A4E                                 l3552 0B9C  
                               l3800 0C64                                 l3720 0C09  
                               l3712 0C00                                 l3704 0BEE  
                               l3544 0D76                                 l3536 0D5E  
                               l3528 0D52                                 l3480 0366  
                               l3472 0353                                 l3456 02F1  
                               l3464 0322                                 l3448 02D0  
                               l3392 00A8                                 l3384 008C  
                               l3376 0075                                 l3368 0066  
                               l2744 0AA4                                 l2736 0A94  
                               l2664 052F                                 l2656 0521  
                               l2648 050E                                 l2592 0495  
                               l2576 047E                                 l2760 0E8E  
                               l2816 0B02                                 l2808 0AFA  
                               l3298 0C94                                 l3562 0A54  
                               l3554 0BA3                                 l3546 0B92  
                               l3802 0C66                                 l3714 0C02  
                               l3706 0BF1                                 l3538 0D64  
                               l3474 0355                                 l3482 036B  
                               l3466 032F                                 l3458 02FF  
                               l3394 00B5                                 l3386 0091  
                               l3378 007D                                 l3490 0B29  
                               l3570 0B0F                                 l3730 0FC6  
                               l3722 0F8E                                 l2738 0A9A  
                               l2658 0526                                 l2666 0533  
                               l2594 049C                                 l2586 0483  
                               l2578 047E                                 l2762 0E9A  
                               l2754 0E78                                 l3810 069F  
                               l3556 0BA7                                 l3548 0B92  
                               l3804 0C68                                 l3716 0C04  
                               l3708 0BF2                                 l3580 0D1D  
                               l3484 036F                                 l3476 0361  
                               l3468 033A                                 l3396 00D0  
                               l3492 0B33                                 l3572 0B19  
                               l3564 0B07                                 l3732 0FC9  
                               l3724 0FA4                                 l2668 0539  
                               l2596 049E                                 l2588 048B  
                               l2764 0EA0                                 l2756 0E80  
                               l2748 0E67                                 l3900 070D  
                               l3820 06A8                                 l3812 06A2  
                               l2782 0A3E                                 l3558 0BAD  
                               l3806 0C69                                 l3718 0C08  
                               l3590 0D3E                                 l3582 0D2C  
                               l3478 0365                                 l3398 00EC  
                               l3494 0B41                                 l3566 0B0B  
                               l3742 0FF0                                 l3734 0FDA  
                               l3726 0FA9                                 l3750 0ED9  
                               l2598 04A3                                 l2766 0EB0  
                               l2758 0E86                                 l2790 0A32  
                               l3830 06B1                                 l3822 06A9  
                               l3814 06A5                                 l2784 0A43  
                               l3592 0D3F                                 l3584 0D31  
                               l3576 0D0D                                 l3488 0B26  
                               l3568 0B0D                                 l3744 0FFC  
                               l3736 0FE9                                 l3728 0FBB  
                               l3760 0F0E                                 l3752 0EDE  
                               l2792 0A3C                                 l3840 06CA  
                               l3832 06B6                                 l3824 06AA  
                               l3816 06A6                                 l3808 069B  
                               l2786 0A49                                 l3770 0C0B  
                               l3594 0D41                                 l3586 0D3A  
                               l3578 0D12                                 l3498 079F  
                               l3738 0FED                                 l3762 0F12  
                               l3754 0EF0                                 l2794 0AEA  
                               l3850 06E6                                 l3842 06CF  
                               l3834 06BB                                 l3826 06AD  
                               l3818 06A7                                 l2788 0A4A  
                               l3780 0C2A                                 l3772 0C0E  
                               l3588 0D3D                                 l3764 0F15  
                               l3756 0EFB                                 l3748 0EC3  
                               l3692 0AD0                                 l3596 0AD0  
                               l2796 0AEE                                 l3852 06EC  
                               l3844 06D4                                 l3836 06C0  
                               l3828 06B0                                 l3782 0C34  
                               l3774 0C13                                 l3790 0C3E  
                               l3766 0F21                                 l3758 0F01  
                               l3694 0AD8                                 l3598 0AD0  
                               l2798 0AF1                                 l3854 06F2  
                               l3846 06DA                                 l3862 0703  
                               l3838 06C5                                 l3784 0C36  
                               l3776 0C1E                                 l3792 0C43  
                               l3696 0AE2                                 l3856 06F8  
                               l3848 06E0                                 l3786 0C38  
                               l3778 0C24                                 l3794 0C4E  
                               l3698 0AE4                                 l3858 06FE  
                               l3796 0C54                                 l3788 0C3A  
                               l3798 0C5A                                 STR_1 0676  
                               STR_2 0681                                 STR_3 063C  
                               STR_4 064C                                 STR_5 062B  
                               STR_6 0619                                 STR_7 065B  
                               STR_8 066A                                 STR_9 068B  
                               u3000 0F6B                                 u3001 0F6A  
                               u3020 0F7F                                 u3100 03AF  
                               u3021 0F7E                                 u3005 0F67  
                               u3101 03AE                                 u3030 0F84  
                               u3110 03BB                                 u3031 0F83  
                               u3015 0F73                                 u3111 03BA  
                               u3200 0B8E                                 u2400 0552  
                               u1600 0E28                                 u3040 0A72  
                               u3120 03D4                                 u3201 0B8D  
                               u2401 0551                                 u1601 0E27  
                               u3041 0A71                                 u3121 03D2  
                               u3210 0732                                 u2410 0556  
                               u3130 03D5                                 u3211 0731  
                               u2411 0555                                 u3060 0BC7  
                               u3300 0793                                 u3220 0749  
                               u2500 05D1                                 u2420 0576  
                               u1620 0E3A                                 u1700 0DF5  
                               u3140 0410                                 u3061 0BC6  
                               u3301 0792                                 u2501 05D0  
                               u2421 0575                                 u1621 0E39  
                               u1701 0DF4                                 u3141 040F  
                               u3310 0040                                 u3230 075D  
                               u2510 05E6                                 u1630 0E44  
                               u3150 0415                                 u3055 0CBD  
                               u3311 003F                                 u3231 075C  
                               u1631 0E43                                 u1615 0E2C  
                               u3151 0414                                 u3080 0BDB  
                               u3320 0046                                 u3240 0764  
                               u2520 05F6                                 u2440 0595  
                               u3160 041A                                 u2600 04B0  
                               u3081 0BDA                                 u3401 00FA  
                               u3321 0045                                 u3241 0763  
                               u3225 0744                                 u2521 05F5  
                               u2441 0594                                 u1705 0DF1  
                               u3161 0419                                 u2601 04AF  
                               u3402 0101                                 u3330 004B  
                               u2530 05FA                                 u1650 0E57  
                               u3170 041F                                 u3090 038A  
                               u2610 04B6                                 u3075 0BCE  
                               u3411 0124                                 u3403 0108  
                               u3331 004A                                 u2531 05F9  
                               u2515 05E1                                 u2435 0587  
                               u1651 0E56                                 u1635 0E40  
                               u3171 041E                                 u3091 0389  
                               u2611 04B5                                 u3500 0251  
                               u3412 012B                                 u3340 006A  
                               u3260 0776                                 u2460 05B7  
                               u1660 0E5C                                 u1580 0E12  
                               u3180 0446                                 u2700 0507  
                               u2620 04C6                                 u3421 0140  
                               u3413 0132                                 u3341 0069  
                               u3261 0775                                 u2461 05B6  
                               u1661 0E5B                                 u1645 0E4B  
                               u1581 0E11                                 u3181 0445  
                               u2701 0506                                 u2621 04C5  
                               u3422 0147                                 u3350 0070  
                               u3270 077D                                 u1590 0E1D  
                               u1670 0DBC                                 u2710 050E  
                               u2630 04CD                                 u2550 0471  
                               u3511 025D                                 u3423 014E  
                               u3351 006F                                 u3271 077C  
                               u3255 0766                                 u2455 05A9  
                               u1591 0E1C                                 u1671 0DBB  
                               u2711 050D                                 u2631 04CC  
                               u1920 0B64                                 u3600 02E4  
                               u3520 0279                                 u3512 0264  
                               u3360 0075                                 u2480 05C7  
                               u1680 0DC1                                 u2720 051E  
                               u2640 04D4                                 u2560 048B  
                               u2800 0E75                                 u1921 0B63  
                               u1905 0B51                                 u3601 02E3  
                               u3513 026B                                 u3505 024C  
                               u3441 0174                                 u3361 0074  
                               u2481 05C6                                 u1681 0DC0  
                               u2721 051D                                 u2641 04D3  
                               u2561 048A                                 u2801 0E74  
                               u3610 02EB                                 u3442 017B  
                               u3370 008C                                 u3290 078E  
                               u2490 05CD                                 u1690 0DD7  
                               u2730 0525                                 u2650 04DB  
                               u2570 049B                                 u2810 0E8E  
                               u3195 0C87                                 u1915 0B58  
                               u3611 02EA                                 u3531 0285  
                               u3451 019F                                 u3443 0182  
                               u3435 0150                                 u3371 008B  
                               u3291 078D                                 u2491 05CC  
                               u2475 05BC                                 u1691 0DD6  
                               u2731 0524                                 u2651 04DA  
                               u2571 049A                                 u2811 0E8D  
                               u1860 0D96                                 u3620 02F1  
                               u3532 028C                                 u3452 01A6  
                               u3380 0091                                 u2740 052C  
                               u2660 04E2                                 u2580 04A2  
                               u2820 0E9A                                 u3700 0AE2  
                               u1861 0D95                                 u3621 02F0  
                               u3533 0293                                 u3525 0274  
                               u3453 01AD                                 u3381 0090  
                               u3285 0780                                 u2741 052B  
                               u2661 04E1                                 u2581 04A1  
                               u2821 0E99                                 u3701 0AE1  
                               u3710 0C00                                 u3630 0303  
                               u2750 0533                                 u2670 04F2  
                               u2590 04A9                                 u2830 0EA0  
                               u3711 0BFF                                 u3631 0302  
                               u3471 01D3                                 u3391 00DE  
                               u2751 0532                                 u2671 04F1  
                               u2591 04A8                                 u2831 0E9F  
                               u3640 0312                                 u3560 02B7  
                               u3472 01DA                                 u3392 00E5  
                               u3720 0FDA                                 u2760 0546  
                               u2680 04F9                                 u2840 0EB0  
                               u3561 02B6                                 u3545 0295  
                               u3481 01FE                                 u3473 01E1  
                               u3465 01AF                                 u3393 00EC  
                               u3721 0FD9                                 u2761 0545  
                               u2681 04F8                                 u2841 0EAF  
                               u3705 0ADE                                 u1890 0B4A  
                               u3650 032F                                 u3482 0205  
                               u3730 0FE9                                 u2690 0500  
                               u3715 0BFC                                 u1891 0B49  
                               u3651 032E                                 u3555 02AC  
                               u3491 0229                                 u3483 020C  
                               u3731 0FE8                                 u2691 04FF  
                               u2940 0F2C                                 u3660 0349  
                               u3580 02CB                                 u3492 0230  
                               u3740 0FFC                                 u2780 0A87  
                               u2941 0F2B                                 u3661 0348  
                               u3645 030D                                 u3581 02CA  
                               u3493 0237                                 u3741 0FFB  
                               u3725 0FD6                                 u2781 0A86  
                               u2765 0542                                 u2950 0F37  
                               u3670 0365                                 u3590 02D0  
                               u2790 0A9A                                 u3750 0F0E  
                               u2951 0F36                                 u3671 0364  
                               u3655 032B                                 u3591 02CF  
                               u3575 02BA                                 u3735 0FE5  
                               u2791 0A99                                 u3751 0F0D  
                               u3807 04BA                                 u2960 0F48  
                               u3680 0B41                                 u3760 0F21  
                               u2961 0F47                                 u3665 0345  
                               u3681 0B40                                 u3745 0FF8  
                               u3761 0F20                                 u3817 04E6  
                               u3690 0B98                                 u3770 0C34  
                               u3907 0A58                                 u3691 0B97  
                               u3771 0C33                                 u3755 0F0A  
                               u3827 0512                                 u3780 0C64  
                               u2980 0F5A                                 u3917 0C7F  
                               u3781 0C63                                 u2981 0F59  
                               u3837 0A9C                                 u3765 0F1D  
                               u3927 0C9B                                 u3775 0C30  
                               u2975 0F4C                                 u3847 0A89  
                               u3785 0C60                                 u3857 0D8C  
                               u3867 0D25                                 u2995 0F5B  
                               u3877 0D5A                                 u3797 048F  
                               u3887 0CB5                                 u3897 0CD1  
                               _TMR0 0001                     ??_funcion_inicio 0022  
                               abs@a 0078                                 _dbuf 00A0  
                               _main 069B                                 _prec 005F  
                               btemp 007E                                 start 000C  
                      _LCD_String_xy 0B8F                                ??_ISR 0070  
                              ??_abs 0020                     __end_of_LCD_Char 0CD7  
                   __end_of_LCD_Init 0D7D                        ___fltol@sign1 0020  
                              ?_main 0070                      __end_of___awdiv 0F8E  
                              STR_10 0694                      __end_of___awmod 0E66  
                    __end_of___flmul 0378                      __end_of___fltol 079F  
                    ___awdiv@divisor 0020                                i1l300 0AC9  
                    ___awdiv@counter 0024                         vfpfcnvrt@fmt 0028  
                              _PORTB 0006                                _PORTC 0007  
                              _PORTD 0008                                _TRISB 0086  
                              _TRISC 0087                                _TRISD 0088  
                       ?_keypad_Init 0070                                _flags 006D  
                              _fputc 0DB7            read_temperatura@valor_adc 004A  
                              _width 00C0                                _putch 07FD  
            read_temperatura@celsius 0044                                pclath 000A  
                              status 0003                                wtemp0 007E  
                    __end_of_sprintf 0B23                      __end_of_strncmp 0EC3  
           __end_of_read_temperatura 07FD                       ?_LCD_String_xy 0077  
                    __initialization 000F                         __end_of_main 0727  
                             ??_main 005D                    __end_of_LCD_Clear 0A5E  
                keypad_getkey@letras 0020                               ?_fputc 0072  
                             _ADRESH 001E                               _ADRESL 009E  
                   ___awdiv@dividend 0022                               ?_putch 0070  
                             _ANSELH 0189         ?_funcion_monitoreo_ambiental 0070  
                   LCD_String_xy@msg 0078                     LCD_String_xy@pos 0077  
                   LCD_String_xy@row 0020                     __end_of_adc_init 0A4E  
                   __end_of_adc_read 0DB7                               i1l2040 0AC8  
                             i1l2036 0ABA                               i1l2038 0ABE  
                             u147_20 0ABE                               u147_21 0ABD  
  __end_of_funcion_monitoreo_puertas 0F25                               _OSCCON 008F  
                      vfpfcnvrt@done 002C                               _TRISA0 0428  
                             _TRISA1 0429                               _TRISA2 042A  
                             _TRISA3 042B                               _TRISC0 0438  
                             _TRISC1 0439                               _TRISC4 043C  
                             _TRISC5 043D                               _TRISC6 043E  
                             _TRISC7 043F                     __end_of___xxtofl 0604  
                  ??_read_movimiento 0074                         vfprintf@cfmt 0037  
                             ___wmul 0B44                            ??___awdiv 0078  
                          ??___awmod 0076                            ??___flmul 002E  
                          ??___fltol 0076                     ___awdiv@quotient 0026  
                    ___awmod@divisor 0072                      ___awmod@counter 0076  
                   __end_of_password 0619                               fputc@c 0072  
                             saved_w 007E                               putch@c 0070  
                   __end_of_vfprintf 0B44                            ??_sprintf 003D  
                          ??_strncmp 0075                        _estado_actual 006F  
                       ___xxtofl@arg 0022                         ___xxtofl@exp 0021  
                       ___xxtofl@val 0072        ??_funcion_monitoreo_ambiental 007A  
                          ?_LCD_Char 0070              __end_of__initialization 002F  
                          ?_LCD_Init 0070                      ??_LCD_String_xy 007A  
                         ___fltol@f1 0072                       __pcstackCOMMON 0070  
                       __pidataBANK1 0A5E                        __end_of_fputc 0E0D  
                      __end_of_putch 07FE                         ??_LCD_String 0077  
                     _OPTION_REGbits 0081                              ??_fputc 0075  
                            ??_putch 0072                           __pbssBANK0 005F  
                         __pbssBANK1 00A0                           ??_LCD_Char 0072  
                         ??_LCD_Init 0075                   __end_of_LCD_String 0B8F  
                  __end_of__Umul8_16 0BE0                    _funcion_bloqueado 0BE0  
                         __pmaintext 069B                   ?_funcion_bloqueado 0070  
                            ?___wmul 0072                           __pintentry 0004  
                          ?_adc_init 0070                            ?_adc_read 0072  
                ??_funcion_bloqueado 0077                        _keypad_getkey 0469  
               read_fotoresistor@luz 002A                            ?___xxtofl 0072  
              __end_of_sensores_init 0B04                           __stringtab 0604  
                  _funcion_seguridad 0AD0                   ?_funcion_seguridad 0070  
          __end_of_funcion_bloqueado 0C0B                        LCD_String@msg 0075  
                  ?_read_temperatura 0040                   ??_read_temperatura 0042  
                ??_funcion_seguridad 007A                              ___awdiv 0F25  
                            ___awmod 0E0D                              ___flmul 0033  
                            ___fltol 0727                            ?_vfprintf 0034  
                          _ANSELbits 0188       read_fotoresistor@luzPorcentaje 002C  
                         ??_adc_init 0072                           ??_adc_read 0074  
                            __ptext1 0AEA                              __ptext2 0A32  
                            __ptext3 0AD0                              __ptext4 0E66  
                            __ptext5 0469                              __ptext6 0EC3  
                            __ptext7 0A94                              __ptext8 0A81  
                            __ptext9 0F8E                       ?_keypad_getkey 0070  
                         ??___xxtofl 0076                    __end_of_read_hall 0A94  
                   ___awmod@dividend 0074                            _LCD_Clear 0A4E  
          __end_of_funcion_seguridad 0AEA                              _sprintf 0B04  
                            clrloop0 0A2B                      _read_movimiento 0A94  
                         _ms_counter 007A                              _strncmp 0E66  
               end_of_initialization 002F                              fputc@fp 0074  
                     LCD_Command@cmd 0074                    __end_of_vfpfcnvrt 0469  
                   vfpfcnvrt@convarg 002F                           ??_vfprintf 007A  
                          _PORTAbits 0005                            _PORTCbits 0007  
                          _PORTDbits 0008                           _timeout_ms 0069  
                      ___xxtofl@sign 0020                           ?_LCD_Clear 0070  
                        ___flmul@grs 0035           ?_funcion_monitoreo_puertas 0070  
                      ??_LCD_Command 0072                          vfpfcnvrt@ap 0029  
                        vfpfcnvrt@cp 002E                          vfpfcnvrt@fp 002D  
                     __end_of___wmul 0B69                      ??_keypad_getkey 0072  
                  _read_fotoresistor 0CD7                   ?_read_fotoresistor 0028  
            __end_of_read_movimiento 0AA7                   keypad_getkey@F1398 00CA  
                start_initialization 000F                          __end_of_ISR 0AD0  
                        __end_of_abs 0A81                  ??_read_fotoresistor 007A  
                 keypad_getkey@valor 0030                __end_of_LCD_String_xy 0BB7  
                  adc_read@value_adc 0078                          vfprintf@fmt 0034  
                           ??___wmul 0076                           init_fetch0 0AA7  
          __end_of_read_fotoresistor 0D0D                            __Umul8_16 0BB7  
                        __pdataBANK1 00CA          read_temperatura@temperatura 0048  
                __end_of_LCD_Command 0CA1                            ___flmul@a 002A  
                          ___flmul@b 0026                          __pbssCOMMON 007A  
                    adc_read@channel 0072                            ___latbits 0002  
                      __pcstackBANK0 0020                        ??_keypad_Init 0072  
                        ??_LCD_Clear 0075  __end_of_funcion_monitoreo_ambiental 1000  
        _funcion_monitoreo_ambiental 0F8E      funcion_monitoreo_puertas@buffer 004B  
                     _funcion_alarma 0C0B                       _funcion_alerta 0C3A  
                     _funcion_inicio 0D0D                             ?___awdiv 0020  
                           ?___awmod 0072                             ?___flmul 0026  
                           ?___fltol 0072                           ?__Umul8_16 0072  
                          __pstrings 0604                     ?_read_movimiento 0072  
              LCD_String_xy@location 0021                             ?_sprintf 0038  
                          _read_hall 0A81                             ?_strncmp 0072  
                           _LCD_Char 0CA1                    interrupt_function 0004  
                __end_of_keypad_Init 0A3E                             _LCD_Init 0D44  
                     ___wmul@product 0076                            _pass_user 00C2  
             __end_of_funcion_alarma 0C3A               __end_of_funcion_alerta 0C6B  
                          clear_ram0 0A2A               __end_of_funcion_inicio 0D44  
                        _LCD_Command 0C6B                            _vfpfcnvrt 0378  
                         _ADCON0bits 001F                          __stringbase 0613  
                         _ADCON1bits 009F                    ___wmul@multiplier 0072  
                         vfpfcnvrt@c 0033                           ?_read_hall 0072  
                    ?_funcion_alarma 0070          ??_funcion_monitoreo_puertas 007A  
                    ?_funcion_alerta 0070                      ?_funcion_inicio 0070  
                         vfprintf@ap 0035                           vfprintf@fp 0036  
                        ??__Umul8_16 0074                           ?_vfpfcnvrt 0028  
                 __end_of__stringtab 0614                             _adc_init 0A3E  
                           _adc_read 0D7D                           sprintf@fmt 0038  
                           ___xxtofl 054A                          _keypad_Init 0A32  
                           __ptext10 0B04                             __ptext11 0B23  
                           __ptext20 0033                             __ptext12 0378  
                           __ptext21 0BB7                             __ptext13 0DB7  
                           __ptext30 0C0B                             __ptext22 0CD7  
                           __ptext14 07FD                             __ptext31 0B8F  
                           __ptext23 0D7D                             __ptext15 0A6E  
                           __ptext32 0B69                             __ptext24 0B44  
                           __ptext16 0E0D                             __ptext33 0CA1  
                           __ptext25 0F25                             __ptext17 079F  
                           __ptext34 0A4E                             __ptext26 0D0D  
                           __ptext18 054A                             __ptext35 0C6B  
                           __ptext27 0D44                             __ptext19 0727  
                           __ptext36 0A3E                             __ptext28 0BE0  
                           __ptext37 0ABA                             __ptext29 0C3A  
                      _sensores_init 0AEA                             _ingresos 006E  
                           _intentos 006B                             _password 0614  
  funcion_monitoreo_ambiental@buffer 004C                             _vfprintf 0B23  
                         _LCD_String 0B69                         _temp_celsius 0067  
                     _intensidad_luz 0065            _funcion_monitoreo_puertas 0EC3  
              __end_of_keypad_getkey 054A                     _read_temperatura 079F  
                         _INTCONbits 000B                       ?_sensores_init 0070  
                           init_ram0 0AAB                          ??_read_hall 0074  
                       _valor_evento 0061                             intlevel1 0000  
                          sprintf@ap 003E                            stringcode 060E  
                        ??_vfpfcnvrt 002A               __Umul8_16@multiplicand 0072  
                           sprintf@f 0040                          _sensor_hall 0063  
                           sprintf@s 003F                             strncmp@l 0077  
                           strncmp@n 0073                             strncmp@r 0072  
                           stringdir 060E                             stringtab 0604  
                     keypad_getkey@i 0031                 __Umul8_16@multiplier 0024  
                  __Umul8_16@product 0020  
